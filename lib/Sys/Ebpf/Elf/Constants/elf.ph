require '_h2ph_pre.ph';

no warnings qw(redefine misc);

unless(defined(&_ELF_H)) {
    eval 'sub _ELF_H () {1;}' unless defined(&_ELF_H);

    # note: Manuel fix path
    require 'Sys/Ebpf/Elf/Constants/stdint.ph';
    eval 'sub EI_NIDENT () {(16);}' unless defined(&EI_NIDENT);
    eval 'sub EI_MAG0 () {0;}' unless defined(&EI_MAG0);
    eval 'sub ELFMAG0 () {0x7f;}' unless defined(&ELFMAG0);
    eval 'sub EI_MAG1 () {1;}' unless defined(&EI_MAG1);
    eval 'sub ELFMAG1 () {ord(\'E\');}' unless defined(&ELFMAG1);
    eval 'sub EI_MAG2 () {2;}' unless defined(&EI_MAG2);
    eval 'sub ELFMAG2 () {ord(\'L\');}' unless defined(&ELFMAG2);
    eval 'sub EI_MAG3 () {3;}' unless defined(&EI_MAG3);
    eval 'sub ELFMAG3 () {ord(\'F\');}' unless defined(&ELFMAG3);
    eval 'sub ELFMAG () {"\\177ELF";}' unless defined(&ELFMAG);
    eval 'sub SELFMAG () {4;}' unless defined(&SELFMAG);
    eval 'sub EI_CLASS () {4;}' unless defined(&EI_CLASS);
    eval 'sub ELFCLASSNONE () {0;}' unless defined(&ELFCLASSNONE);
    eval 'sub ELFCLASS32 () {1;}' unless defined(&ELFCLASS32);
    eval 'sub ELFCLASS64 () {2;}' unless defined(&ELFCLASS64);
    eval 'sub ELFCLASSNUM () {3;}' unless defined(&ELFCLASSNUM);
    eval 'sub EI_DATA () {5;}' unless defined(&EI_DATA);
    eval 'sub ELFDATANONE () {0;}' unless defined(&ELFDATANONE);
    eval 'sub ELFDATA2LSB () {1;}' unless defined(&ELFDATA2LSB);
    eval 'sub ELFDATA2MSB () {2;}' unless defined(&ELFDATA2MSB);
    eval 'sub ELFDATANUM () {3;}' unless defined(&ELFDATANUM);
    eval 'sub EI_VERSION () {6;}' unless defined(&EI_VERSION);
    eval 'sub EI_OSABI () {7;}' unless defined(&EI_OSABI);
    eval 'sub ELFOSABI_NONE () {0;}' unless defined(&ELFOSABI_NONE);
    eval 'sub ELFOSABI_SYSV () {0;}' unless defined(&ELFOSABI_SYSV);
    eval 'sub ELFOSABI_HPUX () {1;}' unless defined(&ELFOSABI_HPUX);
    eval 'sub ELFOSABI_NETBSD () {2;}' unless defined(&ELFOSABI_NETBSD);
    eval 'sub ELFOSABI_GNU () {3;}' unless defined(&ELFOSABI_GNU);
    eval 'sub ELFOSABI_LINUX () { &ELFOSABI_GNU;}' unless defined(&ELFOSABI_LINUX);
    eval 'sub ELFOSABI_SOLARIS () {6;}' unless defined(&ELFOSABI_SOLARIS);
    eval 'sub ELFOSABI_AIX () {7;}' unless defined(&ELFOSABI_AIX);
    eval 'sub ELFOSABI_IRIX () {8;}' unless defined(&ELFOSABI_IRIX);
    eval 'sub ELFOSABI_FREEBSD () {9;}' unless defined(&ELFOSABI_FREEBSD);
    eval 'sub ELFOSABI_TRU64 () {10;}' unless defined(&ELFOSABI_TRU64);
    eval 'sub ELFOSABI_MODESTO () {11;}' unless defined(&ELFOSABI_MODESTO);
    eval 'sub ELFOSABI_OPENBSD () {12;}' unless defined(&ELFOSABI_OPENBSD);
    eval 'sub ELFOSABI_ARM_AEABI () {64;}' unless defined(&ELFOSABI_ARM_AEABI);
    eval 'sub ELFOSABI_ARM () {97;}' unless defined(&ELFOSABI_ARM);
    eval 'sub ELFOSABI_STANDALONE () {255;}' unless defined(&ELFOSABI_STANDALONE);
    eval 'sub EI_ABIVERSION () {8;}' unless defined(&EI_ABIVERSION);
    eval 'sub EI_PAD () {9;}' unless defined(&EI_PAD);
    eval 'sub ET_NONE () {0;}' unless defined(&ET_NONE);
    eval 'sub ET_REL () {1;}' unless defined(&ET_REL);
    eval 'sub ET_EXEC () {2;}' unless defined(&ET_EXEC);
    eval 'sub ET_DYN () {3;}' unless defined(&ET_DYN);
    eval 'sub ET_CORE () {4;}' unless defined(&ET_CORE);
    eval 'sub ET_NUM () {5;}' unless defined(&ET_NUM);
    eval 'sub ET_LOOS () {0xfe00;}' unless defined(&ET_LOOS);
    eval 'sub ET_HIOS () {0xfeff;}' unless defined(&ET_HIOS);
    eval 'sub ET_LOPROC () {0xff00;}' unless defined(&ET_LOPROC);
    eval 'sub ET_HIPROC () {0xffff;}' unless defined(&ET_HIPROC);
    eval 'sub EM_NONE () {0;}' unless defined(&EM_NONE);
    eval 'sub EM_M32 () {1;}' unless defined(&EM_M32);
    eval 'sub EM_SPARC () {2;}' unless defined(&EM_SPARC);
    eval 'sub EM_386 () {3;}' unless defined(&EM_386);
    eval 'sub EM_68K () {4;}' unless defined(&EM_68K);
    eval 'sub EM_88K () {5;}' unless defined(&EM_88K);
    eval 'sub EM_IAMCU () {6;}' unless defined(&EM_IAMCU);
    eval 'sub EM_860 () {7;}' unless defined(&EM_860);
    eval 'sub EM_MIPS () {8;}' unless defined(&EM_MIPS);
    eval 'sub EM_S370 () {9;}' unless defined(&EM_S370);
    eval 'sub EM_MIPS_RS3_LE () {10;}' unless defined(&EM_MIPS_RS3_LE);
    eval 'sub EM_PARISC () {15;}' unless defined(&EM_PARISC);
    eval 'sub EM_VPP500 () {17;}' unless defined(&EM_VPP500);
    eval 'sub EM_SPARC32PLUS () {18;}' unless defined(&EM_SPARC32PLUS);
    eval 'sub EM_960 () {19;}' unless defined(&EM_960);
    eval 'sub EM_PPC () {20;}' unless defined(&EM_PPC);
    eval 'sub EM_PPC64 () {21;}' unless defined(&EM_PPC64);
    eval 'sub EM_S390 () {22;}' unless defined(&EM_S390);
    eval 'sub EM_SPU () {23;}' unless defined(&EM_SPU);
    eval 'sub EM_V800 () {36;}' unless defined(&EM_V800);
    eval 'sub EM_FR20 () {37;}' unless defined(&EM_FR20);
    eval 'sub EM_RH32 () {38;}' unless defined(&EM_RH32);
    eval 'sub EM_RCE () {39;}' unless defined(&EM_RCE);
    eval 'sub EM_ARM () {40;}' unless defined(&EM_ARM);
    eval 'sub EM_FAKE_ALPHA () {41;}' unless defined(&EM_FAKE_ALPHA);
    eval 'sub EM_SH () {42;}' unless defined(&EM_SH);
    eval 'sub EM_SPARCV9 () {43;}' unless defined(&EM_SPARCV9);
    eval 'sub EM_TRICORE () {44;}' unless defined(&EM_TRICORE);
    eval 'sub EM_ARC () {45;}' unless defined(&EM_ARC);
    eval 'sub EM_H8_300 () {46;}' unless defined(&EM_H8_300);
    eval 'sub EM_H8_300H () {47;}' unless defined(&EM_H8_300H);
    eval 'sub EM_H8S () {48;}' unless defined(&EM_H8S);
    eval 'sub EM_H8_500 () {49;}' unless defined(&EM_H8_500);
    eval 'sub EM_IA_64 () {50;}' unless defined(&EM_IA_64);
    eval 'sub EM_MIPS_X () {51;}' unless defined(&EM_MIPS_X);
    eval 'sub EM_COLDFIRE () {52;}' unless defined(&EM_COLDFIRE);
    eval 'sub EM_68HC12 () {53;}' unless defined(&EM_68HC12);
    eval 'sub EM_MMA () {54;}' unless defined(&EM_MMA);
    eval 'sub EM_PCP () {55;}' unless defined(&EM_PCP);
    eval 'sub EM_NCPU () {56;}' unless defined(&EM_NCPU);
    eval 'sub EM_NDR1 () {57;}' unless defined(&EM_NDR1);
    eval 'sub EM_STARCORE () {58;}' unless defined(&EM_STARCORE);
    eval 'sub EM_ME16 () {59;}' unless defined(&EM_ME16);
    eval 'sub EM_ST100 () {60;}' unless defined(&EM_ST100);
    eval 'sub EM_TINYJ () {61;}' unless defined(&EM_TINYJ);
    eval 'sub EM_X86_64 () {62;}' unless defined(&EM_X86_64);
    eval 'sub EM_PDSP () {63;}' unless defined(&EM_PDSP);
    eval 'sub EM_PDP10 () {64;}' unless defined(&EM_PDP10);
    eval 'sub EM_PDP11 () {65;}' unless defined(&EM_PDP11);
    eval 'sub EM_FX66 () {66;}' unless defined(&EM_FX66);
    eval 'sub EM_ST9PLUS () {67;}' unless defined(&EM_ST9PLUS);
    eval 'sub EM_ST7 () {68;}' unless defined(&EM_ST7);
    eval 'sub EM_68HC16 () {69;}' unless defined(&EM_68HC16);
    eval 'sub EM_68HC11 () {70;}' unless defined(&EM_68HC11);
    eval 'sub EM_68HC08 () {71;}' unless defined(&EM_68HC08);
    eval 'sub EM_68HC05 () {72;}' unless defined(&EM_68HC05);
    eval 'sub EM_SVX () {73;}' unless defined(&EM_SVX);
    eval 'sub EM_ST19 () {74;}' unless defined(&EM_ST19);
    eval 'sub EM_VAX () {75;}' unless defined(&EM_VAX);
    eval 'sub EM_CRIS () {76;}' unless defined(&EM_CRIS);
    eval 'sub EM_JAVELIN () {77;}' unless defined(&EM_JAVELIN);
    eval 'sub EM_FIREPATH () {78;}' unless defined(&EM_FIREPATH);
    eval 'sub EM_ZSP () {79;}' unless defined(&EM_ZSP);
    eval 'sub EM_MMIX () {80;}' unless defined(&EM_MMIX);
    eval 'sub EM_HUANY () {81;}' unless defined(&EM_HUANY);
    eval 'sub EM_PRISM () {82;}' unless defined(&EM_PRISM);
    eval 'sub EM_AVR () {83;}' unless defined(&EM_AVR);
    eval 'sub EM_FR30 () {84;}' unless defined(&EM_FR30);
    eval 'sub EM_D10V () {85;}' unless defined(&EM_D10V);
    eval 'sub EM_D30V () {86;}' unless defined(&EM_D30V);
    eval 'sub EM_V850 () {87;}' unless defined(&EM_V850);
    eval 'sub EM_M32R () {88;}' unless defined(&EM_M32R);
    eval 'sub EM_MN10300 () {89;}' unless defined(&EM_MN10300);
    eval 'sub EM_MN10200 () {90;}' unless defined(&EM_MN10200);
    eval 'sub EM_PJ () {91;}' unless defined(&EM_PJ);
    eval 'sub EM_OPENRISC () {92;}' unless defined(&EM_OPENRISC);
    eval 'sub EM_ARC_COMPACT () {93;}' unless defined(&EM_ARC_COMPACT);
    eval 'sub EM_XTENSA () {94;}' unless defined(&EM_XTENSA);
    eval 'sub EM_VIDEOCORE () {95;}' unless defined(&EM_VIDEOCORE);
    eval 'sub EM_TMM_GPP () {96;}' unless defined(&EM_TMM_GPP);
    eval 'sub EM_NS32K () {97;}' unless defined(&EM_NS32K);
    eval 'sub EM_TPC () {98;}' unless defined(&EM_TPC);
    eval 'sub EM_SNP1K () {99;}' unless defined(&EM_SNP1K);
    eval 'sub EM_ST200 () {100;}' unless defined(&EM_ST200);
    eval 'sub EM_IP2K () {101;}' unless defined(&EM_IP2K);
    eval 'sub EM_MAX () {102;}' unless defined(&EM_MAX);
    eval 'sub EM_CR () {103;}' unless defined(&EM_CR);
    eval 'sub EM_F2MC16 () {104;}' unless defined(&EM_F2MC16);
    eval 'sub EM_MSP430 () {105;}' unless defined(&EM_MSP430);
    eval 'sub EM_BLACKFIN () {106;}' unless defined(&EM_BLACKFIN);
    eval 'sub EM_SE_C33 () {107;}' unless defined(&EM_SE_C33);
    eval 'sub EM_SEP () {108;}' unless defined(&EM_SEP);
    eval 'sub EM_ARCA () {109;}' unless defined(&EM_ARCA);
    eval 'sub EM_UNICORE () {110;}' unless defined(&EM_UNICORE);
    eval 'sub EM_EXCESS () {111;}' unless defined(&EM_EXCESS);
    eval 'sub EM_DXP () {112;}' unless defined(&EM_DXP);
    eval 'sub EM_ALTERA_NIOS2 () {113;}' unless defined(&EM_ALTERA_NIOS2);
    eval 'sub EM_CRX () {114;}' unless defined(&EM_CRX);
    eval 'sub EM_XGATE () {115;}' unless defined(&EM_XGATE);
    eval 'sub EM_C166 () {116;}' unless defined(&EM_C166);
    eval 'sub EM_M16C () {117;}' unless defined(&EM_M16C);
    eval 'sub EM_DSPIC30F () {118;}' unless defined(&EM_DSPIC30F);
    eval 'sub EM_CE () {119;}' unless defined(&EM_CE);
    eval 'sub EM_M32C () {120;}' unless defined(&EM_M32C);
    eval 'sub EM_TSK3000 () {131;}' unless defined(&EM_TSK3000);
    eval 'sub EM_RS08 () {132;}' unless defined(&EM_RS08);
    eval 'sub EM_SHARC () {133;}' unless defined(&EM_SHARC);
    eval 'sub EM_ECOG2 () {134;}' unless defined(&EM_ECOG2);
    eval 'sub EM_SCORE7 () {135;}' unless defined(&EM_SCORE7);
    eval 'sub EM_DSP24 () {136;}' unless defined(&EM_DSP24);
    eval 'sub EM_VIDEOCORE3 () {137;}' unless defined(&EM_VIDEOCORE3);
    eval 'sub EM_LATTICEMICO32 () {138;}' unless defined(&EM_LATTICEMICO32);
    eval 'sub EM_SE_C17 () {139;}' unless defined(&EM_SE_C17);
    eval 'sub EM_TI_C6000 () {140;}' unless defined(&EM_TI_C6000);
    eval 'sub EM_TI_C2000 () {141;}' unless defined(&EM_TI_C2000);
    eval 'sub EM_TI_C5500 () {142;}' unless defined(&EM_TI_C5500);
    eval 'sub EM_TI_ARP32 () {143;}' unless defined(&EM_TI_ARP32);
    eval 'sub EM_TI_PRU () {144;}' unless defined(&EM_TI_PRU);
    eval 'sub EM_MMDSP_PLUS () {160;}' unless defined(&EM_MMDSP_PLUS);
    eval 'sub EM_CYPRESS_M8C () {161;}' unless defined(&EM_CYPRESS_M8C);
    eval 'sub EM_R32C () {162;}' unless defined(&EM_R32C);
    eval 'sub EM_TRIMEDIA () {163;}' unless defined(&EM_TRIMEDIA);
    eval 'sub EM_QDSP6 () {164;}' unless defined(&EM_QDSP6);
    eval 'sub EM_8051 () {165;}' unless defined(&EM_8051);
    eval 'sub EM_STXP7X () {166;}' unless defined(&EM_STXP7X);
    eval 'sub EM_NDS32 () {167;}' unless defined(&EM_NDS32);
    eval 'sub EM_ECOG1X () {168;}' unless defined(&EM_ECOG1X);
    eval 'sub EM_MAXQ30 () {169;}' unless defined(&EM_MAXQ30);
    eval 'sub EM_XIMO16 () {170;}' unless defined(&EM_XIMO16);
    eval 'sub EM_MANIK () {171;}' unless defined(&EM_MANIK);
    eval 'sub EM_CRAYNV2 () {172;}' unless defined(&EM_CRAYNV2);
    eval 'sub EM_RX () {173;}' unless defined(&EM_RX);
    eval 'sub EM_METAG () {174;}' unless defined(&EM_METAG);
    eval 'sub EM_MCST_ELBRUS () {175;}' unless defined(&EM_MCST_ELBRUS);
    eval 'sub EM_ECOG16 () {176;}' unless defined(&EM_ECOG16);
    eval 'sub EM_CR16 () {177;}' unless defined(&EM_CR16);
    eval 'sub EM_ETPU () {178;}' unless defined(&EM_ETPU);
    eval 'sub EM_SLE9X () {179;}' unless defined(&EM_SLE9X);
    eval 'sub EM_L10M () {180;}' unless defined(&EM_L10M);
    eval 'sub EM_K10M () {181;}' unless defined(&EM_K10M);
    eval 'sub EM_AARCH64 () {183;}' unless defined(&EM_AARCH64);
    eval 'sub EM_AVR32 () {185;}' unless defined(&EM_AVR32);
    eval 'sub EM_STM8 () {186;}' unless defined(&EM_STM8);
    eval 'sub EM_TILE64 () {187;}' unless defined(&EM_TILE64);
    eval 'sub EM_TILEPRO () {188;}' unless defined(&EM_TILEPRO);
    eval 'sub EM_MICROBLAZE () {189;}' unless defined(&EM_MICROBLAZE);
    eval 'sub EM_CUDA () {190;}' unless defined(&EM_CUDA);
    eval 'sub EM_TILEGX () {191;}' unless defined(&EM_TILEGX);
    eval 'sub EM_CLOUDSHIELD () {192;}' unless defined(&EM_CLOUDSHIELD);
    eval 'sub EM_COREA_1ST () {193;}' unless defined(&EM_COREA_1ST);
    eval 'sub EM_COREA_2ND () {194;}' unless defined(&EM_COREA_2ND);
    eval 'sub EM_ARCV2 () {195;}' unless defined(&EM_ARCV2);
    eval 'sub EM_OPEN8 () {196;}' unless defined(&EM_OPEN8);
    eval 'sub EM_RL78 () {197;}' unless defined(&EM_RL78);
    eval 'sub EM_VIDEOCORE5 () {198;}' unless defined(&EM_VIDEOCORE5);
    eval 'sub EM_78KOR () {199;}' unless defined(&EM_78KOR);
    eval 'sub EM_56800EX () {200;}' unless defined(&EM_56800EX);
    eval 'sub EM_BA1 () {201;}' unless defined(&EM_BA1);
    eval 'sub EM_BA2 () {202;}' unless defined(&EM_BA2);
    eval 'sub EM_XCORE () {203;}' unless defined(&EM_XCORE);
    eval 'sub EM_MCHP_PIC () {204;}' unless defined(&EM_MCHP_PIC);
    eval 'sub EM_INTELGT () {205;}' unless defined(&EM_INTELGT);
    eval 'sub EM_KM32 () {210;}' unless defined(&EM_KM32);
    eval 'sub EM_KMX32 () {211;}' unless defined(&EM_KMX32);
    eval 'sub EM_EMX16 () {212;}' unless defined(&EM_EMX16);
    eval 'sub EM_EMX8 () {213;}' unless defined(&EM_EMX8);
    eval 'sub EM_KVARC () {214;}' unless defined(&EM_KVARC);
    eval 'sub EM_CDP () {215;}' unless defined(&EM_CDP);
    eval 'sub EM_COGE () {216;}' unless defined(&EM_COGE);
    eval 'sub EM_COOL () {217;}' unless defined(&EM_COOL);
    eval 'sub EM_NORC () {218;}' unless defined(&EM_NORC);
    eval 'sub EM_CSR_KALIMBA () {219;}' unless defined(&EM_CSR_KALIMBA);
    eval 'sub EM_Z80 () {220;}' unless defined(&EM_Z80);
    eval 'sub EM_VISIUM () {221;}' unless defined(&EM_VISIUM);
    eval 'sub EM_FT32 () {222;}' unless defined(&EM_FT32);
    eval 'sub EM_MOXIE () {223;}' unless defined(&EM_MOXIE);
    eval 'sub EM_AMDGPU () {224;}' unless defined(&EM_AMDGPU);
    eval 'sub EM_RISCV () {243;}' unless defined(&EM_RISCV);
    eval 'sub EM_BPF () {247;}' unless defined(&EM_BPF);
    eval 'sub EM_CSKY () {252;}' unless defined(&EM_CSKY);
    eval 'sub EM_NUM () {253;}' unless defined(&EM_NUM);
    eval 'sub EM_ARC_A5 () { &EM_ARC_COMPACT;}' unless defined(&EM_ARC_A5);
    eval 'sub EM_ALPHA () {0x9026;}' unless defined(&EM_ALPHA);
    eval 'sub EV_NONE () {0;}' unless defined(&EV_NONE);
    eval 'sub EV_CURRENT () {1;}' unless defined(&EV_CURRENT);
    eval 'sub EV_NUM () {2;}' unless defined(&EV_NUM);
    eval 'sub SHN_UNDEF () {0;}' unless defined(&SHN_UNDEF);
    eval 'sub SHN_LORESERVE () {0xff00;}' unless defined(&SHN_LORESERVE);
    eval 'sub SHN_LOPROC () {0xff00;}' unless defined(&SHN_LOPROC);
    eval 'sub SHN_BEFORE () {0xff00;}' unless defined(&SHN_BEFORE);
    eval 'sub SHN_AFTER () {0xff01;}' unless defined(&SHN_AFTER);
    eval 'sub SHN_HIPROC () {0xff1f;}' unless defined(&SHN_HIPROC);
    eval 'sub SHN_LOOS () {0xff20;}' unless defined(&SHN_LOOS);
    eval 'sub SHN_HIOS () {0xff3f;}' unless defined(&SHN_HIOS);
    eval 'sub SHN_ABS () {0xfff1;}' unless defined(&SHN_ABS);
    eval 'sub SHN_COMMON () {0xfff2;}' unless defined(&SHN_COMMON);
    eval 'sub SHN_XINDEX () {0xffff;}' unless defined(&SHN_XINDEX);
    eval 'sub SHN_HIRESERVE () {0xffff;}' unless defined(&SHN_HIRESERVE);
    eval 'sub SHT_NULL () {0;}' unless defined(&SHT_NULL);
    eval 'sub SHT_PROGBITS () {1;}' unless defined(&SHT_PROGBITS);
    eval 'sub SHT_SYMTAB () {2;}' unless defined(&SHT_SYMTAB);
    eval 'sub SHT_STRTAB () {3;}' unless defined(&SHT_STRTAB);
    eval 'sub SHT_RELA () {4;}' unless defined(&SHT_RELA);
    eval 'sub SHT_HASH () {5;}' unless defined(&SHT_HASH);
    eval 'sub SHT_DYNAMIC () {6;}' unless defined(&SHT_DYNAMIC);
    eval 'sub SHT_NOTE () {7;}' unless defined(&SHT_NOTE);
    eval 'sub SHT_NOBITS () {8;}' unless defined(&SHT_NOBITS);
    eval 'sub SHT_REL () {9;}' unless defined(&SHT_REL);
    eval 'sub SHT_SHLIB () {10;}' unless defined(&SHT_SHLIB);
    eval 'sub SHT_DYNSYM () {11;}' unless defined(&SHT_DYNSYM);
    eval 'sub SHT_INIT_ARRAY () {14;}' unless defined(&SHT_INIT_ARRAY);
    eval 'sub SHT_FINI_ARRAY () {15;}' unless defined(&SHT_FINI_ARRAY);
    eval 'sub SHT_PREINIT_ARRAY () {16;}' unless defined(&SHT_PREINIT_ARRAY);
    eval 'sub SHT_GROUP () {17;}' unless defined(&SHT_GROUP);
    eval 'sub SHT_SYMTAB_SHNDX () {18;}' unless defined(&SHT_SYMTAB_SHNDX);
    eval 'sub SHT_NUM () {19;}' unless defined(&SHT_NUM);
    eval 'sub SHT_LOOS () {0x60000000;}' unless defined(&SHT_LOOS);
    eval 'sub SHT_GNU_ATTRIBUTES () {0x6ffffff5;}' unless defined(&SHT_GNU_ATTRIBUTES);
    eval 'sub SHT_GNU_HASH () {0x6ffffff6;}' unless defined(&SHT_GNU_HASH);
    eval 'sub SHT_GNU_LIBLIST () {0x6ffffff7;}' unless defined(&SHT_GNU_LIBLIST);
    eval 'sub SHT_CHECKSUM () {0x6ffffff8;}' unless defined(&SHT_CHECKSUM);
    eval 'sub SHT_LOSUNW () {0x6ffffffa;}' unless defined(&SHT_LOSUNW);
    eval 'sub SHT_SUNW_move () {0x6ffffffa;}' unless defined(&SHT_SUNW_move);
    eval 'sub SHT_SUNW_COMDAT () {0x6ffffffb;}' unless defined(&SHT_SUNW_COMDAT);
    eval 'sub SHT_SUNW_syminfo () {0x6ffffffc;}' unless defined(&SHT_SUNW_syminfo);
    eval 'sub SHT_GNU_verdef () {0x6ffffffd;}' unless defined(&SHT_GNU_verdef);
    eval 'sub SHT_GNU_verneed () {0x6ffffffe;}' unless defined(&SHT_GNU_verneed);
    eval 'sub SHT_GNU_versym () {0x6fffffff;}' unless defined(&SHT_GNU_versym);
    eval 'sub SHT_HISUNW () {0x6fffffff;}' unless defined(&SHT_HISUNW);
    eval 'sub SHT_HIOS () {0x6fffffff;}' unless defined(&SHT_HIOS);
    eval 'sub SHT_LOPROC () {0x70000000;}' unless defined(&SHT_LOPROC);
    eval 'sub SHT_HIPROC () {0x7fffffff;}' unless defined(&SHT_HIPROC);
    eval 'sub SHT_LOUSER () {0x80000000;}' unless defined(&SHT_LOUSER);
    eval 'sub SHT_HIUSER () {0x8fffffff;}' unless defined(&SHT_HIUSER);
    eval 'sub SHF_WRITE () {(1<< 0);}' unless defined(&SHF_WRITE);
    eval 'sub SHF_ALLOC () {(1<< 1);}' unless defined(&SHF_ALLOC);
    eval 'sub SHF_EXECINSTR () {(1<< 2);}' unless defined(&SHF_EXECINSTR);
    eval 'sub SHF_MERGE () {(1<< 4);}' unless defined(&SHF_MERGE);
    eval 'sub SHF_STRINGS () {(1<< 5);}' unless defined(&SHF_STRINGS);
    eval 'sub SHF_INFO_LINK () {(1<< 6);}' unless defined(&SHF_INFO_LINK);
    eval 'sub SHF_LINK_ORDER () {(1<< 7);}' unless defined(&SHF_LINK_ORDER);
    eval 'sub SHF_OS_NONCONFORMING () {(1<< 8);}' unless defined(&SHF_OS_NONCONFORMING);
    eval 'sub SHF_GROUP () {(1<< 9);}' unless defined(&SHF_GROUP);
    eval 'sub SHF_TLS () {(1<< 10);}' unless defined(&SHF_TLS);
    eval 'sub SHF_COMPRESSED () {(1<< 11);}' unless defined(&SHF_COMPRESSED);
    eval 'sub SHF_MASKOS () {0xff00000;}' unless defined(&SHF_MASKOS);
    eval 'sub SHF_MASKPROC () {0xf0000000;}' unless defined(&SHF_MASKPROC);
    eval 'sub SHF_GNU_RETAIN () {(1<< 21);}' unless defined(&SHF_GNU_RETAIN);
    eval 'sub SHF_ORDERED () {(1<< 30);}' unless defined(&SHF_ORDERED);
    eval 'sub SHF_EXCLUDE () {(1 << 31);}' unless defined(&SHF_EXCLUDE);
    eval 'sub ELFCOMPRESS_ZLIB () {1;}' unless defined(&ELFCOMPRESS_ZLIB);
    eval 'sub ELFCOMPRESS_LOOS () {0x60000000;}' unless defined(&ELFCOMPRESS_LOOS);
    eval 'sub ELFCOMPRESS_HIOS () {0x6fffffff;}' unless defined(&ELFCOMPRESS_HIOS);
    eval 'sub ELFCOMPRESS_LOPROC () {0x70000000;}' unless defined(&ELFCOMPRESS_LOPROC);
    eval 'sub ELFCOMPRESS_HIPROC () {0x7fffffff;}' unless defined(&ELFCOMPRESS_HIPROC);
    eval 'sub GRP_COMDAT () {0x1;}' unless defined(&GRP_COMDAT);
    eval 'sub SYMINFO_BT_SELF () {0xffff;}' unless defined(&SYMINFO_BT_SELF);
    eval 'sub SYMINFO_BT_PARENT () {0xfffe;}' unless defined(&SYMINFO_BT_PARENT);
    eval 'sub SYMINFO_BT_LOWRESERVE () {0xff00;}' unless defined(&SYMINFO_BT_LOWRESERVE);
    eval 'sub SYMINFO_FLG_DIRECT () {0x1;}' unless defined(&SYMINFO_FLG_DIRECT);
    eval 'sub SYMINFO_FLG_PASSTHRU () {0x2;}' unless defined(&SYMINFO_FLG_PASSTHRU);
    eval 'sub SYMINFO_FLG_COPY () {0x4;}' unless defined(&SYMINFO_FLG_COPY);
    eval 'sub SYMINFO_FLG_LAZYLOAD () {0x8;}' unless defined(&SYMINFO_FLG_LAZYLOAD);
    eval 'sub SYMINFO_NONE () {0;}' unless defined(&SYMINFO_NONE);
    eval 'sub SYMINFO_CURRENT () {1;}' unless defined(&SYMINFO_CURRENT);
    eval 'sub SYMINFO_NUM () {2;}' unless defined(&SYMINFO_NUM);
    eval 'sub ELF32_ST_BIND {
        my($val) = @_;
	    eval q((( ($val)) >> 4));
    }' unless defined(&ELF32_ST_BIND);
    eval 'sub ELF32_ST_TYPE {
        my($val) = @_;
	    eval q((($val) & 0xf));
    }' unless defined(&ELF32_ST_TYPE);
    eval 'sub ELF32_ST_INFO {
        my($bind, $type) = @_;
	    eval q(((($bind) << 4) + (($type) & 0xf)));
    }' unless defined(&ELF32_ST_INFO);
    eval 'sub ELF64_ST_BIND {
        my($val) = @_;
	    eval q( &ELF32_ST_BIND ($val));
    }' unless defined(&ELF64_ST_BIND);
    eval 'sub ELF64_ST_TYPE {
        my($val) = @_;
	    eval q( &ELF32_ST_TYPE ($val));
    }' unless defined(&ELF64_ST_TYPE);
    eval 'sub ELF64_ST_INFO {
        my($bind, $type) = @_;
	    eval q( &ELF32_ST_INFO (($bind), ($type)));
    }' unless defined(&ELF64_ST_INFO);
    eval 'sub STB_LOCAL () {0;}' unless defined(&STB_LOCAL);
    eval 'sub STB_GLOBAL () {1;}' unless defined(&STB_GLOBAL);
    eval 'sub STB_WEAK () {2;}' unless defined(&STB_WEAK);
    eval 'sub STB_NUM () {3;}' unless defined(&STB_NUM);
    eval 'sub STB_LOOS () {10;}' unless defined(&STB_LOOS);
    eval 'sub STB_GNU_UNIQUE () {10;}' unless defined(&STB_GNU_UNIQUE);
    eval 'sub STB_HIOS () {12;}' unless defined(&STB_HIOS);
    eval 'sub STB_LOPROC () {13;}' unless defined(&STB_LOPROC);
    eval 'sub STB_HIPROC () {15;}' unless defined(&STB_HIPROC);
    eval 'sub STT_NOTYPE () {0;}' unless defined(&STT_NOTYPE);
    eval 'sub STT_OBJECT () {1;}' unless defined(&STT_OBJECT);
    eval 'sub STT_FUNC () {2;}' unless defined(&STT_FUNC);
    eval 'sub STT_SECTION () {3;}' unless defined(&STT_SECTION);
    eval 'sub STT_FILE () {4;}' unless defined(&STT_FILE);
    eval 'sub STT_COMMON () {5;}' unless defined(&STT_COMMON);
    eval 'sub STT_TLS () {6;}' unless defined(&STT_TLS);
    eval 'sub STT_NUM () {7;}' unless defined(&STT_NUM);
    eval 'sub STT_LOOS () {10;}' unless defined(&STT_LOOS);
    eval 'sub STT_GNU_IFUNC () {10;}' unless defined(&STT_GNU_IFUNC);
    eval 'sub STT_HIOS () {12;}' unless defined(&STT_HIOS);
    eval 'sub STT_LOPROC () {13;}' unless defined(&STT_LOPROC);
    eval 'sub STT_HIPROC () {15;}' unless defined(&STT_HIPROC);
    eval 'sub STN_UNDEF () {0;}' unless defined(&STN_UNDEF);
    eval 'sub ELF32_ST_VISIBILITY {
        my($o) = @_;
	    eval q((($o) & 0x3));
    }' unless defined(&ELF32_ST_VISIBILITY);
    eval 'sub ELF64_ST_VISIBILITY {
        my($o) = @_;
	    eval q( &ELF32_ST_VISIBILITY ($o));
    }' unless defined(&ELF64_ST_VISIBILITY);
    eval 'sub STV_DEFAULT () {0;}' unless defined(&STV_DEFAULT);
    eval 'sub STV_INTERNAL () {1;}' unless defined(&STV_INTERNAL);
    eval 'sub STV_HIDDEN () {2;}' unless defined(&STV_HIDDEN);
    eval 'sub STV_PROTECTED () {3;}' unless defined(&STV_PROTECTED);
    eval 'sub ELF32_R_SYM {
        my($val) = @_;
	    eval q((($val) >> 8));
    }' unless defined(&ELF32_R_SYM);
    eval 'sub ELF32_R_TYPE {
        my($val) = @_;
	    eval q((($val) & 0xff));
    }' unless defined(&ELF32_R_TYPE);
    eval 'sub ELF32_R_INFO {
        my($sym, $type) = @_;
	    eval q(((($sym) << 8) + (($type) & 0xff)));
    }' unless defined(&ELF32_R_INFO);
    eval 'sub ELF64_R_SYM {
        my($i) = @_;
	    eval q((($i) >> 32));
    }' unless defined(&ELF64_R_SYM);
    eval 'sub ELF64_R_TYPE {
        my($i) = @_;
	    eval q((($i) & 0xffffffff));
    }' unless defined(&ELF64_R_TYPE);
    eval 'sub ELF64_R_INFO {
        my($sym,$type) = @_;
	    eval q((((( &Elf64_Xword) ($sym)) << 32) + ($type)));
    }' unless defined(&ELF64_R_INFO);
    eval 'sub PN_XNUM () {0xffff;}' unless defined(&PN_XNUM);
    eval 'sub PT_NULL () {0;}' unless defined(&PT_NULL);
    eval 'sub PT_LOAD () {1;}' unless defined(&PT_LOAD);
    eval 'sub PT_DYNAMIC () {2;}' unless defined(&PT_DYNAMIC);
    eval 'sub PT_INTERP () {3;}' unless defined(&PT_INTERP);
    eval 'sub PT_NOTE () {4;}' unless defined(&PT_NOTE);
    eval 'sub PT_SHLIB () {5;}' unless defined(&PT_SHLIB);
    eval 'sub PT_PHDR () {6;}' unless defined(&PT_PHDR);
    eval 'sub PT_TLS () {7;}' unless defined(&PT_TLS);
    eval 'sub PT_NUM () {8;}' unless defined(&PT_NUM);
    eval 'sub PT_LOOS () {0x60000000;}' unless defined(&PT_LOOS);
    eval 'sub PT_GNU_EH_FRAME () {0x6474e550;}' unless defined(&PT_GNU_EH_FRAME);
    eval 'sub PT_GNU_STACK () {0x6474e551;}' unless defined(&PT_GNU_STACK);
    eval 'sub PT_GNU_RELRO () {0x6474e552;}' unless defined(&PT_GNU_RELRO);
    eval 'sub PT_GNU_PROPERTY () {0x6474e553;}' unless defined(&PT_GNU_PROPERTY);
    eval 'sub PT_LOSUNW () {0x6ffffffa;}' unless defined(&PT_LOSUNW);
    eval 'sub PT_SUNWBSS () {0x6ffffffa;}' unless defined(&PT_SUNWBSS);
    eval 'sub PT_SUNWSTACK () {0x6ffffffb;}' unless defined(&PT_SUNWSTACK);
    eval 'sub PT_HISUNW () {0x6fffffff;}' unless defined(&PT_HISUNW);
    eval 'sub PT_HIOS () {0x6fffffff;}' unless defined(&PT_HIOS);
    eval 'sub PT_LOPROC () {0x70000000;}' unless defined(&PT_LOPROC);
    eval 'sub PT_HIPROC () {0x7fffffff;}' unless defined(&PT_HIPROC);
    eval 'sub PF_X () {(1<< 0);}' unless defined(&PF_X);
    eval 'sub PF_W () {(1<< 1);}' unless defined(&PF_W);
    eval 'sub PF_R () {(1<< 2);}' unless defined(&PF_R);
    eval 'sub PF_MASKOS () {0xff00000;}' unless defined(&PF_MASKOS);
    eval 'sub PF_MASKPROC () {0xf0000000;}' unless defined(&PF_MASKPROC);
    eval 'sub NT_PRSTATUS () {1;}' unless defined(&NT_PRSTATUS);
    eval 'sub NT_PRFPREG () {2;}' unless defined(&NT_PRFPREG);
    eval 'sub NT_FPREGSET () {2;}' unless defined(&NT_FPREGSET);
    eval 'sub NT_PRPSINFO () {3;}' unless defined(&NT_PRPSINFO);
    eval 'sub NT_PRXREG () {4;}' unless defined(&NT_PRXREG);
    eval 'sub NT_TASKSTRUCT () {4;}' unless defined(&NT_TASKSTRUCT);
    eval 'sub NT_PLATFORM () {5;}' unless defined(&NT_PLATFORM);
    eval 'sub NT_AUXV () {6;}' unless defined(&NT_AUXV);
    eval 'sub NT_GWINDOWS () {7;}' unless defined(&NT_GWINDOWS);
    eval 'sub NT_ASRS () {8;}' unless defined(&NT_ASRS);
    eval 'sub NT_PSTATUS () {10;}' unless defined(&NT_PSTATUS);
    eval 'sub NT_PSINFO () {13;}' unless defined(&NT_PSINFO);
    eval 'sub NT_PRCRED () {14;}' unless defined(&NT_PRCRED);
    eval 'sub NT_UTSNAME () {15;}' unless defined(&NT_UTSNAME);
    eval 'sub NT_LWPSTATUS () {16;}' unless defined(&NT_LWPSTATUS);
    eval 'sub NT_LWPSINFO () {17;}' unless defined(&NT_LWPSINFO);
    eval 'sub NT_PRFPXREG () {20;}' unless defined(&NT_PRFPXREG);
    eval 'sub NT_SIGINFO () {0x53494749;}' unless defined(&NT_SIGINFO);
    eval 'sub NT_FILE () {0x46494c45;}' unless defined(&NT_FILE);
    eval 'sub NT_PRXFPREG () {0x46e62b7f;}' unless defined(&NT_PRXFPREG);
    eval 'sub NT_PPC_VMX () {0x100;}' unless defined(&NT_PPC_VMX);
    eval 'sub NT_PPC_SPE () {0x101;}' unless defined(&NT_PPC_SPE);
    eval 'sub NT_PPC_VSX () {0x102;}' unless defined(&NT_PPC_VSX);
    eval 'sub NT_PPC_TAR () {0x103;}' unless defined(&NT_PPC_TAR);
    eval 'sub NT_PPC_PPR () {0x104;}' unless defined(&NT_PPC_PPR);
    eval 'sub NT_PPC_DSCR () {0x105;}' unless defined(&NT_PPC_DSCR);
    eval 'sub NT_PPC_EBB () {0x106;}' unless defined(&NT_PPC_EBB);
    eval 'sub NT_PPC_PMU () {0x107;}' unless defined(&NT_PPC_PMU);
    eval 'sub NT_PPC_TM_CGPR () {0x108;}' unless defined(&NT_PPC_TM_CGPR);
    eval 'sub NT_PPC_TM_CFPR () {0x109;}' unless defined(&NT_PPC_TM_CFPR);
    eval 'sub NT_PPC_TM_CVMX () {0x10a;}' unless defined(&NT_PPC_TM_CVMX);
    eval 'sub NT_PPC_TM_CVSX () {0x10b;}' unless defined(&NT_PPC_TM_CVSX);
    eval 'sub NT_PPC_TM_SPR () {0x10c;}' unless defined(&NT_PPC_TM_SPR);
    eval 'sub NT_PPC_TM_CTAR () {0x10d;}' unless defined(&NT_PPC_TM_CTAR);
    eval 'sub NT_PPC_TM_CPPR () {0x10e;}' unless defined(&NT_PPC_TM_CPPR);
    eval 'sub NT_PPC_TM_CDSCR () {0x10f;}' unless defined(&NT_PPC_TM_CDSCR);
    eval 'sub NT_PPC_PKEY () {0x110;}' unless defined(&NT_PPC_PKEY);
    eval 'sub NT_386_TLS () {0x200;}' unless defined(&NT_386_TLS);
    eval 'sub NT_386_IOPERM () {0x201;}' unless defined(&NT_386_IOPERM);
    eval 'sub NT_X86_XSTATE () {0x202;}' unless defined(&NT_X86_XSTATE);
    eval 'sub NT_S390_HIGH_GPRS () {0x300;}' unless defined(&NT_S390_HIGH_GPRS);
    eval 'sub NT_S390_TIMER () {0x301;}' unless defined(&NT_S390_TIMER);
    eval 'sub NT_S390_TODCMP () {0x302;}' unless defined(&NT_S390_TODCMP);
    eval 'sub NT_S390_TODPREG () {0x303;}' unless defined(&NT_S390_TODPREG);
    eval 'sub NT_S390_CTRS () {0x304;}' unless defined(&NT_S390_CTRS);
    eval 'sub NT_S390_PREFIX () {0x305;}' unless defined(&NT_S390_PREFIX);
    eval 'sub NT_S390_LAST_BREAK () {0x306;}' unless defined(&NT_S390_LAST_BREAK);
    eval 'sub NT_S390_SYSTEM_CALL () {0x307;}' unless defined(&NT_S390_SYSTEM_CALL);
    eval 'sub NT_S390_TDB () {0x308;}' unless defined(&NT_S390_TDB);
    eval 'sub NT_S390_VXRS_LOW () {0x309;}' unless defined(&NT_S390_VXRS_LOW);
    eval 'sub NT_S390_VXRS_HIGH () {0x30a;}' unless defined(&NT_S390_VXRS_HIGH);
    eval 'sub NT_S390_GS_CB () {0x30b;}' unless defined(&NT_S390_GS_CB);
    eval 'sub NT_S390_GS_BC () {0x30c;}' unless defined(&NT_S390_GS_BC);
    eval 'sub NT_S390_RI_CB () {0x30d;}' unless defined(&NT_S390_RI_CB);
    eval 'sub NT_ARM_VFP () {0x400;}' unless defined(&NT_ARM_VFP);
    eval 'sub NT_ARM_TLS () {0x401;}' unless defined(&NT_ARM_TLS);
    eval 'sub NT_ARM_HW_BREAK () {0x402;}' unless defined(&NT_ARM_HW_BREAK);
    eval 'sub NT_ARM_HW_WATCH () {0x403;}' unless defined(&NT_ARM_HW_WATCH);
    eval 'sub NT_ARM_SYSTEM_CALL () {0x404;}' unless defined(&NT_ARM_SYSTEM_CALL);
    eval 'sub NT_ARM_SVE () {0x405;}' unless defined(&NT_ARM_SVE);
    eval 'sub NT_ARM_PAC_MASK () {0x406;}' unless defined(&NT_ARM_PAC_MASK);
    eval 'sub NT_ARM_PACA_KEYS () {0x407;}' unless defined(&NT_ARM_PACA_KEYS);
    eval 'sub NT_ARM_PACG_KEYS () {0x408;}' unless defined(&NT_ARM_PACG_KEYS);
    eval 'sub NT_ARM_TAGGED_ADDR_CTRL () {0x409;}' unless defined(&NT_ARM_TAGGED_ADDR_CTRL);
    eval 'sub NT_ARM_PAC_ENABLED_KEYS () {0x40a;}' unless defined(&NT_ARM_PAC_ENABLED_KEYS);
    eval 'sub NT_VMCOREDD () {0x700;}' unless defined(&NT_VMCOREDD);
    eval 'sub NT_MIPS_DSP () {0x800;}' unless defined(&NT_MIPS_DSP);
    eval 'sub NT_MIPS_FP_MODE () {0x801;}' unless defined(&NT_MIPS_FP_MODE);
    eval 'sub NT_MIPS_MSA () {0x802;}' unless defined(&NT_MIPS_MSA);
    eval 'sub NT_VERSION () {1;}' unless defined(&NT_VERSION);
    eval 'sub DT_NULL () {0;}' unless defined(&DT_NULL);
    eval 'sub DT_NEEDED () {1;}' unless defined(&DT_NEEDED);
    eval 'sub DT_PLTRELSZ () {2;}' unless defined(&DT_PLTRELSZ);
    eval 'sub DT_PLTGOT () {3;}' unless defined(&DT_PLTGOT);
    eval 'sub DT_HASH () {4;}' unless defined(&DT_HASH);
    eval 'sub DT_STRTAB () {5;}' unless defined(&DT_STRTAB);
    eval 'sub DT_SYMTAB () {6;}' unless defined(&DT_SYMTAB);
    eval 'sub DT_RELA () {7;}' unless defined(&DT_RELA);
    eval 'sub DT_RELASZ () {8;}' unless defined(&DT_RELASZ);
    eval 'sub DT_RELAENT () {9;}' unless defined(&DT_RELAENT);
    eval 'sub DT_STRSZ () {10;}' unless defined(&DT_STRSZ);
    eval 'sub DT_SYMENT () {11;}' unless defined(&DT_SYMENT);
    eval 'sub DT_INIT () {12;}' unless defined(&DT_INIT);
    eval 'sub DT_FINI () {13;}' unless defined(&DT_FINI);
    eval 'sub DT_SONAME () {14;}' unless defined(&DT_SONAME);
    eval 'sub DT_RPATH () {15;}' unless defined(&DT_RPATH);
    eval 'sub DT_SYMBOLIC () {16;}' unless defined(&DT_SYMBOLIC);
    eval 'sub DT_REL () {17;}' unless defined(&DT_REL);
    eval 'sub DT_RELSZ () {18;}' unless defined(&DT_RELSZ);
    eval 'sub DT_RELENT () {19;}' unless defined(&DT_RELENT);
    eval 'sub DT_PLTREL () {20;}' unless defined(&DT_PLTREL);
    eval 'sub DT_DEBUG () {21;}' unless defined(&DT_DEBUG);
    eval 'sub DT_TEXTREL () {22;}' unless defined(&DT_TEXTREL);
    eval 'sub DT_JMPREL () {23;}' unless defined(&DT_JMPREL);
    eval 'sub DT_BIND_NOW () {24;}' unless defined(&DT_BIND_NOW);
    eval 'sub DT_INIT_ARRAY () {25;}' unless defined(&DT_INIT_ARRAY);
    eval 'sub DT_FINI_ARRAY () {26;}' unless defined(&DT_FINI_ARRAY);
    eval 'sub DT_INIT_ARRAYSZ () {27;}' unless defined(&DT_INIT_ARRAYSZ);
    eval 'sub DT_FINI_ARRAYSZ () {28;}' unless defined(&DT_FINI_ARRAYSZ);
    eval 'sub DT_RUNPATH () {29;}' unless defined(&DT_RUNPATH);
    eval 'sub DT_FLAGS () {30;}' unless defined(&DT_FLAGS);
    eval 'sub DT_ENCODING () {32;}' unless defined(&DT_ENCODING);
    eval 'sub DT_PREINIT_ARRAY () {32;}' unless defined(&DT_PREINIT_ARRAY);
    eval 'sub DT_PREINIT_ARRAYSZ () {33;}' unless defined(&DT_PREINIT_ARRAYSZ);
    eval 'sub DT_SYMTAB_SHNDX () {34;}' unless defined(&DT_SYMTAB_SHNDX);
    eval 'sub DT_NUM () {35;}' unless defined(&DT_NUM);
    eval 'sub DT_LOOS () {0x6000000d;}' unless defined(&DT_LOOS);
    eval 'sub DT_HIOS () {0x6ffff000;}' unless defined(&DT_HIOS);
    eval 'sub DT_LOPROC () {0x70000000;}' unless defined(&DT_LOPROC);
    eval 'sub DT_HIPROC () {0x7fffffff;}' unless defined(&DT_HIPROC);
    eval 'sub DT_PROCNUM () { &DT_MIPS_NUM;}' unless defined(&DT_PROCNUM);
    eval 'sub DT_VALRNGLO () {0x6ffffd00;}' unless defined(&DT_VALRNGLO);
    eval 'sub DT_GNU_PRELINKED () {0x6ffffdf5;}' unless defined(&DT_GNU_PRELINKED);
    eval 'sub DT_GNU_CONFLICTSZ () {0x6ffffdf6;}' unless defined(&DT_GNU_CONFLICTSZ);
    eval 'sub DT_GNU_LIBLISTSZ () {0x6ffffdf7;}' unless defined(&DT_GNU_LIBLISTSZ);
    eval 'sub DT_CHECKSUM () {0x6ffffdf8;}' unless defined(&DT_CHECKSUM);
    eval 'sub DT_PLTPADSZ () {0x6ffffdf9;}' unless defined(&DT_PLTPADSZ);
    eval 'sub DT_MOVEENT () {0x6ffffdfa;}' unless defined(&DT_MOVEENT);
    eval 'sub DT_MOVESZ () {0x6ffffdfb;}' unless defined(&DT_MOVESZ);
    eval 'sub DT_FEATURE_1 () {0x6ffffdfc;}' unless defined(&DT_FEATURE_1);
    eval 'sub DT_POSFLAG_1 () {0x6ffffdfd;}' unless defined(&DT_POSFLAG_1);
    eval 'sub DT_SYMINSZ () {0x6ffffdfe;}' unless defined(&DT_SYMINSZ);
    eval 'sub DT_SYMINENT () {0x6ffffdff;}' unless defined(&DT_SYMINENT);
    eval 'sub DT_VALRNGHI () {0x6ffffdff;}' unless defined(&DT_VALRNGHI);
    eval 'sub DT_VALTAGIDX {
        my($tag) = @_;
	    eval q(( &DT_VALRNGHI - ($tag)));
    }' unless defined(&DT_VALTAGIDX);
    eval 'sub DT_VALNUM () {12;}' unless defined(&DT_VALNUM);
    eval 'sub DT_ADDRRNGLO () {0x6ffffe00;}' unless defined(&DT_ADDRRNGLO);
    eval 'sub DT_GNU_HASH () {0x6ffffef5;}' unless defined(&DT_GNU_HASH);
    eval 'sub DT_TLSDESC_PLT () {0x6ffffef6;}' unless defined(&DT_TLSDESC_PLT);
    eval 'sub DT_TLSDESC_GOT () {0x6ffffef7;}' unless defined(&DT_TLSDESC_GOT);
    eval 'sub DT_GNU_CONFLICT () {0x6ffffef8;}' unless defined(&DT_GNU_CONFLICT);
    eval 'sub DT_GNU_LIBLIST () {0x6ffffef9;}' unless defined(&DT_GNU_LIBLIST);
    eval 'sub DT_CONFIG () {0x6ffffefa;}' unless defined(&DT_CONFIG);
    eval 'sub DT_DEPAUDIT () {0x6ffffefb;}' unless defined(&DT_DEPAUDIT);
    eval 'sub DT_AUDIT () {0x6ffffefc;}' unless defined(&DT_AUDIT);
    eval 'sub DT_PLTPAD () {0x6ffffefd;}' unless defined(&DT_PLTPAD);
    eval 'sub DT_MOVETAB () {0x6ffffefe;}' unless defined(&DT_MOVETAB);
    eval 'sub DT_SYMINFO () {0x6ffffeff;}' unless defined(&DT_SYMINFO);
    eval 'sub DT_ADDRRNGHI () {0x6ffffeff;}' unless defined(&DT_ADDRRNGHI);
    eval 'sub DT_ADDRTAGIDX {
        my($tag) = @_;
	    eval q(( &DT_ADDRRNGHI - ($tag)));
    }' unless defined(&DT_ADDRTAGIDX);
    eval 'sub DT_ADDRNUM () {11;}' unless defined(&DT_ADDRNUM);
    eval 'sub DT_VERSYM () {0x6ffffff0;}' unless defined(&DT_VERSYM);
    eval 'sub DT_RELACOUNT () {0x6ffffff9;}' unless defined(&DT_RELACOUNT);
    eval 'sub DT_RELCOUNT () {0x6ffffffa;}' unless defined(&DT_RELCOUNT);
    eval 'sub DT_FLAGS_1 () {0x6ffffffb;}' unless defined(&DT_FLAGS_1);
    eval 'sub DT_VERDEF () {0x6ffffffc;}' unless defined(&DT_VERDEF);
    eval 'sub DT_VERDEFNUM () {0x6ffffffd;}' unless defined(&DT_VERDEFNUM);
    eval 'sub DT_VERNEED () {0x6ffffffe;}' unless defined(&DT_VERNEED);
    eval 'sub DT_VERNEEDNUM () {0x6fffffff;}' unless defined(&DT_VERNEEDNUM);
    eval 'sub DT_VERSIONTAGIDX {
        my($tag) = @_;
	    eval q(( &DT_VERNEEDNUM - ($tag)));
    }' unless defined(&DT_VERSIONTAGIDX);
    eval 'sub DT_VERSIONTAGNUM () {16;}' unless defined(&DT_VERSIONTAGNUM);
    eval 'sub DT_AUXILIARY () {0x7ffffffd;}' unless defined(&DT_AUXILIARY);
    eval 'sub DT_FILTER () {0x7fffffff;}' unless defined(&DT_FILTER);
    eval 'sub DT_EXTRATAGIDX {
        my($tag) = @_;
	    eval q((( &Elf32_Word)-(( &Elf32_Sword) ($tag) <<1>>1)-1));
    }' unless defined(&DT_EXTRATAGIDX);
    eval 'sub DT_EXTRANUM () {3;}' unless defined(&DT_EXTRANUM);
    eval 'sub DF_ORIGIN () {0x1;}' unless defined(&DF_ORIGIN);
    eval 'sub DF_SYMBOLIC () {0x2;}' unless defined(&DF_SYMBOLIC);
    eval 'sub DF_TEXTREL () {0x4;}' unless defined(&DF_TEXTREL);
    eval 'sub DF_BIND_NOW () {0x8;}' unless defined(&DF_BIND_NOW);
    eval 'sub DF_STATIC_TLS () {0x10;}' unless defined(&DF_STATIC_TLS);
    eval 'sub DF_1_NOW () {0x1;}' unless defined(&DF_1_NOW);
    eval 'sub DF_1_GLOBAL () {0x2;}' unless defined(&DF_1_GLOBAL);
    eval 'sub DF_1_GROUP () {0x4;}' unless defined(&DF_1_GROUP);
    eval 'sub DF_1_NODELETE () {0x8;}' unless defined(&DF_1_NODELETE);
    eval 'sub DF_1_LOADFLTR () {0x10;}' unless defined(&DF_1_LOADFLTR);
    eval 'sub DF_1_INITFIRST () {0x20;}' unless defined(&DF_1_INITFIRST);
    eval 'sub DF_1_NOOPEN () {0x40;}' unless defined(&DF_1_NOOPEN);
    eval 'sub DF_1_ORIGIN () {0x80;}' unless defined(&DF_1_ORIGIN);
    eval 'sub DF_1_DIRECT () {0x100;}' unless defined(&DF_1_DIRECT);
    eval 'sub DF_1_TRANS () {0x200;}' unless defined(&DF_1_TRANS);
    eval 'sub DF_1_INTERPOSE () {0x400;}' unless defined(&DF_1_INTERPOSE);
    eval 'sub DF_1_NODEFLIB () {0x800;}' unless defined(&DF_1_NODEFLIB);
    eval 'sub DF_1_NODUMP () {0x1000;}' unless defined(&DF_1_NODUMP);
    eval 'sub DF_1_CONFALT () {0x2000;}' unless defined(&DF_1_CONFALT);
    eval 'sub DF_1_ENDFILTEE () {0x4000;}' unless defined(&DF_1_ENDFILTEE);
    eval 'sub DF_1_DISPRELDNE () {0x8000;}' unless defined(&DF_1_DISPRELDNE);
    eval 'sub DF_1_DISPRELPND () {0x10000;}' unless defined(&DF_1_DISPRELPND);
    eval 'sub DF_1_NODIRECT () {0x20000;}' unless defined(&DF_1_NODIRECT);
    eval 'sub DF_1_IGNMULDEF () {0x40000;}' unless defined(&DF_1_IGNMULDEF);
    eval 'sub DF_1_NOKSYMS () {0x80000;}' unless defined(&DF_1_NOKSYMS);
    eval 'sub DF_1_NOHDR () {0x100000;}' unless defined(&DF_1_NOHDR);
    eval 'sub DF_1_EDITED () {0x200000;}' unless defined(&DF_1_EDITED);
    eval 'sub DF_1_NORELOC () {0x400000;}' unless defined(&DF_1_NORELOC);
    eval 'sub DF_1_SYMINTPOSE () {0x800000;}' unless defined(&DF_1_SYMINTPOSE);
    eval 'sub DF_1_GLOBAUDIT () {0x1000000;}' unless defined(&DF_1_GLOBAUDIT);
    eval 'sub DF_1_SINGLETON () {0x2000000;}' unless defined(&DF_1_SINGLETON);
    eval 'sub DF_1_STUB () {0x4000000;}' unless defined(&DF_1_STUB);
    eval 'sub DF_1_PIE () {0x8000000;}' unless defined(&DF_1_PIE);
    eval 'sub DF_1_KMOD () {0x10000000;}' unless defined(&DF_1_KMOD);
    eval 'sub DF_1_WEAKFILTER () {0x20000000;}' unless defined(&DF_1_WEAKFILTER);
    eval 'sub DF_1_NOCOMMON () {0x40000000;}' unless defined(&DF_1_NOCOMMON);
    eval 'sub DTF_1_PARINIT () {0x1;}' unless defined(&DTF_1_PARINIT);
    eval 'sub DTF_1_CONFEXP () {0x2;}' unless defined(&DTF_1_CONFEXP);
    eval 'sub DF_P1_LAZYLOAD () {0x1;}' unless defined(&DF_P1_LAZYLOAD);
    eval 'sub DF_P1_GROUPPERM () {0x2;}' unless defined(&DF_P1_GROUPPERM);
    eval 'sub VER_DEF_NONE () {0;}' unless defined(&VER_DEF_NONE);
    eval 'sub VER_DEF_CURRENT () {1;}' unless defined(&VER_DEF_CURRENT);
    eval 'sub VER_DEF_NUM () {2;}' unless defined(&VER_DEF_NUM);
    eval 'sub VER_FLG_BASE () {0x1;}' unless defined(&VER_FLG_BASE);
    eval 'sub VER_FLG_WEAK () {0x2;}' unless defined(&VER_FLG_WEAK);
    eval 'sub VER_NDX_LOCAL () {0;}' unless defined(&VER_NDX_LOCAL);
    eval 'sub VER_NDX_GLOBAL () {1;}' unless defined(&VER_NDX_GLOBAL);
    eval 'sub VER_NDX_LORESERVE () {0xff00;}' unless defined(&VER_NDX_LORESERVE);
    eval 'sub VER_NDX_ELIMINATE () {0xff01;}' unless defined(&VER_NDX_ELIMINATE);
    eval 'sub VER_NEED_NONE () {0;}' unless defined(&VER_NEED_NONE);
    eval 'sub VER_NEED_CURRENT () {1;}' unless defined(&VER_NEED_CURRENT);
    eval 'sub VER_NEED_NUM () {2;}' unless defined(&VER_NEED_NUM);
    eval 'sub VER_FLG_WEAK () {0x2;}' unless defined(&VER_FLG_WEAK);
    eval 'sub AT_NULL () {0;}' unless defined(&AT_NULL);
    eval 'sub AT_IGNORE () {1;}' unless defined(&AT_IGNORE);
    eval 'sub AT_EXECFD () {2;}' unless defined(&AT_EXECFD);
    eval 'sub AT_PHDR () {3;}' unless defined(&AT_PHDR);
    eval 'sub AT_PHENT () {4;}' unless defined(&AT_PHENT);
    eval 'sub AT_PHNUM () {5;}' unless defined(&AT_PHNUM);
    eval 'sub AT_PAGESZ () {6;}' unless defined(&AT_PAGESZ);
    eval 'sub AT_BASE () {7;}' unless defined(&AT_BASE);
    eval 'sub AT_FLAGS () {8;}' unless defined(&AT_FLAGS);
    eval 'sub AT_ENTRY () {9;}' unless defined(&AT_ENTRY);
    eval 'sub AT_NOTELF () {10;}' unless defined(&AT_NOTELF);
    eval 'sub AT_UID () {11;}' unless defined(&AT_UID);
    eval 'sub AT_EUID () {12;}' unless defined(&AT_EUID);
    eval 'sub AT_GID () {13;}' unless defined(&AT_GID);
    eval 'sub AT_EGID () {14;}' unless defined(&AT_EGID);
    eval 'sub AT_CLKTCK () {17;}' unless defined(&AT_CLKTCK);
    eval 'sub AT_PLATFORM () {15;}' unless defined(&AT_PLATFORM);
    eval 'sub AT_HWCAP () {16;}' unless defined(&AT_HWCAP);
    eval 'sub AT_FPUCW () {18;}' unless defined(&AT_FPUCW);
    eval 'sub AT_DCACHEBSIZE () {19;}' unless defined(&AT_DCACHEBSIZE);
    eval 'sub AT_ICACHEBSIZE () {20;}' unless defined(&AT_ICACHEBSIZE);
    eval 'sub AT_UCACHEBSIZE () {21;}' unless defined(&AT_UCACHEBSIZE);
    eval 'sub AT_IGNOREPPC () {22;}' unless defined(&AT_IGNOREPPC);
    eval 'sub AT_SECURE () {23;}' unless defined(&AT_SECURE);
    eval 'sub AT_BASE_PLATFORM () {24;}' unless defined(&AT_BASE_PLATFORM);
    eval 'sub AT_RANDOM () {25;}' unless defined(&AT_RANDOM);
    eval 'sub AT_HWCAP2 () {26;}' unless defined(&AT_HWCAP2);
    eval 'sub AT_EXECFN () {31;}' unless defined(&AT_EXECFN);
    eval 'sub AT_SYSINFO () {32;}' unless defined(&AT_SYSINFO);
    eval 'sub AT_SYSINFO_EHDR () {33;}' unless defined(&AT_SYSINFO_EHDR);
    eval 'sub AT_L1I_CACHESHAPE () {34;}' unless defined(&AT_L1I_CACHESHAPE);
    eval 'sub AT_L1D_CACHESHAPE () {35;}' unless defined(&AT_L1D_CACHESHAPE);
    eval 'sub AT_L2_CACHESHAPE () {36;}' unless defined(&AT_L2_CACHESHAPE);
    eval 'sub AT_L3_CACHESHAPE () {37;}' unless defined(&AT_L3_CACHESHAPE);
    eval 'sub AT_L1I_CACHESIZE () {40;}' unless defined(&AT_L1I_CACHESIZE);
    eval 'sub AT_L1I_CACHEGEOMETRY () {41;}' unless defined(&AT_L1I_CACHEGEOMETRY);
    eval 'sub AT_L1D_CACHESIZE () {42;}' unless defined(&AT_L1D_CACHESIZE);
    eval 'sub AT_L1D_CACHEGEOMETRY () {43;}' unless defined(&AT_L1D_CACHEGEOMETRY);
    eval 'sub AT_L2_CACHESIZE () {44;}' unless defined(&AT_L2_CACHESIZE);
    eval 'sub AT_L2_CACHEGEOMETRY () {45;}' unless defined(&AT_L2_CACHEGEOMETRY);
    eval 'sub AT_L3_CACHESIZE () {46;}' unless defined(&AT_L3_CACHESIZE);
    eval 'sub AT_L3_CACHEGEOMETRY () {47;}' unless defined(&AT_L3_CACHEGEOMETRY);
    eval 'sub AT_MINSIGSTKSZ () {51;}' unless defined(&AT_MINSIGSTKSZ);
    eval 'sub ELF_NOTE_SOLARIS () {"SUNW Solaris";}' unless defined(&ELF_NOTE_SOLARIS);
    eval 'sub ELF_NOTE_GNU () {"GNU";}' unless defined(&ELF_NOTE_GNU);
    eval 'sub ELF_NOTE_FDO () {"FDO";}' unless defined(&ELF_NOTE_FDO);
    eval 'sub ELF_NOTE_PAGESIZE_HINT () {1;}' unless defined(&ELF_NOTE_PAGESIZE_HINT);
    eval 'sub NT_GNU_ABI_TAG () {1;}' unless defined(&NT_GNU_ABI_TAG);
    eval 'sub ELF_NOTE_ABI () { &NT_GNU_ABI_TAG;}' unless defined(&ELF_NOTE_ABI);
    eval 'sub ELF_NOTE_OS_LINUX () {0;}' unless defined(&ELF_NOTE_OS_LINUX);
    eval 'sub ELF_NOTE_OS_GNU () {1;}' unless defined(&ELF_NOTE_OS_GNU);
    eval 'sub ELF_NOTE_OS_SOLARIS2 () {2;}' unless defined(&ELF_NOTE_OS_SOLARIS2);
    eval 'sub ELF_NOTE_OS_FREEBSD () {3;}' unless defined(&ELF_NOTE_OS_FREEBSD);
    eval 'sub NT_GNU_HWCAP () {2;}' unless defined(&NT_GNU_HWCAP);
    eval 'sub NT_GNU_BUILD_ID () {3;}' unless defined(&NT_GNU_BUILD_ID);
    eval 'sub NT_GNU_GOLD_VERSION () {4;}' unless defined(&NT_GNU_GOLD_VERSION);
    eval 'sub NT_GNU_PROPERTY_TYPE_0 () {5;}' unless defined(&NT_GNU_PROPERTY_TYPE_0);
    eval 'sub NT_FDO_PACKAGING_METADATA () {0xcafe1a7e;}' unless defined(&NT_FDO_PACKAGING_METADATA);
    eval 'sub NOTE_GNU_PROPERTY_SECTION_NAME () {".note.gnu.property";}' unless defined(&NOTE_GNU_PROPERTY_SECTION_NAME);
    eval 'sub GNU_PROPERTY_STACK_SIZE () {1;}' unless defined(&GNU_PROPERTY_STACK_SIZE);
    eval 'sub GNU_PROPERTY_NO_COPY_ON_PROTECTED () {2;}' unless defined(&GNU_PROPERTY_NO_COPY_ON_PROTECTED);
    eval 'sub GNU_PROPERTY_UINT32_AND_LO () {0xb0000000;}' unless defined(&GNU_PROPERTY_UINT32_AND_LO);
    eval 'sub GNU_PROPERTY_UINT32_AND_HI () {0xb0007fff;}' unless defined(&GNU_PROPERTY_UINT32_AND_HI);
    eval 'sub GNU_PROPERTY_UINT32_OR_LO () {0xb0008000;}' unless defined(&GNU_PROPERTY_UINT32_OR_LO);
    eval 'sub GNU_PROPERTY_UINT32_OR_HI () {0xb000ffff;}' unless defined(&GNU_PROPERTY_UINT32_OR_HI);
    eval 'sub GNU_PROPERTY_1_NEEDED () { &GNU_PROPERTY_UINT32_OR_LO;}' unless defined(&GNU_PROPERTY_1_NEEDED);
    eval 'sub GNU_PROPERTY_1_NEEDED_INDIRECT_EXTERN_ACCESS () {(1 << 0);}' unless defined(&GNU_PROPERTY_1_NEEDED_INDIRECT_EXTERN_ACCESS);
    eval 'sub GNU_PROPERTY_LOPROC () {0xc0000000;}' unless defined(&GNU_PROPERTY_LOPROC);
    eval 'sub GNU_PROPERTY_HIPROC () {0xdfffffff;}' unless defined(&GNU_PROPERTY_HIPROC);
    eval 'sub GNU_PROPERTY_LOUSER () {0xe0000000;}' unless defined(&GNU_PROPERTY_LOUSER);
    eval 'sub GNU_PROPERTY_HIUSER () {0xffffffff;}' unless defined(&GNU_PROPERTY_HIUSER);
    eval 'sub GNU_PROPERTY_AARCH64_FEATURE_1_AND () {0xc0000000;}' unless defined(&GNU_PROPERTY_AARCH64_FEATURE_1_AND);
    eval 'sub GNU_PROPERTY_AARCH64_FEATURE_1_BTI () {(1 << 0);}' unless defined(&GNU_PROPERTY_AARCH64_FEATURE_1_BTI);
    eval 'sub GNU_PROPERTY_AARCH64_FEATURE_1_PAC () {(1 << 1);}' unless defined(&GNU_PROPERTY_AARCH64_FEATURE_1_PAC);
    eval 'sub GNU_PROPERTY_X86_ISA_1_USED () {0xc0010002;}' unless defined(&GNU_PROPERTY_X86_ISA_1_USED);
    eval 'sub GNU_PROPERTY_X86_ISA_1_NEEDED () {0xc0008002;}' unless defined(&GNU_PROPERTY_X86_ISA_1_NEEDED);
    eval 'sub GNU_PROPERTY_X86_FEATURE_1_AND () {0xc0000002;}' unless defined(&GNU_PROPERTY_X86_FEATURE_1_AND);
    eval 'sub GNU_PROPERTY_X86_ISA_1_BASELINE () {(1 << 0);}' unless defined(&GNU_PROPERTY_X86_ISA_1_BASELINE);
    eval 'sub GNU_PROPERTY_X86_ISA_1_V2 () {(1 << 1);}' unless defined(&GNU_PROPERTY_X86_ISA_1_V2);
    eval 'sub GNU_PROPERTY_X86_ISA_1_V3 () {(1 << 2);}' unless defined(&GNU_PROPERTY_X86_ISA_1_V3);
    eval 'sub GNU_PROPERTY_X86_ISA_1_V4 () {(1 << 3);}' unless defined(&GNU_PROPERTY_X86_ISA_1_V4);
    eval 'sub GNU_PROPERTY_X86_FEATURE_1_IBT () {(1 << 0);}' unless defined(&GNU_PROPERTY_X86_FEATURE_1_IBT);
    eval 'sub GNU_PROPERTY_X86_FEATURE_1_SHSTK () {(1 << 1);}' unless defined(&GNU_PROPERTY_X86_FEATURE_1_SHSTK);
    eval 'sub ELF32_M_SYM {
        my($info) = @_;
	    eval q((($info) >> 8));
    }' unless defined(&ELF32_M_SYM);
    eval 'sub ELF32_M_SIZE {
        my($info) = @_;
	    eval q(( ($info)));
    }' unless defined(&ELF32_M_SIZE);
    eval 'sub ELF32_M_INFO {
        my($sym, $size) = @_;
	    eval q(((($sym) << 8) +  ($size)));
    }' unless defined(&ELF32_M_INFO);
    eval 'sub ELF64_M_SYM {
        my($info) = @_;
	    eval q( &ELF32_M_SYM ($info));
    }' unless defined(&ELF64_M_SYM);
    eval 'sub ELF64_M_SIZE {
        my($info) = @_;
	    eval q( &ELF32_M_SIZE ($info));
    }' unless defined(&ELF64_M_SIZE);
    eval 'sub ELF64_M_INFO {
        my($sym, $size) = @_;
	    eval q( &ELF32_M_INFO ($sym, $size));
    }' unless defined(&ELF64_M_INFO);
    eval 'sub EF_CPU32 () {0x810000;}' unless defined(&EF_CPU32);
    eval 'sub R_68K_NONE () {0;}' unless defined(&R_68K_NONE);
    eval 'sub R_68K_32 () {1;}' unless defined(&R_68K_32);
    eval 'sub R_68K_16 () {2;}' unless defined(&R_68K_16);
    eval 'sub R_68K_8 () {3;}' unless defined(&R_68K_8);
    eval 'sub R_68K_PC32 () {4;}' unless defined(&R_68K_PC32);
    eval 'sub R_68K_PC16 () {5;}' unless defined(&R_68K_PC16);
    eval 'sub R_68K_PC8 () {6;}' unless defined(&R_68K_PC8);
    eval 'sub R_68K_GOT32 () {7;}' unless defined(&R_68K_GOT32);
    eval 'sub R_68K_GOT16 () {8;}' unless defined(&R_68K_GOT16);
    eval 'sub R_68K_GOT8 () {9;}' unless defined(&R_68K_GOT8);
    eval 'sub R_68K_GOT32O () {10;}' unless defined(&R_68K_GOT32O);
    eval 'sub R_68K_GOT16O () {11;}' unless defined(&R_68K_GOT16O);
    eval 'sub R_68K_GOT8O () {12;}' unless defined(&R_68K_GOT8O);
    eval 'sub R_68K_PLT32 () {13;}' unless defined(&R_68K_PLT32);
    eval 'sub R_68K_PLT16 () {14;}' unless defined(&R_68K_PLT16);
    eval 'sub R_68K_PLT8 () {15;}' unless defined(&R_68K_PLT8);
    eval 'sub R_68K_PLT32O () {16;}' unless defined(&R_68K_PLT32O);
    eval 'sub R_68K_PLT16O () {17;}' unless defined(&R_68K_PLT16O);
    eval 'sub R_68K_PLT8O () {18;}' unless defined(&R_68K_PLT8O);
    eval 'sub R_68K_COPY () {19;}' unless defined(&R_68K_COPY);
    eval 'sub R_68K_GLOB_DAT () {20;}' unless defined(&R_68K_GLOB_DAT);
    eval 'sub R_68K_JMP_SLOT () {21;}' unless defined(&R_68K_JMP_SLOT);
    eval 'sub R_68K_RELATIVE () {22;}' unless defined(&R_68K_RELATIVE);
    eval 'sub R_68K_TLS_GD32 () {25;}' unless defined(&R_68K_TLS_GD32);
    eval 'sub R_68K_TLS_GD16 () {26;}' unless defined(&R_68K_TLS_GD16);
    eval 'sub R_68K_TLS_GD8 () {27;}' unless defined(&R_68K_TLS_GD8);
    eval 'sub R_68K_TLS_LDM32 () {28;}' unless defined(&R_68K_TLS_LDM32);
    eval 'sub R_68K_TLS_LDM16 () {29;}' unless defined(&R_68K_TLS_LDM16);
    eval 'sub R_68K_TLS_LDM8 () {30;}' unless defined(&R_68K_TLS_LDM8);
    eval 'sub R_68K_TLS_LDO32 () {31;}' unless defined(&R_68K_TLS_LDO32);
    eval 'sub R_68K_TLS_LDO16 () {32;}' unless defined(&R_68K_TLS_LDO16);
    eval 'sub R_68K_TLS_LDO8 () {33;}' unless defined(&R_68K_TLS_LDO8);
    eval 'sub R_68K_TLS_IE32 () {34;}' unless defined(&R_68K_TLS_IE32);
    eval 'sub R_68K_TLS_IE16 () {35;}' unless defined(&R_68K_TLS_IE16);
    eval 'sub R_68K_TLS_IE8 () {36;}' unless defined(&R_68K_TLS_IE8);
    eval 'sub R_68K_TLS_LE32 () {37;}' unless defined(&R_68K_TLS_LE32);
    eval 'sub R_68K_TLS_LE16 () {38;}' unless defined(&R_68K_TLS_LE16);
    eval 'sub R_68K_TLS_LE8 () {39;}' unless defined(&R_68K_TLS_LE8);
    eval 'sub R_68K_TLS_DTPMOD32 () {40;}' unless defined(&R_68K_TLS_DTPMOD32);
    eval 'sub R_68K_TLS_DTPREL32 () {41;}' unless defined(&R_68K_TLS_DTPREL32);
    eval 'sub R_68K_TLS_TPREL32 () {42;}' unless defined(&R_68K_TLS_TPREL32);
    eval 'sub R_68K_NUM () {43;}' unless defined(&R_68K_NUM);
    eval 'sub R_386_NONE () {0;}' unless defined(&R_386_NONE);
    eval 'sub R_386_32 () {1;}' unless defined(&R_386_32);
    eval 'sub R_386_PC32 () {2;}' unless defined(&R_386_PC32);
    eval 'sub R_386_GOT32 () {3;}' unless defined(&R_386_GOT32);
    eval 'sub R_386_PLT32 () {4;}' unless defined(&R_386_PLT32);
    eval 'sub R_386_COPY () {5;}' unless defined(&R_386_COPY);
    eval 'sub R_386_GLOB_DAT () {6;}' unless defined(&R_386_GLOB_DAT);
    eval 'sub R_386_JMP_SLOT () {7;}' unless defined(&R_386_JMP_SLOT);
    eval 'sub R_386_RELATIVE () {8;}' unless defined(&R_386_RELATIVE);
    eval 'sub R_386_GOTOFF () {9;}' unless defined(&R_386_GOTOFF);
    eval 'sub R_386_GOTPC () {10;}' unless defined(&R_386_GOTPC);
    eval 'sub R_386_32PLT () {11;}' unless defined(&R_386_32PLT);
    eval 'sub R_386_TLS_TPOFF () {14;}' unless defined(&R_386_TLS_TPOFF);
    eval 'sub R_386_TLS_IE () {15;}' unless defined(&R_386_TLS_IE);
    eval 'sub R_386_TLS_GOTIE () {16;}' unless defined(&R_386_TLS_GOTIE);
    eval 'sub R_386_TLS_LE () {17;}' unless defined(&R_386_TLS_LE);
    eval 'sub R_386_TLS_GD () {18;}' unless defined(&R_386_TLS_GD);
    eval 'sub R_386_TLS_LDM () {19;}' unless defined(&R_386_TLS_LDM);
    eval 'sub R_386_16 () {20;}' unless defined(&R_386_16);
    eval 'sub R_386_PC16 () {21;}' unless defined(&R_386_PC16);
    eval 'sub R_386_8 () {22;}' unless defined(&R_386_8);
    eval 'sub R_386_PC8 () {23;}' unless defined(&R_386_PC8);
    eval 'sub R_386_TLS_GD_32 () {24;}' unless defined(&R_386_TLS_GD_32);
    eval 'sub R_386_TLS_GD_PUSH () {25;}' unless defined(&R_386_TLS_GD_PUSH);
    eval 'sub R_386_TLS_GD_CALL () {26;}' unless defined(&R_386_TLS_GD_CALL);
    eval 'sub R_386_TLS_GD_POP () {27;}' unless defined(&R_386_TLS_GD_POP);
    eval 'sub R_386_TLS_LDM_32 () {28;}' unless defined(&R_386_TLS_LDM_32);
    eval 'sub R_386_TLS_LDM_PUSH () {29;}' unless defined(&R_386_TLS_LDM_PUSH);
    eval 'sub R_386_TLS_LDM_CALL () {30;}' unless defined(&R_386_TLS_LDM_CALL);
    eval 'sub R_386_TLS_LDM_POP () {31;}' unless defined(&R_386_TLS_LDM_POP);
    eval 'sub R_386_TLS_LDO_32 () {32;}' unless defined(&R_386_TLS_LDO_32);
    eval 'sub R_386_TLS_IE_32 () {33;}' unless defined(&R_386_TLS_IE_32);
    eval 'sub R_386_TLS_LE_32 () {34;}' unless defined(&R_386_TLS_LE_32);
    eval 'sub R_386_TLS_DTPMOD32 () {35;}' unless defined(&R_386_TLS_DTPMOD32);
    eval 'sub R_386_TLS_DTPOFF32 () {36;}' unless defined(&R_386_TLS_DTPOFF32);
    eval 'sub R_386_TLS_TPOFF32 () {37;}' unless defined(&R_386_TLS_TPOFF32);
    eval 'sub R_386_SIZE32 () {38;}' unless defined(&R_386_SIZE32);
    eval 'sub R_386_TLS_GOTDESC () {39;}' unless defined(&R_386_TLS_GOTDESC);
    eval 'sub R_386_TLS_DESC_CALL () {40;}' unless defined(&R_386_TLS_DESC_CALL);
    eval 'sub R_386_TLS_DESC () {41;}' unless defined(&R_386_TLS_DESC);
    eval 'sub R_386_IRELATIVE () {42;}' unless defined(&R_386_IRELATIVE);
    eval 'sub R_386_GOT32X () {43;}' unless defined(&R_386_GOT32X);
    eval 'sub R_386_NUM () {44;}' unless defined(&R_386_NUM);
    eval 'sub STT_SPARC_REGISTER () {13;}' unless defined(&STT_SPARC_REGISTER);
    eval 'sub EF_SPARCV9_MM () {3;}' unless defined(&EF_SPARCV9_MM);
    eval 'sub EF_SPARCV9_TSO () {0;}' unless defined(&EF_SPARCV9_TSO);
    eval 'sub EF_SPARCV9_PSO () {1;}' unless defined(&EF_SPARCV9_PSO);
    eval 'sub EF_SPARCV9_RMO () {2;}' unless defined(&EF_SPARCV9_RMO);
    eval 'sub EF_SPARC_LEDATA () {0x800000;}' unless defined(&EF_SPARC_LEDATA);
    eval 'sub EF_SPARC_EXT_MASK () {0xffff00;}' unless defined(&EF_SPARC_EXT_MASK);
    eval 'sub EF_SPARC_32PLUS () {0x100;}' unless defined(&EF_SPARC_32PLUS);
    eval 'sub EF_SPARC_SUN_US1 () {0x200;}' unless defined(&EF_SPARC_SUN_US1);
    eval 'sub EF_SPARC_HAL_R1 () {0x400;}' unless defined(&EF_SPARC_HAL_R1);
    eval 'sub EF_SPARC_SUN_US3 () {0x800;}' unless defined(&EF_SPARC_SUN_US3);
    eval 'sub R_SPARC_NONE () {0;}' unless defined(&R_SPARC_NONE);
    eval 'sub R_SPARC_8 () {1;}' unless defined(&R_SPARC_8);
    eval 'sub R_SPARC_16 () {2;}' unless defined(&R_SPARC_16);
    eval 'sub R_SPARC_32 () {3;}' unless defined(&R_SPARC_32);
    eval 'sub R_SPARC_DISP8 () {4;}' unless defined(&R_SPARC_DISP8);
    eval 'sub R_SPARC_DISP16 () {5;}' unless defined(&R_SPARC_DISP16);
    eval 'sub R_SPARC_DISP32 () {6;}' unless defined(&R_SPARC_DISP32);
    eval 'sub R_SPARC_WDISP30 () {7;}' unless defined(&R_SPARC_WDISP30);
    eval 'sub R_SPARC_WDISP22 () {8;}' unless defined(&R_SPARC_WDISP22);
    eval 'sub R_SPARC_HI22 () {9;}' unless defined(&R_SPARC_HI22);
    eval 'sub R_SPARC_22 () {10;}' unless defined(&R_SPARC_22);
    eval 'sub R_SPARC_13 () {11;}' unless defined(&R_SPARC_13);
    eval 'sub R_SPARC_LO10 () {12;}' unless defined(&R_SPARC_LO10);
    eval 'sub R_SPARC_GOT10 () {13;}' unless defined(&R_SPARC_GOT10);
    eval 'sub R_SPARC_GOT13 () {14;}' unless defined(&R_SPARC_GOT13);
    eval 'sub R_SPARC_GOT22 () {15;}' unless defined(&R_SPARC_GOT22);
    eval 'sub R_SPARC_PC10 () {16;}' unless defined(&R_SPARC_PC10);
    eval 'sub R_SPARC_PC22 () {17;}' unless defined(&R_SPARC_PC22);
    eval 'sub R_SPARC_WPLT30 () {18;}' unless defined(&R_SPARC_WPLT30);
    eval 'sub R_SPARC_COPY () {19;}' unless defined(&R_SPARC_COPY);
    eval 'sub R_SPARC_GLOB_DAT () {20;}' unless defined(&R_SPARC_GLOB_DAT);
    eval 'sub R_SPARC_JMP_SLOT () {21;}' unless defined(&R_SPARC_JMP_SLOT);
    eval 'sub R_SPARC_RELATIVE () {22;}' unless defined(&R_SPARC_RELATIVE);
    eval 'sub R_SPARC_UA32 () {23;}' unless defined(&R_SPARC_UA32);
    eval 'sub R_SPARC_PLT32 () {24;}' unless defined(&R_SPARC_PLT32);
    eval 'sub R_SPARC_HIPLT22 () {25;}' unless defined(&R_SPARC_HIPLT22);
    eval 'sub R_SPARC_LOPLT10 () {26;}' unless defined(&R_SPARC_LOPLT10);
    eval 'sub R_SPARC_PCPLT32 () {27;}' unless defined(&R_SPARC_PCPLT32);
    eval 'sub R_SPARC_PCPLT22 () {28;}' unless defined(&R_SPARC_PCPLT22);
    eval 'sub R_SPARC_PCPLT10 () {29;}' unless defined(&R_SPARC_PCPLT10);
    eval 'sub R_SPARC_10 () {30;}' unless defined(&R_SPARC_10);
    eval 'sub R_SPARC_11 () {31;}' unless defined(&R_SPARC_11);
    eval 'sub R_SPARC_64 () {32;}' unless defined(&R_SPARC_64);
    eval 'sub R_SPARC_OLO10 () {33;}' unless defined(&R_SPARC_OLO10);
    eval 'sub R_SPARC_HH22 () {34;}' unless defined(&R_SPARC_HH22);
    eval 'sub R_SPARC_HM10 () {35;}' unless defined(&R_SPARC_HM10);
    eval 'sub R_SPARC_LM22 () {36;}' unless defined(&R_SPARC_LM22);
    eval 'sub R_SPARC_PC_HH22 () {37;}' unless defined(&R_SPARC_PC_HH22);
    eval 'sub R_SPARC_PC_HM10 () {38;}' unless defined(&R_SPARC_PC_HM10);
    eval 'sub R_SPARC_PC_LM22 () {39;}' unless defined(&R_SPARC_PC_LM22);
    eval 'sub R_SPARC_WDISP16 () {40;}' unless defined(&R_SPARC_WDISP16);
    eval 'sub R_SPARC_WDISP19 () {41;}' unless defined(&R_SPARC_WDISP19);
    eval 'sub R_SPARC_GLOB_JMP () {42;}' unless defined(&R_SPARC_GLOB_JMP);
    eval 'sub R_SPARC_7 () {43;}' unless defined(&R_SPARC_7);
    eval 'sub R_SPARC_5 () {44;}' unless defined(&R_SPARC_5);
    eval 'sub R_SPARC_6 () {45;}' unless defined(&R_SPARC_6);
    eval 'sub R_SPARC_DISP64 () {46;}' unless defined(&R_SPARC_DISP64);
    eval 'sub R_SPARC_PLT64 () {47;}' unless defined(&R_SPARC_PLT64);
    eval 'sub R_SPARC_HIX22 () {48;}' unless defined(&R_SPARC_HIX22);
    eval 'sub R_SPARC_LOX10 () {49;}' unless defined(&R_SPARC_LOX10);
    eval 'sub R_SPARC_H44 () {50;}' unless defined(&R_SPARC_H44);
    eval 'sub R_SPARC_M44 () {51;}' unless defined(&R_SPARC_M44);
    eval 'sub R_SPARC_L44 () {52;}' unless defined(&R_SPARC_L44);
    eval 'sub R_SPARC_REGISTER () {53;}' unless defined(&R_SPARC_REGISTER);
    eval 'sub R_SPARC_UA64 () {54;}' unless defined(&R_SPARC_UA64);
    eval 'sub R_SPARC_UA16 () {55;}' unless defined(&R_SPARC_UA16);
    eval 'sub R_SPARC_TLS_GD_HI22 () {56;}' unless defined(&R_SPARC_TLS_GD_HI22);
    eval 'sub R_SPARC_TLS_GD_LO10 () {57;}' unless defined(&R_SPARC_TLS_GD_LO10);
    eval 'sub R_SPARC_TLS_GD_ADD () {58;}' unless defined(&R_SPARC_TLS_GD_ADD);
    eval 'sub R_SPARC_TLS_GD_CALL () {59;}' unless defined(&R_SPARC_TLS_GD_CALL);
    eval 'sub R_SPARC_TLS_LDM_HI22 () {60;}' unless defined(&R_SPARC_TLS_LDM_HI22);
    eval 'sub R_SPARC_TLS_LDM_LO10 () {61;}' unless defined(&R_SPARC_TLS_LDM_LO10);
    eval 'sub R_SPARC_TLS_LDM_ADD () {62;}' unless defined(&R_SPARC_TLS_LDM_ADD);
    eval 'sub R_SPARC_TLS_LDM_CALL () {63;}' unless defined(&R_SPARC_TLS_LDM_CALL);
    eval 'sub R_SPARC_TLS_LDO_HIX22 () {64;}' unless defined(&R_SPARC_TLS_LDO_HIX22);
    eval 'sub R_SPARC_TLS_LDO_LOX10 () {65;}' unless defined(&R_SPARC_TLS_LDO_LOX10);
    eval 'sub R_SPARC_TLS_LDO_ADD () {66;}' unless defined(&R_SPARC_TLS_LDO_ADD);
    eval 'sub R_SPARC_TLS_IE_HI22 () {67;}' unless defined(&R_SPARC_TLS_IE_HI22);
    eval 'sub R_SPARC_TLS_IE_LO10 () {68;}' unless defined(&R_SPARC_TLS_IE_LO10);
    eval 'sub R_SPARC_TLS_IE_LD () {69;}' unless defined(&R_SPARC_TLS_IE_LD);
    eval 'sub R_SPARC_TLS_IE_LDX () {70;}' unless defined(&R_SPARC_TLS_IE_LDX);
    eval 'sub R_SPARC_TLS_IE_ADD () {71;}' unless defined(&R_SPARC_TLS_IE_ADD);
    eval 'sub R_SPARC_TLS_LE_HIX22 () {72;}' unless defined(&R_SPARC_TLS_LE_HIX22);
    eval 'sub R_SPARC_TLS_LE_LOX10 () {73;}' unless defined(&R_SPARC_TLS_LE_LOX10);
    eval 'sub R_SPARC_TLS_DTPMOD32 () {74;}' unless defined(&R_SPARC_TLS_DTPMOD32);
    eval 'sub R_SPARC_TLS_DTPMOD64 () {75;}' unless defined(&R_SPARC_TLS_DTPMOD64);
    eval 'sub R_SPARC_TLS_DTPOFF32 () {76;}' unless defined(&R_SPARC_TLS_DTPOFF32);
    eval 'sub R_SPARC_TLS_DTPOFF64 () {77;}' unless defined(&R_SPARC_TLS_DTPOFF64);
    eval 'sub R_SPARC_TLS_TPOFF32 () {78;}' unless defined(&R_SPARC_TLS_TPOFF32);
    eval 'sub R_SPARC_TLS_TPOFF64 () {79;}' unless defined(&R_SPARC_TLS_TPOFF64);
    eval 'sub R_SPARC_GOTDATA_HIX22 () {80;}' unless defined(&R_SPARC_GOTDATA_HIX22);
    eval 'sub R_SPARC_GOTDATA_LOX10 () {81;}' unless defined(&R_SPARC_GOTDATA_LOX10);
    eval 'sub R_SPARC_GOTDATA_OP_HIX22 () {82;}' unless defined(&R_SPARC_GOTDATA_OP_HIX22);
    eval 'sub R_SPARC_GOTDATA_OP_LOX10 () {83;}' unless defined(&R_SPARC_GOTDATA_OP_LOX10);
    eval 'sub R_SPARC_GOTDATA_OP () {84;}' unless defined(&R_SPARC_GOTDATA_OP);
    eval 'sub R_SPARC_H34 () {85;}' unless defined(&R_SPARC_H34);
    eval 'sub R_SPARC_SIZE32 () {86;}' unless defined(&R_SPARC_SIZE32);
    eval 'sub R_SPARC_SIZE64 () {87;}' unless defined(&R_SPARC_SIZE64);
    eval 'sub R_SPARC_WDISP10 () {88;}' unless defined(&R_SPARC_WDISP10);
    eval 'sub R_SPARC_JMP_IREL () {248;}' unless defined(&R_SPARC_JMP_IREL);
    eval 'sub R_SPARC_IRELATIVE () {249;}' unless defined(&R_SPARC_IRELATIVE);
    eval 'sub R_SPARC_GNU_VTINHERIT () {250;}' unless defined(&R_SPARC_GNU_VTINHERIT);
    eval 'sub R_SPARC_GNU_VTENTRY () {251;}' unless defined(&R_SPARC_GNU_VTENTRY);
    eval 'sub R_SPARC_REV32 () {252;}' unless defined(&R_SPARC_REV32);
    eval 'sub R_SPARC_NUM () {253;}' unless defined(&R_SPARC_NUM);
    eval 'sub DT_SPARC_REGISTER () {0x70000001;}' unless defined(&DT_SPARC_REGISTER);
    eval 'sub DT_SPARC_NUM () {2;}' unless defined(&DT_SPARC_NUM);
    eval 'sub EF_MIPS_NOREORDER () {1;}' unless defined(&EF_MIPS_NOREORDER);
    eval 'sub EF_MIPS_PIC () {2;}' unless defined(&EF_MIPS_PIC);
    eval 'sub EF_MIPS_CPIC () {4;}' unless defined(&EF_MIPS_CPIC);
    eval 'sub EF_MIPS_XGOT () {8;}' unless defined(&EF_MIPS_XGOT);
    eval 'sub EF_MIPS_64BIT_WHIRL () {16;}' unless defined(&EF_MIPS_64BIT_WHIRL);
    eval 'sub EF_MIPS_ABI2 () {32;}' unless defined(&EF_MIPS_ABI2);
    eval 'sub EF_MIPS_ABI_ON32 () {64;}' unless defined(&EF_MIPS_ABI_ON32);
    eval 'sub EF_MIPS_FP64 () {512;}' unless defined(&EF_MIPS_FP64);
    eval 'sub EF_MIPS_NAN2008 () {1024;}' unless defined(&EF_MIPS_NAN2008);
    eval 'sub EF_MIPS_ARCH () {0xf0000000;}' unless defined(&EF_MIPS_ARCH);
    eval 'sub EF_MIPS_ARCH_1 () {0x;}' unless defined(&EF_MIPS_ARCH_1);
    eval 'sub EF_MIPS_ARCH_2 () {0x10000000;}' unless defined(&EF_MIPS_ARCH_2);
    eval 'sub EF_MIPS_ARCH_3 () {0x20000000;}' unless defined(&EF_MIPS_ARCH_3);
    eval 'sub EF_MIPS_ARCH_4 () {0x30000000;}' unless defined(&EF_MIPS_ARCH_4);
    eval 'sub EF_MIPS_ARCH_5 () {0x40000000;}' unless defined(&EF_MIPS_ARCH_5);
    eval 'sub EF_MIPS_ARCH_32 () {0x50000000;}' unless defined(&EF_MIPS_ARCH_32);
    eval 'sub EF_MIPS_ARCH_64 () {0x60000000;}' unless defined(&EF_MIPS_ARCH_64);
    eval 'sub EF_MIPS_ARCH_32R2 () {0x70000000;}' unless defined(&EF_MIPS_ARCH_32R2);
    eval 'sub EF_MIPS_ARCH_64R2 () {0x80000000;}' unless defined(&EF_MIPS_ARCH_64R2);
    eval 'sub E_MIPS_ARCH_1 () { &EF_MIPS_ARCH_1;}' unless defined(&E_MIPS_ARCH_1);
    eval 'sub E_MIPS_ARCH_2 () { &EF_MIPS_ARCH_2;}' unless defined(&E_MIPS_ARCH_2);
    eval 'sub E_MIPS_ARCH_3 () { &EF_MIPS_ARCH_3;}' unless defined(&E_MIPS_ARCH_3);
    eval 'sub E_MIPS_ARCH_4 () { &EF_MIPS_ARCH_4;}' unless defined(&E_MIPS_ARCH_4);
    eval 'sub E_MIPS_ARCH_5 () { &EF_MIPS_ARCH_5;}' unless defined(&E_MIPS_ARCH_5);
    eval 'sub E_MIPS_ARCH_32 () { &EF_MIPS_ARCH_32;}' unless defined(&E_MIPS_ARCH_32);
    eval 'sub E_MIPS_ARCH_64 () { &EF_MIPS_ARCH_64;}' unless defined(&E_MIPS_ARCH_64);
    eval 'sub SHN_MIPS_ACOMMON () {0xff00;}' unless defined(&SHN_MIPS_ACOMMON);
    eval 'sub SHN_MIPS_TEXT () {0xff01;}' unless defined(&SHN_MIPS_TEXT);
    eval 'sub SHN_MIPS_DATA () {0xff02;}' unless defined(&SHN_MIPS_DATA);
    eval 'sub SHN_MIPS_SCOMMON () {0xff03;}' unless defined(&SHN_MIPS_SCOMMON);
    eval 'sub SHN_MIPS_SUNDEFINED () {0xff04;}' unless defined(&SHN_MIPS_SUNDEFINED);
    eval 'sub SHT_MIPS_LIBLIST () {0x70000000;}' unless defined(&SHT_MIPS_LIBLIST);
    eval 'sub SHT_MIPS_MSYM () {0x70000001;}' unless defined(&SHT_MIPS_MSYM);
    eval 'sub SHT_MIPS_CONFLICT () {0x70000002;}' unless defined(&SHT_MIPS_CONFLICT);
    eval 'sub SHT_MIPS_GPTAB () {0x70000003;}' unless defined(&SHT_MIPS_GPTAB);
    eval 'sub SHT_MIPS_UCODE () {0x70000004;}' unless defined(&SHT_MIPS_UCODE);
    eval 'sub SHT_MIPS_DEBUG () {0x70000005;}' unless defined(&SHT_MIPS_DEBUG);
    eval 'sub SHT_MIPS_REGINFO () {0x70000006;}' unless defined(&SHT_MIPS_REGINFO);
    eval 'sub SHT_MIPS_PACKAGE () {0x70000007;}' unless defined(&SHT_MIPS_PACKAGE);
    eval 'sub SHT_MIPS_PACKSYM () {0x70000008;}' unless defined(&SHT_MIPS_PACKSYM);
    eval 'sub SHT_MIPS_RELD () {0x70000009;}' unless defined(&SHT_MIPS_RELD);
    eval 'sub SHT_MIPS_IFACE () {0x7000000b;}' unless defined(&SHT_MIPS_IFACE);
    eval 'sub SHT_MIPS_CONTENT () {0x7000000c;}' unless defined(&SHT_MIPS_CONTENT);
    eval 'sub SHT_MIPS_OPTIONS () {0x7000000d;}' unless defined(&SHT_MIPS_OPTIONS);
    eval 'sub SHT_MIPS_SHDR () {0x70000010;}' unless defined(&SHT_MIPS_SHDR);
    eval 'sub SHT_MIPS_FDESC () {0x70000011;}' unless defined(&SHT_MIPS_FDESC);
    eval 'sub SHT_MIPS_EXTSYM () {0x70000012;}' unless defined(&SHT_MIPS_EXTSYM);
    eval 'sub SHT_MIPS_DENSE () {0x70000013;}' unless defined(&SHT_MIPS_DENSE);
    eval 'sub SHT_MIPS_PDESC () {0x70000014;}' unless defined(&SHT_MIPS_PDESC);
    eval 'sub SHT_MIPS_LOCSYM () {0x70000015;}' unless defined(&SHT_MIPS_LOCSYM);
    eval 'sub SHT_MIPS_AUXSYM () {0x70000016;}' unless defined(&SHT_MIPS_AUXSYM);
    eval 'sub SHT_MIPS_OPTSYM () {0x70000017;}' unless defined(&SHT_MIPS_OPTSYM);
    eval 'sub SHT_MIPS_LOCSTR () {0x70000018;}' unless defined(&SHT_MIPS_LOCSTR);
    eval 'sub SHT_MIPS_LINE () {0x70000019;}' unless defined(&SHT_MIPS_LINE);
    eval 'sub SHT_MIPS_RFDESC () {0x7000001a;}' unless defined(&SHT_MIPS_RFDESC);
    eval 'sub SHT_MIPS_DELTASYM () {0x7000001b;}' unless defined(&SHT_MIPS_DELTASYM);
    eval 'sub SHT_MIPS_DELTAINST () {0x7000001c;}' unless defined(&SHT_MIPS_DELTAINST);
    eval 'sub SHT_MIPS_DELTACLASS () {0x7000001d;}' unless defined(&SHT_MIPS_DELTACLASS);
    eval 'sub SHT_MIPS_DWARF () {0x7000001e;}' unless defined(&SHT_MIPS_DWARF);
    eval 'sub SHT_MIPS_DELTADECL () {0x7000001f;}' unless defined(&SHT_MIPS_DELTADECL);
    eval 'sub SHT_MIPS_SYMBOL_LIB () {0x70000020;}' unless defined(&SHT_MIPS_SYMBOL_LIB);
    eval 'sub SHT_MIPS_EVENTS () {0x70000021;}' unless defined(&SHT_MIPS_EVENTS);
    eval 'sub SHT_MIPS_TRANSLATE () {0x70000022;}' unless defined(&SHT_MIPS_TRANSLATE);
    eval 'sub SHT_MIPS_PIXIE () {0x70000023;}' unless defined(&SHT_MIPS_PIXIE);
    eval 'sub SHT_MIPS_XLATE () {0x70000024;}' unless defined(&SHT_MIPS_XLATE);
    eval 'sub SHT_MIPS_XLATE_DEBUG () {0x70000025;}' unless defined(&SHT_MIPS_XLATE_DEBUG);
    eval 'sub SHT_MIPS_WHIRL () {0x70000026;}' unless defined(&SHT_MIPS_WHIRL);
    eval 'sub SHT_MIPS_EH_REGION () {0x70000027;}' unless defined(&SHT_MIPS_EH_REGION);
    eval 'sub SHT_MIPS_XLATE_OLD () {0x70000028;}' unless defined(&SHT_MIPS_XLATE_OLD);
    eval 'sub SHT_MIPS_PDR_EXCEPTION () {0x70000029;}' unless defined(&SHT_MIPS_PDR_EXCEPTION);
    eval 'sub SHT_MIPS_XHASH () {0x7000002b;}' unless defined(&SHT_MIPS_XHASH);
    eval 'sub SHF_MIPS_GPREL () {0x10000000;}' unless defined(&SHF_MIPS_GPREL);
    eval 'sub SHF_MIPS_MERGE () {0x20000000;}' unless defined(&SHF_MIPS_MERGE);
    eval 'sub SHF_MIPS_ADDR () {0x40000000;}' unless defined(&SHF_MIPS_ADDR);
    eval 'sub SHF_MIPS_STRINGS () {0x80000000;}' unless defined(&SHF_MIPS_STRINGS);
    eval 'sub SHF_MIPS_NOSTRIP () {0x8000000;}' unless defined(&SHF_MIPS_NOSTRIP);
    eval 'sub SHF_MIPS_LOCAL () {0x4000000;}' unless defined(&SHF_MIPS_LOCAL);
    eval 'sub SHF_MIPS_NAMES () {0x2000000;}' unless defined(&SHF_MIPS_NAMES);
    eval 'sub SHF_MIPS_NODUPE () {0x1000000;}' unless defined(&SHF_MIPS_NODUPE);
    eval 'sub STO_MIPS_DEFAULT () {0x;}' unless defined(&STO_MIPS_DEFAULT);
    eval 'sub STO_MIPS_INTERNAL () {0x1;}' unless defined(&STO_MIPS_INTERNAL);
    eval 'sub STO_MIPS_HIDDEN () {0x2;}' unless defined(&STO_MIPS_HIDDEN);
    eval 'sub STO_MIPS_PROTECTED () {0x3;}' unless defined(&STO_MIPS_PROTECTED);
    eval 'sub STO_MIPS_PLT () {0x8;}' unless defined(&STO_MIPS_PLT);
    eval 'sub STO_MIPS_SC_ALIGN_UNUSED () {0xff;}' unless defined(&STO_MIPS_SC_ALIGN_UNUSED);
    eval 'sub STB_MIPS_SPLIT_COMMON () {13;}' unless defined(&STB_MIPS_SPLIT_COMMON);
    eval 'sub ODK_NULL () {0;}' unless defined(&ODK_NULL);
    eval 'sub ODK_REGINFO () {1;}' unless defined(&ODK_REGINFO);
    eval 'sub ODK_EXCEPTIONS () {2;}' unless defined(&ODK_EXCEPTIONS);
    eval 'sub ODK_PAD () {3;}' unless defined(&ODK_PAD);
    eval 'sub ODK_HWPATCH () {4;}' unless defined(&ODK_HWPATCH);
    eval 'sub ODK_FILL () {5;}' unless defined(&ODK_FILL);
    eval 'sub ODK_TAGS () {6;}' unless defined(&ODK_TAGS);
    eval 'sub ODK_HWAND () {7;}' unless defined(&ODK_HWAND);
    eval 'sub ODK_HWOR () {8;}' unless defined(&ODK_HWOR);
    eval 'sub OEX_FPU_MIN () {0x1f;}' unless defined(&OEX_FPU_MIN);
    eval 'sub OEX_FPU_MAX () {0x1f00;}' unless defined(&OEX_FPU_MAX);
    eval 'sub OEX_PAGE0 () {0x10000;}' unless defined(&OEX_PAGE0);
    eval 'sub OEX_SMM () {0x20000;}' unless defined(&OEX_SMM);
    eval 'sub OEX_FPDBUG () {0x40000;}' unless defined(&OEX_FPDBUG);
    eval 'sub OEX_PRECISEFP () { &OEX_FPDBUG;}' unless defined(&OEX_PRECISEFP);
    eval 'sub OEX_DISMISS () {0x80000;}' unless defined(&OEX_DISMISS);
    eval 'sub OEX_FPU_INVAL () {0x10;}' unless defined(&OEX_FPU_INVAL);
    eval 'sub OEX_FPU_DIV0 () {0x8;}' unless defined(&OEX_FPU_DIV0);
    eval 'sub OEX_FPU_OFLO () {0x4;}' unless defined(&OEX_FPU_OFLO);
    eval 'sub OEX_FPU_UFLO () {0x2;}' unless defined(&OEX_FPU_UFLO);
    eval 'sub OEX_FPU_INEX () {0x1;}' unless defined(&OEX_FPU_INEX);
    eval 'sub OHW_R4KEOP () {0x1;}' unless defined(&OHW_R4KEOP);
    eval 'sub OHW_R8KPFETCH () {0x2;}' unless defined(&OHW_R8KPFETCH);
    eval 'sub OHW_R5KEOP () {0x4;}' unless defined(&OHW_R5KEOP);
    eval 'sub OHW_R5KCVTL () {0x8;}' unless defined(&OHW_R5KCVTL);
    eval 'sub OPAD_PREFIX () {0x1;}' unless defined(&OPAD_PREFIX);
    eval 'sub OPAD_POSTFIX () {0x2;}' unless defined(&OPAD_POSTFIX);
    eval 'sub OPAD_SYMBOL () {0x4;}' unless defined(&OPAD_SYMBOL);
    eval 'sub OHWA0_R4KEOP_CHECKED () {0x1;}' unless defined(&OHWA0_R4KEOP_CHECKED);
    eval 'sub OHWA1_R4KEOP_CLEAN () {0x2;}' unless defined(&OHWA1_R4KEOP_CLEAN);
    eval 'sub R_MIPS_NONE () {0;}' unless defined(&R_MIPS_NONE);
    eval 'sub R_MIPS_16 () {1;}' unless defined(&R_MIPS_16);
    eval 'sub R_MIPS_32 () {2;}' unless defined(&R_MIPS_32);
    eval 'sub R_MIPS_REL32 () {3;}' unless defined(&R_MIPS_REL32);
    eval 'sub R_MIPS_26 () {4;}' unless defined(&R_MIPS_26);
    eval 'sub R_MIPS_HI16 () {5;}' unless defined(&R_MIPS_HI16);
    eval 'sub R_MIPS_LO16 () {6;}' unless defined(&R_MIPS_LO16);
    eval 'sub R_MIPS_GPREL16 () {7;}' unless defined(&R_MIPS_GPREL16);
    eval 'sub R_MIPS_LITERAL () {8;}' unless defined(&R_MIPS_LITERAL);
    eval 'sub R_MIPS_GOT16 () {9;}' unless defined(&R_MIPS_GOT16);
    eval 'sub R_MIPS_PC16 () {10;}' unless defined(&R_MIPS_PC16);
    eval 'sub R_MIPS_CALL16 () {11;}' unless defined(&R_MIPS_CALL16);
    eval 'sub R_MIPS_GPREL32 () {12;}' unless defined(&R_MIPS_GPREL32);
    eval 'sub R_MIPS_SHIFT5 () {16;}' unless defined(&R_MIPS_SHIFT5);
    eval 'sub R_MIPS_SHIFT6 () {17;}' unless defined(&R_MIPS_SHIFT6);
    eval 'sub R_MIPS_64 () {18;}' unless defined(&R_MIPS_64);
    eval 'sub R_MIPS_GOT_DISP () {19;}' unless defined(&R_MIPS_GOT_DISP);
    eval 'sub R_MIPS_GOT_PAGE () {20;}' unless defined(&R_MIPS_GOT_PAGE);
    eval 'sub R_MIPS_GOT_OFST () {21;}' unless defined(&R_MIPS_GOT_OFST);
    eval 'sub R_MIPS_GOT_HI16 () {22;}' unless defined(&R_MIPS_GOT_HI16);
    eval 'sub R_MIPS_GOT_LO16 () {23;}' unless defined(&R_MIPS_GOT_LO16);
    eval 'sub R_MIPS_SUB () {24;}' unless defined(&R_MIPS_SUB);
    eval 'sub R_MIPS_INSERT_A () {25;}' unless defined(&R_MIPS_INSERT_A);
    eval 'sub R_MIPS_INSERT_B () {26;}' unless defined(&R_MIPS_INSERT_B);
    eval 'sub R_MIPS_DELETE () {27;}' unless defined(&R_MIPS_DELETE);
    eval 'sub R_MIPS_HIGHER () {28;}' unless defined(&R_MIPS_HIGHER);
    eval 'sub R_MIPS_HIGHEST () {29;}' unless defined(&R_MIPS_HIGHEST);
    eval 'sub R_MIPS_CALL_HI16 () {30;}' unless defined(&R_MIPS_CALL_HI16);
    eval 'sub R_MIPS_CALL_LO16 () {31;}' unless defined(&R_MIPS_CALL_LO16);
    eval 'sub R_MIPS_SCN_DISP () {32;}' unless defined(&R_MIPS_SCN_DISP);
    eval 'sub R_MIPS_REL16 () {33;}' unless defined(&R_MIPS_REL16);
    eval 'sub R_MIPS_ADD_IMMEDIATE () {34;}' unless defined(&R_MIPS_ADD_IMMEDIATE);
    eval 'sub R_MIPS_PJUMP () {35;}' unless defined(&R_MIPS_PJUMP);
    eval 'sub R_MIPS_RELGOT () {36;}' unless defined(&R_MIPS_RELGOT);
    eval 'sub R_MIPS_JALR () {37;}' unless defined(&R_MIPS_JALR);
    eval 'sub R_MIPS_TLS_DTPMOD32 () {38;}' unless defined(&R_MIPS_TLS_DTPMOD32);
    eval 'sub R_MIPS_TLS_DTPREL32 () {39;}' unless defined(&R_MIPS_TLS_DTPREL32);
    eval 'sub R_MIPS_TLS_DTPMOD64 () {40;}' unless defined(&R_MIPS_TLS_DTPMOD64);
    eval 'sub R_MIPS_TLS_DTPREL64 () {41;}' unless defined(&R_MIPS_TLS_DTPREL64);
    eval 'sub R_MIPS_TLS_GD () {42;}' unless defined(&R_MIPS_TLS_GD);
    eval 'sub R_MIPS_TLS_LDM () {43;}' unless defined(&R_MIPS_TLS_LDM);
    eval 'sub R_MIPS_TLS_DTPREL_HI16 () {44;}' unless defined(&R_MIPS_TLS_DTPREL_HI16);
    eval 'sub R_MIPS_TLS_DTPREL_LO16 () {45;}' unless defined(&R_MIPS_TLS_DTPREL_LO16);
    eval 'sub R_MIPS_TLS_GOTTPREL () {46;}' unless defined(&R_MIPS_TLS_GOTTPREL);
    eval 'sub R_MIPS_TLS_TPREL32 () {47;}' unless defined(&R_MIPS_TLS_TPREL32);
    eval 'sub R_MIPS_TLS_TPREL64 () {48;}' unless defined(&R_MIPS_TLS_TPREL64);
    eval 'sub R_MIPS_TLS_TPREL_HI16 () {49;}' unless defined(&R_MIPS_TLS_TPREL_HI16);
    eval 'sub R_MIPS_TLS_TPREL_LO16 () {50;}' unless defined(&R_MIPS_TLS_TPREL_LO16);
    eval 'sub R_MIPS_GLOB_DAT () {51;}' unless defined(&R_MIPS_GLOB_DAT);
    eval 'sub R_MIPS_COPY () {126;}' unless defined(&R_MIPS_COPY);
    eval 'sub R_MIPS_JUMP_SLOT () {127;}' unless defined(&R_MIPS_JUMP_SLOT);
    eval 'sub R_MIPS_NUM () {128;}' unless defined(&R_MIPS_NUM);
    eval 'sub PT_MIPS_REGINFO () {0x70000000;}' unless defined(&PT_MIPS_REGINFO);
    eval 'sub PT_MIPS_RTPROC () {0x70000001;}' unless defined(&PT_MIPS_RTPROC);
    eval 'sub PT_MIPS_OPTIONS () {0x70000002;}' unless defined(&PT_MIPS_OPTIONS);
    eval 'sub PT_MIPS_ABIFLAGS () {0x70000003;}' unless defined(&PT_MIPS_ABIFLAGS);
    eval 'sub PF_MIPS_LOCAL () {0x10000000;}' unless defined(&PF_MIPS_LOCAL);
    eval 'sub DT_MIPS_RLD_VERSION () {0x70000001;}' unless defined(&DT_MIPS_RLD_VERSION);
    eval 'sub DT_MIPS_TIME_STAMP () {0x70000002;}' unless defined(&DT_MIPS_TIME_STAMP);
    eval 'sub DT_MIPS_ICHECKSUM () {0x70000003;}' unless defined(&DT_MIPS_ICHECKSUM);
    eval 'sub DT_MIPS_IVERSION () {0x70000004;}' unless defined(&DT_MIPS_IVERSION);
    eval 'sub DT_MIPS_FLAGS () {0x70000005;}' unless defined(&DT_MIPS_FLAGS);
    eval 'sub DT_MIPS_BASE_ADDRESS () {0x70000006;}' unless defined(&DT_MIPS_BASE_ADDRESS);
    eval 'sub DT_MIPS_MSYM () {0x70000007;}' unless defined(&DT_MIPS_MSYM);
    eval 'sub DT_MIPS_CONFLICT () {0x70000008;}' unless defined(&DT_MIPS_CONFLICT);
    eval 'sub DT_MIPS_LIBLIST () {0x70000009;}' unless defined(&DT_MIPS_LIBLIST);
    eval 'sub DT_MIPS_LOCAL_GOTNO () {0x7000000a;}' unless defined(&DT_MIPS_LOCAL_GOTNO);
    eval 'sub DT_MIPS_CONFLICTNO () {0x7000000b;}' unless defined(&DT_MIPS_CONFLICTNO);
    eval 'sub DT_MIPS_LIBLISTNO () {0x70000010;}' unless defined(&DT_MIPS_LIBLISTNO);
    eval 'sub DT_MIPS_SYMTABNO () {0x70000011;}' unless defined(&DT_MIPS_SYMTABNO);
    eval 'sub DT_MIPS_UNREFEXTNO () {0x70000012;}' unless defined(&DT_MIPS_UNREFEXTNO);
    eval 'sub DT_MIPS_GOTSYM () {0x70000013;}' unless defined(&DT_MIPS_GOTSYM);
    eval 'sub DT_MIPS_HIPAGENO () {0x70000014;}' unless defined(&DT_MIPS_HIPAGENO);
    eval 'sub DT_MIPS_RLD_MAP () {0x70000016;}' unless defined(&DT_MIPS_RLD_MAP);
    eval 'sub DT_MIPS_DELTA_CLASS () {0x70000017;}' unless defined(&DT_MIPS_DELTA_CLASS);
    eval 'sub DT_MIPS_DELTA_CLASS_NO () {0x70000018;}' unless defined(&DT_MIPS_DELTA_CLASS_NO);
    eval 'sub DT_MIPS_DELTA_INSTANCE () {0x70000019;}' unless defined(&DT_MIPS_DELTA_INSTANCE);
    eval 'sub DT_MIPS_DELTA_INSTANCE_NO () {0x7000001a;}' unless defined(&DT_MIPS_DELTA_INSTANCE_NO);
    eval 'sub DT_MIPS_DELTA_RELOC () {0x7000001b;}' unless defined(&DT_MIPS_DELTA_RELOC);
    eval 'sub DT_MIPS_DELTA_RELOC_NO () {0x7000001c;}' unless defined(&DT_MIPS_DELTA_RELOC_NO);
    eval 'sub DT_MIPS_DELTA_SYM () {0x7000001d;}' unless defined(&DT_MIPS_DELTA_SYM);
    eval 'sub DT_MIPS_DELTA_SYM_NO () {0x7000001e;}' unless defined(&DT_MIPS_DELTA_SYM_NO);
    eval 'sub DT_MIPS_DELTA_CLASSSYM () {0x70000020;}' unless defined(&DT_MIPS_DELTA_CLASSSYM);
    eval 'sub DT_MIPS_DELTA_CLASSSYM_NO () {0x70000021;}' unless defined(&DT_MIPS_DELTA_CLASSSYM_NO);
    eval 'sub DT_MIPS_CXX_FLAGS () {0x70000022;}' unless defined(&DT_MIPS_CXX_FLAGS);
    eval 'sub DT_MIPS_PIXIE_INIT () {0x70000023;}' unless defined(&DT_MIPS_PIXIE_INIT);
    eval 'sub DT_MIPS_SYMBOL_LIB () {0x70000024;}' unless defined(&DT_MIPS_SYMBOL_LIB);
    eval 'sub DT_MIPS_LOCALPAGE_GOTIDX () {0x70000025;}' unless defined(&DT_MIPS_LOCALPAGE_GOTIDX);
    eval 'sub DT_MIPS_LOCAL_GOTIDX () {0x70000026;}' unless defined(&DT_MIPS_LOCAL_GOTIDX);
    eval 'sub DT_MIPS_HIDDEN_GOTIDX () {0x70000027;}' unless defined(&DT_MIPS_HIDDEN_GOTIDX);
    eval 'sub DT_MIPS_PROTECTED_GOTIDX () {0x70000028;}' unless defined(&DT_MIPS_PROTECTED_GOTIDX);
    eval 'sub DT_MIPS_OPTIONS () {0x70000029;}' unless defined(&DT_MIPS_OPTIONS);
    eval 'sub DT_MIPS_INTERFACE () {0x7000002a;}' unless defined(&DT_MIPS_INTERFACE);
    eval 'sub DT_MIPS_DYNSTR_ALIGN () {0x7000002b;}' unless defined(&DT_MIPS_DYNSTR_ALIGN);
    eval 'sub DT_MIPS_INTERFACE_SIZE () {0x7000002c;}' unless defined(&DT_MIPS_INTERFACE_SIZE);
    eval 'sub DT_MIPS_RLD_TEXT_RESOLVE_ADDR () {0x7000002d;}' unless defined(&DT_MIPS_RLD_TEXT_RESOLVE_ADDR);
    eval 'sub DT_MIPS_PERF_SUFFIX () {0x7000002e;}' unless defined(&DT_MIPS_PERF_SUFFIX);
    eval 'sub DT_MIPS_COMPACT_SIZE () {0x7000002f;}' unless defined(&DT_MIPS_COMPACT_SIZE);
    eval 'sub DT_MIPS_GP_VALUE () {0x70000030;}' unless defined(&DT_MIPS_GP_VALUE);
    eval 'sub DT_MIPS_AUX_DYNAMIC () {0x70000031;}' unless defined(&DT_MIPS_AUX_DYNAMIC);
    eval 'sub DT_MIPS_PLTGOT () {0x70000032;}' unless defined(&DT_MIPS_PLTGOT);
    eval 'sub DT_MIPS_RWPLT () {0x70000034;}' unless defined(&DT_MIPS_RWPLT);
    eval 'sub DT_MIPS_RLD_MAP_REL () {0x70000035;}' unless defined(&DT_MIPS_RLD_MAP_REL);
    eval 'sub DT_MIPS_XHASH () {0x70000036;}' unless defined(&DT_MIPS_XHASH);
    eval 'sub DT_MIPS_NUM () {0x37;}' unless defined(&DT_MIPS_NUM);
    eval 'sub RHF_NONE () {0;}' unless defined(&RHF_NONE);
    eval 'sub RHF_QUICKSTART () {(1<< 0);}' unless defined(&RHF_QUICKSTART);
    eval 'sub RHF_NOTPOT () {(1<< 1);}' unless defined(&RHF_NOTPOT);
    eval 'sub RHF_NO_LIBRARY_REPLACEMENT () {(1<< 2);}' unless defined(&RHF_NO_LIBRARY_REPLACEMENT);
    eval 'sub RHF_NO_MOVE () {(1<< 3);}' unless defined(&RHF_NO_MOVE);
    eval 'sub RHF_SGI_ONLY () {(1<< 4);}' unless defined(&RHF_SGI_ONLY);
    eval 'sub RHF_GUARANTEE_INIT () {(1<< 5);}' unless defined(&RHF_GUARANTEE_INIT);
    eval 'sub RHF_DELTA_C_PLUS_PLUS () {(1<< 6);}' unless defined(&RHF_DELTA_C_PLUS_PLUS);
    eval 'sub RHF_GUARANTEE_START_INIT () {(1<< 7);}' unless defined(&RHF_GUARANTEE_START_INIT);
    eval 'sub RHF_PIXIE () {(1<< 8);}' unless defined(&RHF_PIXIE);
    eval 'sub RHF_DEFAULT_DELAY_LOAD () {(1<< 9);}' unless defined(&RHF_DEFAULT_DELAY_LOAD);
    eval 'sub RHF_REQUICKSTART () {(1<< 10);}' unless defined(&RHF_REQUICKSTART);
    eval 'sub RHF_REQUICKSTARTED () {(1<< 11);}' unless defined(&RHF_REQUICKSTARTED);
    eval 'sub RHF_CORD () {(1<< 12);}' unless defined(&RHF_CORD);
    eval 'sub RHF_NO_UNRES_UNDEF () {(1<< 13);}' unless defined(&RHF_NO_UNRES_UNDEF);
    eval 'sub RHF_RLD_ORDER_SAFE () {(1<< 14);}' unless defined(&RHF_RLD_ORDER_SAFE);
    eval 'sub LL_NONE () {0;}' unless defined(&LL_NONE);
    eval 'sub LL_EXACT_MATCH () {(1<< 0);}' unless defined(&LL_EXACT_MATCH);
    eval 'sub LL_IGNORE_INT_VER () {(1<< 1);}' unless defined(&LL_IGNORE_INT_VER);
    eval 'sub LL_REQUIRE_MINOR () {(1<< 2);}' unless defined(&LL_REQUIRE_MINOR);
    eval 'sub LL_EXPORTS () {(1<< 3);}' unless defined(&LL_EXPORTS);
    eval 'sub LL_DELAY_LOAD () {(1<< 4);}' unless defined(&LL_DELAY_LOAD);
    eval 'sub LL_DELTA () {(1<< 5);}' unless defined(&LL_DELTA);
    eval 'sub MIPS_AFL_REG_NONE () {0x;}' unless defined(&MIPS_AFL_REG_NONE);
    eval 'sub MIPS_AFL_REG_32 () {0x1;}' unless defined(&MIPS_AFL_REG_32);
    eval 'sub MIPS_AFL_REG_64 () {0x2;}' unless defined(&MIPS_AFL_REG_64);
    eval 'sub MIPS_AFL_REG_128 () {0x3;}' unless defined(&MIPS_AFL_REG_128);
    eval 'sub MIPS_AFL_ASE_DSP () {0x1;}' unless defined(&MIPS_AFL_ASE_DSP);
    eval 'sub MIPS_AFL_ASE_DSPR2 () {0x2;}' unless defined(&MIPS_AFL_ASE_DSPR2);
    eval 'sub MIPS_AFL_ASE_EVA () {0x4;}' unless defined(&MIPS_AFL_ASE_EVA);
    eval 'sub MIPS_AFL_ASE_MCU () {0x8;}' unless defined(&MIPS_AFL_ASE_MCU);
    eval 'sub MIPS_AFL_ASE_MDMX () {0x10;}' unless defined(&MIPS_AFL_ASE_MDMX);
    eval 'sub MIPS_AFL_ASE_MIPS3D () {0x20;}' unless defined(&MIPS_AFL_ASE_MIPS3D);
    eval 'sub MIPS_AFL_ASE_MT () {0x40;}' unless defined(&MIPS_AFL_ASE_MT);
    eval 'sub MIPS_AFL_ASE_SMARTMIPS () {0x80;}' unless defined(&MIPS_AFL_ASE_SMARTMIPS);
    eval 'sub MIPS_AFL_ASE_VIRT () {0x100;}' unless defined(&MIPS_AFL_ASE_VIRT);
    eval 'sub MIPS_AFL_ASE_MSA () {0x200;}' unless defined(&MIPS_AFL_ASE_MSA);
    eval 'sub MIPS_AFL_ASE_MIPS16 () {0x400;}' unless defined(&MIPS_AFL_ASE_MIPS16);
    eval 'sub MIPS_AFL_ASE_MICROMIPS () {0x800;}' unless defined(&MIPS_AFL_ASE_MICROMIPS);
    eval 'sub MIPS_AFL_ASE_XPA () {0x1000;}' unless defined(&MIPS_AFL_ASE_XPA);
    eval 'sub MIPS_AFL_ASE_MASK () {0x1fff;}' unless defined(&MIPS_AFL_ASE_MASK);
    eval 'sub MIPS_AFL_EXT_XLR () {1;}' unless defined(&MIPS_AFL_EXT_XLR);
    eval 'sub MIPS_AFL_EXT_OCTEON2 () {2;}' unless defined(&MIPS_AFL_EXT_OCTEON2);
    eval 'sub MIPS_AFL_EXT_OCTEONP () {3;}' unless defined(&MIPS_AFL_EXT_OCTEONP);
    eval 'sub MIPS_AFL_EXT_LOONGSON_3A () {4;}' unless defined(&MIPS_AFL_EXT_LOONGSON_3A);
    eval 'sub MIPS_AFL_EXT_OCTEON () {5;}' unless defined(&MIPS_AFL_EXT_OCTEON);
    eval 'sub MIPS_AFL_EXT_5900 () {6;}' unless defined(&MIPS_AFL_EXT_5900);
    eval 'sub MIPS_AFL_EXT_4650 () {7;}' unless defined(&MIPS_AFL_EXT_4650);
    eval 'sub MIPS_AFL_EXT_4010 () {8;}' unless defined(&MIPS_AFL_EXT_4010);
    eval 'sub MIPS_AFL_EXT_4100 () {9;}' unless defined(&MIPS_AFL_EXT_4100);
    eval 'sub MIPS_AFL_EXT_3900 () {10;}' unless defined(&MIPS_AFL_EXT_3900);
    eval 'sub MIPS_AFL_EXT_10000 () {11;}' unless defined(&MIPS_AFL_EXT_10000);
    eval 'sub MIPS_AFL_EXT_SB1 () {12;}' unless defined(&MIPS_AFL_EXT_SB1);
    eval 'sub MIPS_AFL_EXT_4111 () {13;}' unless defined(&MIPS_AFL_EXT_4111);
    eval 'sub MIPS_AFL_EXT_4120 () {14;}' unless defined(&MIPS_AFL_EXT_4120);
    eval 'sub MIPS_AFL_EXT_5400 () {15;}' unless defined(&MIPS_AFL_EXT_5400);
    eval 'sub MIPS_AFL_EXT_5500 () {16;}' unless defined(&MIPS_AFL_EXT_5500);
    eval 'sub MIPS_AFL_EXT_LOONGSON_2E () {17;}' unless defined(&MIPS_AFL_EXT_LOONGSON_2E);
    eval 'sub MIPS_AFL_EXT_LOONGSON_2F () {18;}' unless defined(&MIPS_AFL_EXT_LOONGSON_2F);
    eval 'sub MIPS_AFL_FLAGS1_ODDSPREG () {1;}' unless defined(&MIPS_AFL_FLAGS1_ODDSPREG);
    eval("sub Val_GNU_MIPS_ABI_FP_ANY () { 0; }") unless defined(&Val_GNU_MIPS_ABI_FP_ANY);
    eval("sub Val_GNU_MIPS_ABI_FP_DOUBLE () { 1; }") unless defined(&Val_GNU_MIPS_ABI_FP_DOUBLE);
    eval("sub Val_GNU_MIPS_ABI_FP_SINGLE () { 2; }") unless defined(&Val_GNU_MIPS_ABI_FP_SINGLE);
    eval("sub Val_GNU_MIPS_ABI_FP_SOFT () { 3; }") unless defined(&Val_GNU_MIPS_ABI_FP_SOFT);
    eval("sub Val_GNU_MIPS_ABI_FP_OLD_64 () { 4; }") unless defined(&Val_GNU_MIPS_ABI_FP_OLD_64);
    eval("sub Val_GNU_MIPS_ABI_FP_XX () { 5; }") unless defined(&Val_GNU_MIPS_ABI_FP_XX);
    eval("sub Val_GNU_MIPS_ABI_FP_64 () { 6; }") unless defined(&Val_GNU_MIPS_ABI_FP_64);
    eval("sub Val_GNU_MIPS_ABI_FP_64A () { 7; }") unless defined(&Val_GNU_MIPS_ABI_FP_64A);
    eval("sub Val_GNU_MIPS_ABI_FP_MAX () { 7; }") unless defined(&Val_GNU_MIPS_ABI_FP_MAX);
    eval 'sub EF_PARISC_TRAPNIL () {0x10000;}' unless defined(&EF_PARISC_TRAPNIL);
    eval 'sub EF_PARISC_EXT () {0x20000;}' unless defined(&EF_PARISC_EXT);
    eval 'sub EF_PARISC_LSB () {0x40000;}' unless defined(&EF_PARISC_LSB);
    eval 'sub EF_PARISC_WIDE () {0x80000;}' unless defined(&EF_PARISC_WIDE);
    eval 'sub EF_PARISC_NO_KABP () {0x100000;}' unless defined(&EF_PARISC_NO_KABP);
    eval 'sub EF_PARISC_LAZYSWAP () {0x400000;}' unless defined(&EF_PARISC_LAZYSWAP);
    eval 'sub EF_PARISC_ARCH () {0xffff;}' unless defined(&EF_PARISC_ARCH);
    eval 'sub EFA_PARISC_1_0 () {0x20b;}' unless defined(&EFA_PARISC_1_0);
    eval 'sub EFA_PARISC_1_1 () {0x210;}' unless defined(&EFA_PARISC_1_1);
    eval 'sub EFA_PARISC_2_0 () {0x214;}' unless defined(&EFA_PARISC_2_0);
    eval 'sub SHN_PARISC_ANSI_COMMON () {0xff00;}' unless defined(&SHN_PARISC_ANSI_COMMON);
    eval 'sub SHN_PARISC_HUGE_COMMON () {0xff01;}' unless defined(&SHN_PARISC_HUGE_COMMON);
    eval 'sub SHT_PARISC_EXT () {0x70000000;}' unless defined(&SHT_PARISC_EXT);
    eval 'sub SHT_PARISC_UNWIND () {0x70000001;}' unless defined(&SHT_PARISC_UNWIND);
    eval 'sub SHT_PARISC_DOC () {0x70000002;}' unless defined(&SHT_PARISC_DOC);
    eval 'sub SHF_PARISC_SHORT () {0x20000000;}' unless defined(&SHF_PARISC_SHORT);
    eval 'sub SHF_PARISC_HUGE () {0x40000000;}' unless defined(&SHF_PARISC_HUGE);
    eval 'sub SHF_PARISC_SBP () {0x80000000;}' unless defined(&SHF_PARISC_SBP);
    eval 'sub STT_PARISC_MILLICODE () {13;}' unless defined(&STT_PARISC_MILLICODE);
    eval 'sub STT_HP_OPAQUE () {( &STT_LOOS + 0x1);}' unless defined(&STT_HP_OPAQUE);
    eval 'sub STT_HP_STUB () {( &STT_LOOS + 0x2);}' unless defined(&STT_HP_STUB);
    eval 'sub R_PARISC_NONE () {0;}' unless defined(&R_PARISC_NONE);
    eval 'sub R_PARISC_DIR32 () {1;}' unless defined(&R_PARISC_DIR32);
    eval 'sub R_PARISC_DIR21L () {2;}' unless defined(&R_PARISC_DIR21L);
    eval 'sub R_PARISC_DIR17R () {3;}' unless defined(&R_PARISC_DIR17R);
    eval 'sub R_PARISC_DIR17F () {4;}' unless defined(&R_PARISC_DIR17F);
    eval 'sub R_PARISC_DIR14R () {6;}' unless defined(&R_PARISC_DIR14R);
    eval 'sub R_PARISC_PCREL32 () {9;}' unless defined(&R_PARISC_PCREL32);
    eval 'sub R_PARISC_PCREL21L () {10;}' unless defined(&R_PARISC_PCREL21L);
    eval 'sub R_PARISC_PCREL17R () {11;}' unless defined(&R_PARISC_PCREL17R);
    eval 'sub R_PARISC_PCREL17F () {12;}' unless defined(&R_PARISC_PCREL17F);
    eval 'sub R_PARISC_PCREL14R () {14;}' unless defined(&R_PARISC_PCREL14R);
    eval 'sub R_PARISC_DPREL21L () {18;}' unless defined(&R_PARISC_DPREL21L);
    eval 'sub R_PARISC_DPREL14R () {22;}' unless defined(&R_PARISC_DPREL14R);
    eval 'sub R_PARISC_GPREL21L () {26;}' unless defined(&R_PARISC_GPREL21L);
    eval 'sub R_PARISC_GPREL14R () {30;}' unless defined(&R_PARISC_GPREL14R);
    eval 'sub R_PARISC_LTOFF21L () {34;}' unless defined(&R_PARISC_LTOFF21L);
    eval 'sub R_PARISC_LTOFF14R () {38;}' unless defined(&R_PARISC_LTOFF14R);
    eval 'sub R_PARISC_SECREL32 () {41;}' unless defined(&R_PARISC_SECREL32);
    eval 'sub R_PARISC_SEGBASE () {48;}' unless defined(&R_PARISC_SEGBASE);
    eval 'sub R_PARISC_SEGREL32 () {49;}' unless defined(&R_PARISC_SEGREL32);
    eval 'sub R_PARISC_PLTOFF21L () {50;}' unless defined(&R_PARISC_PLTOFF21L);
    eval 'sub R_PARISC_PLTOFF14R () {54;}' unless defined(&R_PARISC_PLTOFF14R);
    eval 'sub R_PARISC_LTOFF_FPTR32 () {57;}' unless defined(&R_PARISC_LTOFF_FPTR32);
    eval 'sub R_PARISC_LTOFF_FPTR21L () {58;}' unless defined(&R_PARISC_LTOFF_FPTR21L);
    eval 'sub R_PARISC_LTOFF_FPTR14R () {62;}' unless defined(&R_PARISC_LTOFF_FPTR14R);
    eval 'sub R_PARISC_FPTR64 () {64;}' unless defined(&R_PARISC_FPTR64);
    eval 'sub R_PARISC_PLABEL32 () {65;}' unless defined(&R_PARISC_PLABEL32);
    eval 'sub R_PARISC_PLABEL21L () {66;}' unless defined(&R_PARISC_PLABEL21L);
    eval 'sub R_PARISC_PLABEL14R () {70;}' unless defined(&R_PARISC_PLABEL14R);
    eval 'sub R_PARISC_PCREL64 () {72;}' unless defined(&R_PARISC_PCREL64);
    eval 'sub R_PARISC_PCREL22F () {74;}' unless defined(&R_PARISC_PCREL22F);
    eval 'sub R_PARISC_PCREL14WR () {75;}' unless defined(&R_PARISC_PCREL14WR);
    eval 'sub R_PARISC_PCREL14DR () {76;}' unless defined(&R_PARISC_PCREL14DR);
    eval 'sub R_PARISC_PCREL16F () {77;}' unless defined(&R_PARISC_PCREL16F);
    eval 'sub R_PARISC_PCREL16WF () {78;}' unless defined(&R_PARISC_PCREL16WF);
    eval 'sub R_PARISC_PCREL16DF () {79;}' unless defined(&R_PARISC_PCREL16DF);
    eval 'sub R_PARISC_DIR64 () {80;}' unless defined(&R_PARISC_DIR64);
    eval 'sub R_PARISC_DIR14WR () {83;}' unless defined(&R_PARISC_DIR14WR);
    eval 'sub R_PARISC_DIR14DR () {84;}' unless defined(&R_PARISC_DIR14DR);
    eval 'sub R_PARISC_DIR16F () {85;}' unless defined(&R_PARISC_DIR16F);
    eval 'sub R_PARISC_DIR16WF () {86;}' unless defined(&R_PARISC_DIR16WF);
    eval 'sub R_PARISC_DIR16DF () {87;}' unless defined(&R_PARISC_DIR16DF);
    eval 'sub R_PARISC_GPREL64 () {88;}' unless defined(&R_PARISC_GPREL64);
    eval 'sub R_PARISC_GPREL14WR () {91;}' unless defined(&R_PARISC_GPREL14WR);
    eval 'sub R_PARISC_GPREL14DR () {92;}' unless defined(&R_PARISC_GPREL14DR);
    eval 'sub R_PARISC_GPREL16F () {93;}' unless defined(&R_PARISC_GPREL16F);
    eval 'sub R_PARISC_GPREL16WF () {94;}' unless defined(&R_PARISC_GPREL16WF);
    eval 'sub R_PARISC_GPREL16DF () {95;}' unless defined(&R_PARISC_GPREL16DF);
    eval 'sub R_PARISC_LTOFF64 () {96;}' unless defined(&R_PARISC_LTOFF64);
    eval 'sub R_PARISC_LTOFF14WR () {99;}' unless defined(&R_PARISC_LTOFF14WR);
    eval 'sub R_PARISC_LTOFF14DR () {100;}' unless defined(&R_PARISC_LTOFF14DR);
    eval 'sub R_PARISC_LTOFF16F () {101;}' unless defined(&R_PARISC_LTOFF16F);
    eval 'sub R_PARISC_LTOFF16WF () {102;}' unless defined(&R_PARISC_LTOFF16WF);
    eval 'sub R_PARISC_LTOFF16DF () {103;}' unless defined(&R_PARISC_LTOFF16DF);
    eval 'sub R_PARISC_SECREL64 () {104;}' unless defined(&R_PARISC_SECREL64);
    eval 'sub R_PARISC_SEGREL64 () {112;}' unless defined(&R_PARISC_SEGREL64);
    eval 'sub R_PARISC_PLTOFF14WR () {115;}' unless defined(&R_PARISC_PLTOFF14WR);
    eval 'sub R_PARISC_PLTOFF14DR () {116;}' unless defined(&R_PARISC_PLTOFF14DR);
    eval 'sub R_PARISC_PLTOFF16F () {117;}' unless defined(&R_PARISC_PLTOFF16F);
    eval 'sub R_PARISC_PLTOFF16WF () {118;}' unless defined(&R_PARISC_PLTOFF16WF);
    eval 'sub R_PARISC_PLTOFF16DF () {119;}' unless defined(&R_PARISC_PLTOFF16DF);
    eval 'sub R_PARISC_LTOFF_FPTR64 () {120;}' unless defined(&R_PARISC_LTOFF_FPTR64);
    eval 'sub R_PARISC_LTOFF_FPTR14WR () {123;}' unless defined(&R_PARISC_LTOFF_FPTR14WR);
    eval 'sub R_PARISC_LTOFF_FPTR14DR () {124;}' unless defined(&R_PARISC_LTOFF_FPTR14DR);
    eval 'sub R_PARISC_LTOFF_FPTR16F () {125;}' unless defined(&R_PARISC_LTOFF_FPTR16F);
    eval 'sub R_PARISC_LTOFF_FPTR16WF () {126;}' unless defined(&R_PARISC_LTOFF_FPTR16WF);
    eval 'sub R_PARISC_LTOFF_FPTR16DF () {127;}' unless defined(&R_PARISC_LTOFF_FPTR16DF);
    eval 'sub R_PARISC_LORESERVE () {128;}' unless defined(&R_PARISC_LORESERVE);
    eval 'sub R_PARISC_COPY () {128;}' unless defined(&R_PARISC_COPY);
    eval 'sub R_PARISC_IPLT () {129;}' unless defined(&R_PARISC_IPLT);
    eval 'sub R_PARISC_EPLT () {130;}' unless defined(&R_PARISC_EPLT);
    eval 'sub R_PARISC_TPREL32 () {153;}' unless defined(&R_PARISC_TPREL32);
    eval 'sub R_PARISC_TPREL21L () {154;}' unless defined(&R_PARISC_TPREL21L);
    eval 'sub R_PARISC_TPREL14R () {158;}' unless defined(&R_PARISC_TPREL14R);
    eval 'sub R_PARISC_LTOFF_TP21L () {162;}' unless defined(&R_PARISC_LTOFF_TP21L);
    eval 'sub R_PARISC_LTOFF_TP14R () {166;}' unless defined(&R_PARISC_LTOFF_TP14R);
    eval 'sub R_PARISC_LTOFF_TP14F () {167;}' unless defined(&R_PARISC_LTOFF_TP14F);
    eval 'sub R_PARISC_TPREL64 () {216;}' unless defined(&R_PARISC_TPREL64);
    eval 'sub R_PARISC_TPREL14WR () {219;}' unless defined(&R_PARISC_TPREL14WR);
    eval 'sub R_PARISC_TPREL14DR () {220;}' unless defined(&R_PARISC_TPREL14DR);
    eval 'sub R_PARISC_TPREL16F () {221;}' unless defined(&R_PARISC_TPREL16F);
    eval 'sub R_PARISC_TPREL16WF () {222;}' unless defined(&R_PARISC_TPREL16WF);
    eval 'sub R_PARISC_TPREL16DF () {223;}' unless defined(&R_PARISC_TPREL16DF);
    eval 'sub R_PARISC_LTOFF_TP64 () {224;}' unless defined(&R_PARISC_LTOFF_TP64);
    eval 'sub R_PARISC_LTOFF_TP14WR () {227;}' unless defined(&R_PARISC_LTOFF_TP14WR);
    eval 'sub R_PARISC_LTOFF_TP14DR () {228;}' unless defined(&R_PARISC_LTOFF_TP14DR);
    eval 'sub R_PARISC_LTOFF_TP16F () {229;}' unless defined(&R_PARISC_LTOFF_TP16F);
    eval 'sub R_PARISC_LTOFF_TP16WF () {230;}' unless defined(&R_PARISC_LTOFF_TP16WF);
    eval 'sub R_PARISC_LTOFF_TP16DF () {231;}' unless defined(&R_PARISC_LTOFF_TP16DF);
    eval 'sub R_PARISC_GNU_VTENTRY () {232;}' unless defined(&R_PARISC_GNU_VTENTRY);
    eval 'sub R_PARISC_GNU_VTINHERIT () {233;}' unless defined(&R_PARISC_GNU_VTINHERIT);
    eval 'sub R_PARISC_TLS_GD21L () {234;}' unless defined(&R_PARISC_TLS_GD21L);
    eval 'sub R_PARISC_TLS_GD14R () {235;}' unless defined(&R_PARISC_TLS_GD14R);
    eval 'sub R_PARISC_TLS_GDCALL () {236;}' unless defined(&R_PARISC_TLS_GDCALL);
    eval 'sub R_PARISC_TLS_LDM21L () {237;}' unless defined(&R_PARISC_TLS_LDM21L);
    eval 'sub R_PARISC_TLS_LDM14R () {238;}' unless defined(&R_PARISC_TLS_LDM14R);
    eval 'sub R_PARISC_TLS_LDMCALL () {239;}' unless defined(&R_PARISC_TLS_LDMCALL);
    eval 'sub R_PARISC_TLS_LDO21L () {240;}' unless defined(&R_PARISC_TLS_LDO21L);
    eval 'sub R_PARISC_TLS_LDO14R () {241;}' unless defined(&R_PARISC_TLS_LDO14R);
    eval 'sub R_PARISC_TLS_DTPMOD32 () {242;}' unless defined(&R_PARISC_TLS_DTPMOD32);
    eval 'sub R_PARISC_TLS_DTPMOD64 () {243;}' unless defined(&R_PARISC_TLS_DTPMOD64);
    eval 'sub R_PARISC_TLS_DTPOFF32 () {244;}' unless defined(&R_PARISC_TLS_DTPOFF32);
    eval 'sub R_PARISC_TLS_DTPOFF64 () {245;}' unless defined(&R_PARISC_TLS_DTPOFF64);
    eval 'sub R_PARISC_TLS_LE21L () { &R_PARISC_TPREL21L;}' unless defined(&R_PARISC_TLS_LE21L);
    eval 'sub R_PARISC_TLS_LE14R () { &R_PARISC_TPREL14R;}' unless defined(&R_PARISC_TLS_LE14R);
    eval 'sub R_PARISC_TLS_IE21L () { &R_PARISC_LTOFF_TP21L;}' unless defined(&R_PARISC_TLS_IE21L);
    eval 'sub R_PARISC_TLS_IE14R () { &R_PARISC_LTOFF_TP14R;}' unless defined(&R_PARISC_TLS_IE14R);
    eval 'sub R_PARISC_TLS_TPREL32 () { &R_PARISC_TPREL32;}' unless defined(&R_PARISC_TLS_TPREL32);
    eval 'sub R_PARISC_TLS_TPREL64 () { &R_PARISC_TPREL64;}' unless defined(&R_PARISC_TLS_TPREL64);
    eval 'sub R_PARISC_HIRESERVE () {255;}' unless defined(&R_PARISC_HIRESERVE);
    eval 'sub PT_HP_TLS () {( &PT_LOOS + 0x);}' unless defined(&PT_HP_TLS);
    eval 'sub PT_HP_CORE_NONE () {( &PT_LOOS + 0x1);}' unless defined(&PT_HP_CORE_NONE);
    eval 'sub PT_HP_CORE_VERSION () {( &PT_LOOS + 0x2);}' unless defined(&PT_HP_CORE_VERSION);
    eval 'sub PT_HP_CORE_KERNEL () {( &PT_LOOS + 0x3);}' unless defined(&PT_HP_CORE_KERNEL);
    eval 'sub PT_HP_CORE_COMM () {( &PT_LOOS + 0x4);}' unless defined(&PT_HP_CORE_COMM);
    eval 'sub PT_HP_CORE_PROC () {( &PT_LOOS + 0x5);}' unless defined(&PT_HP_CORE_PROC);
    eval 'sub PT_HP_CORE_LOADABLE () {( &PT_LOOS + 0x6);}' unless defined(&PT_HP_CORE_LOADABLE);
    eval 'sub PT_HP_CORE_STACK () {( &PT_LOOS + 0x7);}' unless defined(&PT_HP_CORE_STACK);
    eval 'sub PT_HP_CORE_SHM () {( &PT_LOOS + 0x8);}' unless defined(&PT_HP_CORE_SHM);
    eval 'sub PT_HP_CORE_MMF () {( &PT_LOOS + 0x9);}' unless defined(&PT_HP_CORE_MMF);
    eval 'sub PT_HP_PARALLEL () {( &PT_LOOS + 0x10);}' unless defined(&PT_HP_PARALLEL);
    eval 'sub PT_HP_FASTBIND () {( &PT_LOOS + 0x11);}' unless defined(&PT_HP_FASTBIND);
    eval 'sub PT_HP_OPT_ANNOT () {( &PT_LOOS + 0x12);}' unless defined(&PT_HP_OPT_ANNOT);
    eval 'sub PT_HP_HSL_ANNOT () {( &PT_LOOS + 0x13);}' unless defined(&PT_HP_HSL_ANNOT);
    eval 'sub PT_HP_STACK () {( &PT_LOOS + 0x14);}' unless defined(&PT_HP_STACK);
    eval 'sub PT_PARISC_ARCHEXT () {0x70000000;}' unless defined(&PT_PARISC_ARCHEXT);
    eval 'sub PT_PARISC_UNWIND () {0x70000001;}' unless defined(&PT_PARISC_UNWIND);
    eval 'sub PF_PARISC_SBP () {0x8000000;}' unless defined(&PF_PARISC_SBP);
    eval 'sub PF_HP_PAGE_SIZE () {0x100000;}' unless defined(&PF_HP_PAGE_SIZE);
    eval 'sub PF_HP_FAR_SHARED () {0x200000;}' unless defined(&PF_HP_FAR_SHARED);
    eval 'sub PF_HP_NEAR_SHARED () {0x400000;}' unless defined(&PF_HP_NEAR_SHARED);
    eval 'sub PF_HP_CODE () {0x1000000;}' unless defined(&PF_HP_CODE);
    eval 'sub PF_HP_MODIFY () {0x2000000;}' unless defined(&PF_HP_MODIFY);
    eval 'sub PF_HP_LAZYSWAP () {0x4000000;}' unless defined(&PF_HP_LAZYSWAP);
    eval 'sub PF_HP_SBP () {0x8000000;}' unless defined(&PF_HP_SBP);
    eval 'sub EF_ALPHA_32BIT () {1;}' unless defined(&EF_ALPHA_32BIT);
    eval 'sub EF_ALPHA_CANRELAX () {2;}' unless defined(&EF_ALPHA_CANRELAX);
    eval 'sub SHT_ALPHA_DEBUG () {0x70000001;}' unless defined(&SHT_ALPHA_DEBUG);
    eval 'sub SHT_ALPHA_REGINFO () {0x70000002;}' unless defined(&SHT_ALPHA_REGINFO);
    eval 'sub SHF_ALPHA_GPREL () {0x10000000;}' unless defined(&SHF_ALPHA_GPREL);
    eval 'sub STO_ALPHA_NOPV () {0x80;}' unless defined(&STO_ALPHA_NOPV);
    eval 'sub STO_ALPHA_STD_GPLOAD () {0x88;}' unless defined(&STO_ALPHA_STD_GPLOAD);
    eval 'sub R_ALPHA_NONE () {0;}' unless defined(&R_ALPHA_NONE);
    eval 'sub R_ALPHA_REFLONG () {1;}' unless defined(&R_ALPHA_REFLONG);
    eval 'sub R_ALPHA_REFQUAD () {2;}' unless defined(&R_ALPHA_REFQUAD);
    eval 'sub R_ALPHA_GPREL32 () {3;}' unless defined(&R_ALPHA_GPREL32);
    eval 'sub R_ALPHA_LITERAL () {4;}' unless defined(&R_ALPHA_LITERAL);
    eval 'sub R_ALPHA_LITUSE () {5;}' unless defined(&R_ALPHA_LITUSE);
    eval 'sub R_ALPHA_GPDISP () {6;}' unless defined(&R_ALPHA_GPDISP);
    eval 'sub R_ALPHA_BRADDR () {7;}' unless defined(&R_ALPHA_BRADDR);
    eval 'sub R_ALPHA_HINT () {8;}' unless defined(&R_ALPHA_HINT);
    eval 'sub R_ALPHA_SREL16 () {9;}' unless defined(&R_ALPHA_SREL16);
    eval 'sub R_ALPHA_SREL32 () {10;}' unless defined(&R_ALPHA_SREL32);
    eval 'sub R_ALPHA_SREL64 () {11;}' unless defined(&R_ALPHA_SREL64);
    eval 'sub R_ALPHA_GPRELHIGH () {17;}' unless defined(&R_ALPHA_GPRELHIGH);
    eval 'sub R_ALPHA_GPRELLOW () {18;}' unless defined(&R_ALPHA_GPRELLOW);
    eval 'sub R_ALPHA_GPREL16 () {19;}' unless defined(&R_ALPHA_GPREL16);
    eval 'sub R_ALPHA_COPY () {24;}' unless defined(&R_ALPHA_COPY);
    eval 'sub R_ALPHA_GLOB_DAT () {25;}' unless defined(&R_ALPHA_GLOB_DAT);
    eval 'sub R_ALPHA_JMP_SLOT () {26;}' unless defined(&R_ALPHA_JMP_SLOT);
    eval 'sub R_ALPHA_RELATIVE () {27;}' unless defined(&R_ALPHA_RELATIVE);
    eval 'sub R_ALPHA_TLS_GD_HI () {28;}' unless defined(&R_ALPHA_TLS_GD_HI);
    eval 'sub R_ALPHA_TLSGD () {29;}' unless defined(&R_ALPHA_TLSGD);
    eval 'sub R_ALPHA_TLS_LDM () {30;}' unless defined(&R_ALPHA_TLS_LDM);
    eval 'sub R_ALPHA_DTPMOD64 () {31;}' unless defined(&R_ALPHA_DTPMOD64);
    eval 'sub R_ALPHA_GOTDTPREL () {32;}' unless defined(&R_ALPHA_GOTDTPREL);
    eval 'sub R_ALPHA_DTPREL64 () {33;}' unless defined(&R_ALPHA_DTPREL64);
    eval 'sub R_ALPHA_DTPRELHI () {34;}' unless defined(&R_ALPHA_DTPRELHI);
    eval 'sub R_ALPHA_DTPRELLO () {35;}' unless defined(&R_ALPHA_DTPRELLO);
    eval 'sub R_ALPHA_DTPREL16 () {36;}' unless defined(&R_ALPHA_DTPREL16);
    eval 'sub R_ALPHA_GOTTPREL () {37;}' unless defined(&R_ALPHA_GOTTPREL);
    eval 'sub R_ALPHA_TPREL64 () {38;}' unless defined(&R_ALPHA_TPREL64);
    eval 'sub R_ALPHA_TPRELHI () {39;}' unless defined(&R_ALPHA_TPRELHI);
    eval 'sub R_ALPHA_TPRELLO () {40;}' unless defined(&R_ALPHA_TPRELLO);
    eval 'sub R_ALPHA_TPREL16 () {41;}' unless defined(&R_ALPHA_TPREL16);
    eval 'sub R_ALPHA_NUM () {46;}' unless defined(&R_ALPHA_NUM);
    eval 'sub LITUSE_ALPHA_ADDR () {0;}' unless defined(&LITUSE_ALPHA_ADDR);
    eval 'sub LITUSE_ALPHA_BASE () {1;}' unless defined(&LITUSE_ALPHA_BASE);
    eval 'sub LITUSE_ALPHA_BYTOFF () {2;}' unless defined(&LITUSE_ALPHA_BYTOFF);
    eval 'sub LITUSE_ALPHA_JSR () {3;}' unless defined(&LITUSE_ALPHA_JSR);
    eval 'sub LITUSE_ALPHA_TLS_GD () {4;}' unless defined(&LITUSE_ALPHA_TLS_GD);
    eval 'sub LITUSE_ALPHA_TLS_LDM () {5;}' unless defined(&LITUSE_ALPHA_TLS_LDM);
    eval 'sub DT_ALPHA_PLTRO () {( &DT_LOPROC + 0);}' unless defined(&DT_ALPHA_PLTRO);
    eval 'sub DT_ALPHA_NUM () {1;}' unless defined(&DT_ALPHA_NUM);
    eval 'sub EF_PPC_EMB () {0x80000000;}' unless defined(&EF_PPC_EMB);
    eval 'sub EF_PPC_RELOCATABLE () {0x10000;}' unless defined(&EF_PPC_RELOCATABLE);
    eval 'sub EF_PPC_RELOCATABLE_LIB () {0x8000;}' unless defined(&EF_PPC_RELOCATABLE_LIB);
    eval 'sub R_PPC_NONE () {0;}' unless defined(&R_PPC_NONE);
    eval 'sub R_PPC_ADDR32 () {1;}' unless defined(&R_PPC_ADDR32);
    eval 'sub R_PPC_ADDR24 () {2;}' unless defined(&R_PPC_ADDR24);
    eval 'sub R_PPC_ADDR16 () {3;}' unless defined(&R_PPC_ADDR16);
    eval 'sub R_PPC_ADDR16_LO () {4;}' unless defined(&R_PPC_ADDR16_LO);
    eval 'sub R_PPC_ADDR16_HI () {5;}' unless defined(&R_PPC_ADDR16_HI);
    eval 'sub R_PPC_ADDR16_HA () {6;}' unless defined(&R_PPC_ADDR16_HA);
    eval 'sub R_PPC_ADDR14 () {7;}' unless defined(&R_PPC_ADDR14);
    eval 'sub R_PPC_ADDR14_BRTAKEN () {8;}' unless defined(&R_PPC_ADDR14_BRTAKEN);
    eval 'sub R_PPC_ADDR14_BRNTAKEN () {9;}' unless defined(&R_PPC_ADDR14_BRNTAKEN);
    eval 'sub R_PPC_REL24 () {10;}' unless defined(&R_PPC_REL24);
    eval 'sub R_PPC_REL14 () {11;}' unless defined(&R_PPC_REL14);
    eval 'sub R_PPC_REL14_BRTAKEN () {12;}' unless defined(&R_PPC_REL14_BRTAKEN);
    eval 'sub R_PPC_REL14_BRNTAKEN () {13;}' unless defined(&R_PPC_REL14_BRNTAKEN);
    eval 'sub R_PPC_GOT16 () {14;}' unless defined(&R_PPC_GOT16);
    eval 'sub R_PPC_GOT16_LO () {15;}' unless defined(&R_PPC_GOT16_LO);
    eval 'sub R_PPC_GOT16_HI () {16;}' unless defined(&R_PPC_GOT16_HI);
    eval 'sub R_PPC_GOT16_HA () {17;}' unless defined(&R_PPC_GOT16_HA);
    eval 'sub R_PPC_PLTREL24 () {18;}' unless defined(&R_PPC_PLTREL24);
    eval 'sub R_PPC_COPY () {19;}' unless defined(&R_PPC_COPY);
    eval 'sub R_PPC_GLOB_DAT () {20;}' unless defined(&R_PPC_GLOB_DAT);
    eval 'sub R_PPC_JMP_SLOT () {21;}' unless defined(&R_PPC_JMP_SLOT);
    eval 'sub R_PPC_RELATIVE () {22;}' unless defined(&R_PPC_RELATIVE);
    eval 'sub R_PPC_LOCAL24PC () {23;}' unless defined(&R_PPC_LOCAL24PC);
    eval 'sub R_PPC_UADDR32 () {24;}' unless defined(&R_PPC_UADDR32);
    eval 'sub R_PPC_UADDR16 () {25;}' unless defined(&R_PPC_UADDR16);
    eval 'sub R_PPC_REL32 () {26;}' unless defined(&R_PPC_REL32);
    eval 'sub R_PPC_PLT32 () {27;}' unless defined(&R_PPC_PLT32);
    eval 'sub R_PPC_PLTREL32 () {28;}' unless defined(&R_PPC_PLTREL32);
    eval 'sub R_PPC_PLT16_LO () {29;}' unless defined(&R_PPC_PLT16_LO);
    eval 'sub R_PPC_PLT16_HI () {30;}' unless defined(&R_PPC_PLT16_HI);
    eval 'sub R_PPC_PLT16_HA () {31;}' unless defined(&R_PPC_PLT16_HA);
    eval 'sub R_PPC_SDAREL16 () {32;}' unless defined(&R_PPC_SDAREL16);
    eval 'sub R_PPC_SECTOFF () {33;}' unless defined(&R_PPC_SECTOFF);
    eval 'sub R_PPC_SECTOFF_LO () {34;}' unless defined(&R_PPC_SECTOFF_LO);
    eval 'sub R_PPC_SECTOFF_HI () {35;}' unless defined(&R_PPC_SECTOFF_HI);
    eval 'sub R_PPC_SECTOFF_HA () {36;}' unless defined(&R_PPC_SECTOFF_HA);
    eval 'sub R_PPC_TLS () {67;}' unless defined(&R_PPC_TLS);
    eval 'sub R_PPC_DTPMOD32 () {68;}' unless defined(&R_PPC_DTPMOD32);
    eval 'sub R_PPC_TPREL16 () {69;}' unless defined(&R_PPC_TPREL16);
    eval 'sub R_PPC_TPREL16_LO () {70;}' unless defined(&R_PPC_TPREL16_LO);
    eval 'sub R_PPC_TPREL16_HI () {71;}' unless defined(&R_PPC_TPREL16_HI);
    eval 'sub R_PPC_TPREL16_HA () {72;}' unless defined(&R_PPC_TPREL16_HA);
    eval 'sub R_PPC_TPREL32 () {73;}' unless defined(&R_PPC_TPREL32);
    eval 'sub R_PPC_DTPREL16 () {74;}' unless defined(&R_PPC_DTPREL16);
    eval 'sub R_PPC_DTPREL16_LO () {75;}' unless defined(&R_PPC_DTPREL16_LO);
    eval 'sub R_PPC_DTPREL16_HI () {76;}' unless defined(&R_PPC_DTPREL16_HI);
    eval 'sub R_PPC_DTPREL16_HA () {77;}' unless defined(&R_PPC_DTPREL16_HA);
    eval 'sub R_PPC_DTPREL32 () {78;}' unless defined(&R_PPC_DTPREL32);
    eval 'sub R_PPC_GOT_TLSGD16 () {79;}' unless defined(&R_PPC_GOT_TLSGD16);
    eval 'sub R_PPC_GOT_TLSGD16_LO () {80;}' unless defined(&R_PPC_GOT_TLSGD16_LO);
    eval 'sub R_PPC_GOT_TLSGD16_HI () {81;}' unless defined(&R_PPC_GOT_TLSGD16_HI);
    eval 'sub R_PPC_GOT_TLSGD16_HA () {82;}' unless defined(&R_PPC_GOT_TLSGD16_HA);
    eval 'sub R_PPC_GOT_TLSLD16 () {83;}' unless defined(&R_PPC_GOT_TLSLD16);
    eval 'sub R_PPC_GOT_TLSLD16_LO () {84;}' unless defined(&R_PPC_GOT_TLSLD16_LO);
    eval 'sub R_PPC_GOT_TLSLD16_HI () {85;}' unless defined(&R_PPC_GOT_TLSLD16_HI);
    eval 'sub R_PPC_GOT_TLSLD16_HA () {86;}' unless defined(&R_PPC_GOT_TLSLD16_HA);
    eval 'sub R_PPC_GOT_TPREL16 () {87;}' unless defined(&R_PPC_GOT_TPREL16);
    eval 'sub R_PPC_GOT_TPREL16_LO () {88;}' unless defined(&R_PPC_GOT_TPREL16_LO);
    eval 'sub R_PPC_GOT_TPREL16_HI () {89;}' unless defined(&R_PPC_GOT_TPREL16_HI);
    eval 'sub R_PPC_GOT_TPREL16_HA () {90;}' unless defined(&R_PPC_GOT_TPREL16_HA);
    eval 'sub R_PPC_GOT_DTPREL16 () {91;}' unless defined(&R_PPC_GOT_DTPREL16);
    eval 'sub R_PPC_GOT_DTPREL16_LO () {92;}' unless defined(&R_PPC_GOT_DTPREL16_LO);
    eval 'sub R_PPC_GOT_DTPREL16_HI () {93;}' unless defined(&R_PPC_GOT_DTPREL16_HI);
    eval 'sub R_PPC_GOT_DTPREL16_HA () {94;}' unless defined(&R_PPC_GOT_DTPREL16_HA);
    eval 'sub R_PPC_TLSGD () {95;}' unless defined(&R_PPC_TLSGD);
    eval 'sub R_PPC_TLSLD () {96;}' unless defined(&R_PPC_TLSLD);
    eval 'sub R_PPC_EMB_NADDR32 () {101;}' unless defined(&R_PPC_EMB_NADDR32);
    eval 'sub R_PPC_EMB_NADDR16 () {102;}' unless defined(&R_PPC_EMB_NADDR16);
    eval 'sub R_PPC_EMB_NADDR16_LO () {103;}' unless defined(&R_PPC_EMB_NADDR16_LO);
    eval 'sub R_PPC_EMB_NADDR16_HI () {104;}' unless defined(&R_PPC_EMB_NADDR16_HI);
    eval 'sub R_PPC_EMB_NADDR16_HA () {105;}' unless defined(&R_PPC_EMB_NADDR16_HA);
    eval 'sub R_PPC_EMB_SDAI16 () {106;}' unless defined(&R_PPC_EMB_SDAI16);
    eval 'sub R_PPC_EMB_SDA2I16 () {107;}' unless defined(&R_PPC_EMB_SDA2I16);
    eval 'sub R_PPC_EMB_SDA2REL () {108;}' unless defined(&R_PPC_EMB_SDA2REL);
    eval 'sub R_PPC_EMB_SDA21 () {109;}' unless defined(&R_PPC_EMB_SDA21);
    eval 'sub R_PPC_EMB_MRKREF () {110;}' unless defined(&R_PPC_EMB_MRKREF);
    eval 'sub R_PPC_EMB_RELSEC16 () {111;}' unless defined(&R_PPC_EMB_RELSEC16);
    eval 'sub R_PPC_EMB_RELST_LO () {112;}' unless defined(&R_PPC_EMB_RELST_LO);
    eval 'sub R_PPC_EMB_RELST_HI () {113;}' unless defined(&R_PPC_EMB_RELST_HI);
    eval 'sub R_PPC_EMB_RELST_HA () {114;}' unless defined(&R_PPC_EMB_RELST_HA);
    eval 'sub R_PPC_EMB_BIT_FLD () {115;}' unless defined(&R_PPC_EMB_BIT_FLD);
    eval 'sub R_PPC_EMB_RELSDA () {116;}' unless defined(&R_PPC_EMB_RELSDA);
    eval 'sub R_PPC_DIAB_SDA21_LO () {180;}' unless defined(&R_PPC_DIAB_SDA21_LO);
    eval 'sub R_PPC_DIAB_SDA21_HI () {181;}' unless defined(&R_PPC_DIAB_SDA21_HI);
    eval 'sub R_PPC_DIAB_SDA21_HA () {182;}' unless defined(&R_PPC_DIAB_SDA21_HA);
    eval 'sub R_PPC_DIAB_RELSDA_LO () {183;}' unless defined(&R_PPC_DIAB_RELSDA_LO);
    eval 'sub R_PPC_DIAB_RELSDA_HI () {184;}' unless defined(&R_PPC_DIAB_RELSDA_HI);
    eval 'sub R_PPC_DIAB_RELSDA_HA () {185;}' unless defined(&R_PPC_DIAB_RELSDA_HA);
    eval 'sub R_PPC_IRELATIVE () {248;}' unless defined(&R_PPC_IRELATIVE);
    eval 'sub R_PPC_REL16 () {249;}' unless defined(&R_PPC_REL16);
    eval 'sub R_PPC_REL16_LO () {250;}' unless defined(&R_PPC_REL16_LO);
    eval 'sub R_PPC_REL16_HI () {251;}' unless defined(&R_PPC_REL16_HI);
    eval 'sub R_PPC_REL16_HA () {252;}' unless defined(&R_PPC_REL16_HA);
    eval 'sub R_PPC_TOC16 () {255;}' unless defined(&R_PPC_TOC16);
    eval 'sub DT_PPC_GOT () {( &DT_LOPROC + 0);}' unless defined(&DT_PPC_GOT);
    eval 'sub DT_PPC_OPT () {( &DT_LOPROC + 1);}' unless defined(&DT_PPC_OPT);
    eval 'sub DT_PPC_NUM () {2;}' unless defined(&DT_PPC_NUM);
    eval 'sub PPC_OPT_TLS () {1;}' unless defined(&PPC_OPT_TLS);
    eval 'sub R_PPC64_NONE () { &R_PPC_NONE;}' unless defined(&R_PPC64_NONE);
    eval 'sub R_PPC64_ADDR32 () { &R_PPC_ADDR32;}' unless defined(&R_PPC64_ADDR32);
    eval 'sub R_PPC64_ADDR24 () { &R_PPC_ADDR24;}' unless defined(&R_PPC64_ADDR24);
    eval 'sub R_PPC64_ADDR16 () { &R_PPC_ADDR16;}' unless defined(&R_PPC64_ADDR16);
    eval 'sub R_PPC64_ADDR16_LO () { &R_PPC_ADDR16_LO;}' unless defined(&R_PPC64_ADDR16_LO);
    eval 'sub R_PPC64_ADDR16_HI () { &R_PPC_ADDR16_HI;}' unless defined(&R_PPC64_ADDR16_HI);
    eval 'sub R_PPC64_ADDR16_HA () { &R_PPC_ADDR16_HA;}' unless defined(&R_PPC64_ADDR16_HA);
    eval 'sub R_PPC64_ADDR14 () { &R_PPC_ADDR14;}' unless defined(&R_PPC64_ADDR14);
    eval 'sub R_PPC64_ADDR14_BRTAKEN () { &R_PPC_ADDR14_BRTAKEN;}' unless defined(&R_PPC64_ADDR14_BRTAKEN);
    eval 'sub R_PPC64_ADDR14_BRNTAKEN () { &R_PPC_ADDR14_BRNTAKEN;}' unless defined(&R_PPC64_ADDR14_BRNTAKEN);
    eval 'sub R_PPC64_REL24 () { &R_PPC_REL24;}' unless defined(&R_PPC64_REL24);
    eval 'sub R_PPC64_REL14 () { &R_PPC_REL14;}' unless defined(&R_PPC64_REL14);
    eval 'sub R_PPC64_REL14_BRTAKEN () { &R_PPC_REL14_BRTAKEN;}' unless defined(&R_PPC64_REL14_BRTAKEN);
    eval 'sub R_PPC64_REL14_BRNTAKEN () { &R_PPC_REL14_BRNTAKEN;}' unless defined(&R_PPC64_REL14_BRNTAKEN);
    eval 'sub R_PPC64_GOT16 () { &R_PPC_GOT16;}' unless defined(&R_PPC64_GOT16);
    eval 'sub R_PPC64_GOT16_LO () { &R_PPC_GOT16_LO;}' unless defined(&R_PPC64_GOT16_LO);
    eval 'sub R_PPC64_GOT16_HI () { &R_PPC_GOT16_HI;}' unless defined(&R_PPC64_GOT16_HI);
    eval 'sub R_PPC64_GOT16_HA () { &R_PPC_GOT16_HA;}' unless defined(&R_PPC64_GOT16_HA);
    eval 'sub R_PPC64_COPY () { &R_PPC_COPY;}' unless defined(&R_PPC64_COPY);
    eval 'sub R_PPC64_GLOB_DAT () { &R_PPC_GLOB_DAT;}' unless defined(&R_PPC64_GLOB_DAT);
    eval 'sub R_PPC64_JMP_SLOT () { &R_PPC_JMP_SLOT;}' unless defined(&R_PPC64_JMP_SLOT);
    eval 'sub R_PPC64_RELATIVE () { &R_PPC_RELATIVE;}' unless defined(&R_PPC64_RELATIVE);
    eval 'sub R_PPC64_UADDR32 () { &R_PPC_UADDR32;}' unless defined(&R_PPC64_UADDR32);
    eval 'sub R_PPC64_UADDR16 () { &R_PPC_UADDR16;}' unless defined(&R_PPC64_UADDR16);
    eval 'sub R_PPC64_REL32 () { &R_PPC_REL32;}' unless defined(&R_PPC64_REL32);
    eval 'sub R_PPC64_PLT32 () { &R_PPC_PLT32;}' unless defined(&R_PPC64_PLT32);
    eval 'sub R_PPC64_PLTREL32 () { &R_PPC_PLTREL32;}' unless defined(&R_PPC64_PLTREL32);
    eval 'sub R_PPC64_PLT16_LO () { &R_PPC_PLT16_LO;}' unless defined(&R_PPC64_PLT16_LO);
    eval 'sub R_PPC64_PLT16_HI () { &R_PPC_PLT16_HI;}' unless defined(&R_PPC64_PLT16_HI);
    eval 'sub R_PPC64_PLT16_HA () { &R_PPC_PLT16_HA;}' unless defined(&R_PPC64_PLT16_HA);
    eval 'sub R_PPC64_SECTOFF () { &R_PPC_SECTOFF;}' unless defined(&R_PPC64_SECTOFF);
    eval 'sub R_PPC64_SECTOFF_LO () { &R_PPC_SECTOFF_LO;}' unless defined(&R_PPC64_SECTOFF_LO);
    eval 'sub R_PPC64_SECTOFF_HI () { &R_PPC_SECTOFF_HI;}' unless defined(&R_PPC64_SECTOFF_HI);
    eval 'sub R_PPC64_SECTOFF_HA () { &R_PPC_SECTOFF_HA;}' unless defined(&R_PPC64_SECTOFF_HA);
    eval 'sub R_PPC64_ADDR30 () {37;}' unless defined(&R_PPC64_ADDR30);
    eval 'sub R_PPC64_ADDR64 () {38;}' unless defined(&R_PPC64_ADDR64);
    eval 'sub R_PPC64_ADDR16_HIGHER () {39;}' unless defined(&R_PPC64_ADDR16_HIGHER);
    eval 'sub R_PPC64_ADDR16_HIGHERA () {40;}' unless defined(&R_PPC64_ADDR16_HIGHERA);
    eval 'sub R_PPC64_ADDR16_HIGHEST () {41;}' unless defined(&R_PPC64_ADDR16_HIGHEST);
    eval 'sub R_PPC64_ADDR16_HIGHESTA () {42;}' unless defined(&R_PPC64_ADDR16_HIGHESTA);
    eval 'sub R_PPC64_UADDR64 () {43;}' unless defined(&R_PPC64_UADDR64);
    eval 'sub R_PPC64_REL64 () {44;}' unless defined(&R_PPC64_REL64);
    eval 'sub R_PPC64_PLT64 () {45;}' unless defined(&R_PPC64_PLT64);
    eval 'sub R_PPC64_PLTREL64 () {46;}' unless defined(&R_PPC64_PLTREL64);
    eval 'sub R_PPC64_TOC16 () {47;}' unless defined(&R_PPC64_TOC16);
    eval 'sub R_PPC64_TOC16_LO () {48;}' unless defined(&R_PPC64_TOC16_LO);
    eval 'sub R_PPC64_TOC16_HI () {49;}' unless defined(&R_PPC64_TOC16_HI);
    eval 'sub R_PPC64_TOC16_HA () {50;}' unless defined(&R_PPC64_TOC16_HA);
    eval 'sub R_PPC64_TOC () {51;}' unless defined(&R_PPC64_TOC);
    eval 'sub R_PPC64_PLTGOT16 () {52;}' unless defined(&R_PPC64_PLTGOT16);
    eval 'sub R_PPC64_PLTGOT16_LO () {53;}' unless defined(&R_PPC64_PLTGOT16_LO);
    eval 'sub R_PPC64_PLTGOT16_HI () {54;}' unless defined(&R_PPC64_PLTGOT16_HI);
    eval 'sub R_PPC64_PLTGOT16_HA () {55;}' unless defined(&R_PPC64_PLTGOT16_HA);
    eval 'sub R_PPC64_ADDR16_DS () {56;}' unless defined(&R_PPC64_ADDR16_DS);
    eval 'sub R_PPC64_ADDR16_LO_DS () {57;}' unless defined(&R_PPC64_ADDR16_LO_DS);
    eval 'sub R_PPC64_GOT16_DS () {58;}' unless defined(&R_PPC64_GOT16_DS);
    eval 'sub R_PPC64_GOT16_LO_DS () {59;}' unless defined(&R_PPC64_GOT16_LO_DS);
    eval 'sub R_PPC64_PLT16_LO_DS () {60;}' unless defined(&R_PPC64_PLT16_LO_DS);
    eval 'sub R_PPC64_SECTOFF_DS () {61;}' unless defined(&R_PPC64_SECTOFF_DS);
    eval 'sub R_PPC64_SECTOFF_LO_DS () {62;}' unless defined(&R_PPC64_SECTOFF_LO_DS);
    eval 'sub R_PPC64_TOC16_DS () {63;}' unless defined(&R_PPC64_TOC16_DS);
    eval 'sub R_PPC64_TOC16_LO_DS () {64;}' unless defined(&R_PPC64_TOC16_LO_DS);
    eval 'sub R_PPC64_PLTGOT16_DS () {65;}' unless defined(&R_PPC64_PLTGOT16_DS);
    eval 'sub R_PPC64_PLTGOT16_LO_DS () {66;}' unless defined(&R_PPC64_PLTGOT16_LO_DS);
    eval 'sub R_PPC64_TLS () {67;}' unless defined(&R_PPC64_TLS);
    eval 'sub R_PPC64_DTPMOD64 () {68;}' unless defined(&R_PPC64_DTPMOD64);
    eval 'sub R_PPC64_TPREL16 () {69;}' unless defined(&R_PPC64_TPREL16);
    eval 'sub R_PPC64_TPREL16_LO () {70;}' unless defined(&R_PPC64_TPREL16_LO);
    eval 'sub R_PPC64_TPREL16_HI () {71;}' unless defined(&R_PPC64_TPREL16_HI);
    eval 'sub R_PPC64_TPREL16_HA () {72;}' unless defined(&R_PPC64_TPREL16_HA);
    eval 'sub R_PPC64_TPREL64 () {73;}' unless defined(&R_PPC64_TPREL64);
    eval 'sub R_PPC64_DTPREL16 () {74;}' unless defined(&R_PPC64_DTPREL16);
    eval 'sub R_PPC64_DTPREL16_LO () {75;}' unless defined(&R_PPC64_DTPREL16_LO);
    eval 'sub R_PPC64_DTPREL16_HI () {76;}' unless defined(&R_PPC64_DTPREL16_HI);
    eval 'sub R_PPC64_DTPREL16_HA () {77;}' unless defined(&R_PPC64_DTPREL16_HA);
    eval 'sub R_PPC64_DTPREL64 () {78;}' unless defined(&R_PPC64_DTPREL64);
    eval 'sub R_PPC64_GOT_TLSGD16 () {79;}' unless defined(&R_PPC64_GOT_TLSGD16);
    eval 'sub R_PPC64_GOT_TLSGD16_LO () {80;}' unless defined(&R_PPC64_GOT_TLSGD16_LO);
    eval 'sub R_PPC64_GOT_TLSGD16_HI () {81;}' unless defined(&R_PPC64_GOT_TLSGD16_HI);
    eval 'sub R_PPC64_GOT_TLSGD16_HA () {82;}' unless defined(&R_PPC64_GOT_TLSGD16_HA);
    eval 'sub R_PPC64_GOT_TLSLD16 () {83;}' unless defined(&R_PPC64_GOT_TLSLD16);
    eval 'sub R_PPC64_GOT_TLSLD16_LO () {84;}' unless defined(&R_PPC64_GOT_TLSLD16_LO);
    eval 'sub R_PPC64_GOT_TLSLD16_HI () {85;}' unless defined(&R_PPC64_GOT_TLSLD16_HI);
    eval 'sub R_PPC64_GOT_TLSLD16_HA () {86;}' unless defined(&R_PPC64_GOT_TLSLD16_HA);
    eval 'sub R_PPC64_GOT_TPREL16_DS () {87;}' unless defined(&R_PPC64_GOT_TPREL16_DS);
    eval 'sub R_PPC64_GOT_TPREL16_LO_DS () {88;}' unless defined(&R_PPC64_GOT_TPREL16_LO_DS);
    eval 'sub R_PPC64_GOT_TPREL16_HI () {89;}' unless defined(&R_PPC64_GOT_TPREL16_HI);
    eval 'sub R_PPC64_GOT_TPREL16_HA () {90;}' unless defined(&R_PPC64_GOT_TPREL16_HA);
    eval 'sub R_PPC64_GOT_DTPREL16_DS () {91;}' unless defined(&R_PPC64_GOT_DTPREL16_DS);
    eval 'sub R_PPC64_GOT_DTPREL16_LO_DS () {92;}' unless defined(&R_PPC64_GOT_DTPREL16_LO_DS);
    eval 'sub R_PPC64_GOT_DTPREL16_HI () {93;}' unless defined(&R_PPC64_GOT_DTPREL16_HI);
    eval 'sub R_PPC64_GOT_DTPREL16_HA () {94;}' unless defined(&R_PPC64_GOT_DTPREL16_HA);
    eval 'sub R_PPC64_TPREL16_DS () {95;}' unless defined(&R_PPC64_TPREL16_DS);
    eval 'sub R_PPC64_TPREL16_LO_DS () {96;}' unless defined(&R_PPC64_TPREL16_LO_DS);
    eval 'sub R_PPC64_TPREL16_HIGHER () {97;}' unless defined(&R_PPC64_TPREL16_HIGHER);
    eval 'sub R_PPC64_TPREL16_HIGHERA () {98;}' unless defined(&R_PPC64_TPREL16_HIGHERA);
    eval 'sub R_PPC64_TPREL16_HIGHEST () {99;}' unless defined(&R_PPC64_TPREL16_HIGHEST);
    eval 'sub R_PPC64_TPREL16_HIGHESTA () {100;}' unless defined(&R_PPC64_TPREL16_HIGHESTA);
    eval 'sub R_PPC64_DTPREL16_DS () {101;}' unless defined(&R_PPC64_DTPREL16_DS);
    eval 'sub R_PPC64_DTPREL16_LO_DS () {102;}' unless defined(&R_PPC64_DTPREL16_LO_DS);
    eval 'sub R_PPC64_DTPREL16_HIGHER () {103;}' unless defined(&R_PPC64_DTPREL16_HIGHER);
    eval 'sub R_PPC64_DTPREL16_HIGHERA () {104;}' unless defined(&R_PPC64_DTPREL16_HIGHERA);
    eval 'sub R_PPC64_DTPREL16_HIGHEST () {105;}' unless defined(&R_PPC64_DTPREL16_HIGHEST);
    eval 'sub R_PPC64_DTPREL16_HIGHESTA () {106;}' unless defined(&R_PPC64_DTPREL16_HIGHESTA);
    eval 'sub R_PPC64_TLSGD () {107;}' unless defined(&R_PPC64_TLSGD);
    eval 'sub R_PPC64_TLSLD () {108;}' unless defined(&R_PPC64_TLSLD);
    eval 'sub R_PPC64_TOCSAVE () {109;}' unless defined(&R_PPC64_TOCSAVE);
    eval 'sub R_PPC64_ADDR16_HIGH () {110;}' unless defined(&R_PPC64_ADDR16_HIGH);
    eval 'sub R_PPC64_ADDR16_HIGHA () {111;}' unless defined(&R_PPC64_ADDR16_HIGHA);
    eval 'sub R_PPC64_TPREL16_HIGH () {112;}' unless defined(&R_PPC64_TPREL16_HIGH);
    eval 'sub R_PPC64_TPREL16_HIGHA () {113;}' unless defined(&R_PPC64_TPREL16_HIGHA);
    eval 'sub R_PPC64_DTPREL16_HIGH () {114;}' unless defined(&R_PPC64_DTPREL16_HIGH);
    eval 'sub R_PPC64_DTPREL16_HIGHA () {115;}' unless defined(&R_PPC64_DTPREL16_HIGHA);
    eval 'sub R_PPC64_JMP_IREL () {247;}' unless defined(&R_PPC64_JMP_IREL);
    eval 'sub R_PPC64_IRELATIVE () {248;}' unless defined(&R_PPC64_IRELATIVE);
    eval 'sub R_PPC64_REL16 () {249;}' unless defined(&R_PPC64_REL16);
    eval 'sub R_PPC64_REL16_LO () {250;}' unless defined(&R_PPC64_REL16_LO);
    eval 'sub R_PPC64_REL16_HI () {251;}' unless defined(&R_PPC64_REL16_HI);
    eval 'sub R_PPC64_REL16_HA () {252;}' unless defined(&R_PPC64_REL16_HA);
    eval 'sub EF_PPC64_ABI () {3;}' unless defined(&EF_PPC64_ABI);
    eval 'sub DT_PPC64_GLINK () {( &DT_LOPROC + 0);}' unless defined(&DT_PPC64_GLINK);
    eval 'sub DT_PPC64_OPD () {( &DT_LOPROC + 1);}' unless defined(&DT_PPC64_OPD);
    eval 'sub DT_PPC64_OPDSZ () {( &DT_LOPROC + 2);}' unless defined(&DT_PPC64_OPDSZ);
    eval 'sub DT_PPC64_OPT () {( &DT_LOPROC + 3);}' unless defined(&DT_PPC64_OPT);
    eval 'sub DT_PPC64_NUM () {4;}' unless defined(&DT_PPC64_NUM);
    eval 'sub PPC64_OPT_TLS () {1;}' unless defined(&PPC64_OPT_TLS);
    eval 'sub PPC64_OPT_MULTI_TOC () {2;}' unless defined(&PPC64_OPT_MULTI_TOC);
    eval 'sub PPC64_OPT_LOCALENTRY () {4;}' unless defined(&PPC64_OPT_LOCALENTRY);
    eval 'sub STO_PPC64_LOCAL_BIT () {5;}' unless defined(&STO_PPC64_LOCAL_BIT);
    eval 'sub STO_PPC64_LOCAL_MASK () {(7<<  &STO_PPC64_LOCAL_BIT);}' unless defined(&STO_PPC64_LOCAL_MASK);
    eval 'sub PPC64_LOCAL_ENTRY_OFFSET {
        my($other) = @_;
	    eval q((((1<< ((($other) &  &STO_PPC64_LOCAL_MASK) >>  &STO_PPC64_LOCAL_BIT)) >> 2) << 2));
    }' unless defined(&PPC64_LOCAL_ENTRY_OFFSET);
    eval 'sub EF_ARM_RELEXEC () {0x1;}' unless defined(&EF_ARM_RELEXEC);
    eval 'sub EF_ARM_HASENTRY () {0x2;}' unless defined(&EF_ARM_HASENTRY);
    eval 'sub EF_ARM_INTERWORK () {0x4;}' unless defined(&EF_ARM_INTERWORK);
    eval 'sub EF_ARM_APCS_26 () {0x8;}' unless defined(&EF_ARM_APCS_26);
    eval 'sub EF_ARM_APCS_FLOAT () {0x10;}' unless defined(&EF_ARM_APCS_FLOAT);
    eval 'sub EF_ARM_PIC () {0x20;}' unless defined(&EF_ARM_PIC);
    eval 'sub EF_ARM_ALIGN8 () {0x40;}' unless defined(&EF_ARM_ALIGN8);
    eval 'sub EF_ARM_NEW_ABI () {0x80;}' unless defined(&EF_ARM_NEW_ABI);
    eval 'sub EF_ARM_OLD_ABI () {0x100;}' unless defined(&EF_ARM_OLD_ABI);
    eval 'sub EF_ARM_SOFT_FLOAT () {0x200;}' unless defined(&EF_ARM_SOFT_FLOAT);
    eval 'sub EF_ARM_VFP_FLOAT () {0x400;}' unless defined(&EF_ARM_VFP_FLOAT);
    eval 'sub EF_ARM_MAVERICK_FLOAT () {0x800;}' unless defined(&EF_ARM_MAVERICK_FLOAT);
    eval 'sub EF_ARM_ABI_FLOAT_SOFT () {0x200;}' unless defined(&EF_ARM_ABI_FLOAT_SOFT);
    eval 'sub EF_ARM_ABI_FLOAT_HARD () {0x400;}' unless defined(&EF_ARM_ABI_FLOAT_HARD);
    eval 'sub EF_ARM_SYMSARESORTED () {0x4;}' unless defined(&EF_ARM_SYMSARESORTED);
    eval 'sub EF_ARM_DYNSYMSUSESEGIDX () {0x8;}' unless defined(&EF_ARM_DYNSYMSUSESEGIDX);
    eval 'sub EF_ARM_MAPSYMSFIRST () {0x10;}' unless defined(&EF_ARM_MAPSYMSFIRST);
    eval 'sub EF_ARM_EABIMASK () {0xff000000;}' unless defined(&EF_ARM_EABIMASK);
    eval 'sub EF_ARM_BE8 () {0x800000;}' unless defined(&EF_ARM_BE8);
    eval 'sub EF_ARM_LE8 () {0x400000;}' unless defined(&EF_ARM_LE8);
    eval 'sub EF_ARM_EABI_VERSION {
        my($flags) = @_;
	    eval q((($flags) &  &EF_ARM_EABIMASK));
    }' unless defined(&EF_ARM_EABI_VERSION);
    eval 'sub EF_ARM_EABI_UNKNOWN () {0x;}' unless defined(&EF_ARM_EABI_UNKNOWN);
    eval 'sub EF_ARM_EABI_VER1 () {0x1000000;}' unless defined(&EF_ARM_EABI_VER1);
    eval 'sub EF_ARM_EABI_VER2 () {0x2000000;}' unless defined(&EF_ARM_EABI_VER2);
    eval 'sub EF_ARM_EABI_VER3 () {0x3000000;}' unless defined(&EF_ARM_EABI_VER3);
    eval 'sub EF_ARM_EABI_VER4 () {0x4000000;}' unless defined(&EF_ARM_EABI_VER4);
    eval 'sub EF_ARM_EABI_VER5 () {0x5000000;}' unless defined(&EF_ARM_EABI_VER5);
    eval 'sub STT_ARM_TFUNC () { &STT_LOPROC;}' unless defined(&STT_ARM_TFUNC);
    eval 'sub STT_ARM_16BIT () { &STT_HIPROC;}' unless defined(&STT_ARM_16BIT);
    eval 'sub SHF_ARM_ENTRYSECT () {0x10000000;}' unless defined(&SHF_ARM_ENTRYSECT);
    eval 'sub SHF_ARM_COMDEF () {0x80000000;}' unless defined(&SHF_ARM_COMDEF);
    eval 'sub PF_ARM_SB () {0x10000000;}' unless defined(&PF_ARM_SB);
    eval 'sub PF_ARM_PI () {0x20000000;}' unless defined(&PF_ARM_PI);
    eval 'sub PF_ARM_ABS () {0x40000000;}' unless defined(&PF_ARM_ABS);
    eval 'sub PT_ARM_EXIDX () {( &PT_LOPROC + 1);}' unless defined(&PT_ARM_EXIDX);
    eval 'sub SHT_ARM_EXIDX () {( &SHT_LOPROC + 1);}' unless defined(&SHT_ARM_EXIDX);
    eval 'sub SHT_ARM_PREEMPTMAP () {( &SHT_LOPROC + 2);}' unless defined(&SHT_ARM_PREEMPTMAP);
    eval 'sub SHT_ARM_ATTRIBUTES () {( &SHT_LOPROC + 3);}' unless defined(&SHT_ARM_ATTRIBUTES);
    eval 'sub R_AARCH64_NONE () {0;}' unless defined(&R_AARCH64_NONE);
    eval 'sub R_AARCH64_P32_ABS32 () {1;}' unless defined(&R_AARCH64_P32_ABS32);
    eval 'sub R_AARCH64_P32_COPY () {180;}' unless defined(&R_AARCH64_P32_COPY);
    eval 'sub R_AARCH64_P32_GLOB_DAT () {181;}' unless defined(&R_AARCH64_P32_GLOB_DAT);
    eval 'sub R_AARCH64_P32_JUMP_SLOT () {182;}' unless defined(&R_AARCH64_P32_JUMP_SLOT);
    eval 'sub R_AARCH64_P32_RELATIVE () {183;}' unless defined(&R_AARCH64_P32_RELATIVE);
    eval 'sub R_AARCH64_P32_TLS_DTPMOD () {184;}' unless defined(&R_AARCH64_P32_TLS_DTPMOD);
    eval 'sub R_AARCH64_P32_TLS_DTPREL () {185;}' unless defined(&R_AARCH64_P32_TLS_DTPREL);
    eval 'sub R_AARCH64_P32_TLS_TPREL () {186;}' unless defined(&R_AARCH64_P32_TLS_TPREL);
    eval 'sub R_AARCH64_P32_TLSDESC () {187;}' unless defined(&R_AARCH64_P32_TLSDESC);
    eval 'sub R_AARCH64_P32_IRELATIVE () {188;}' unless defined(&R_AARCH64_P32_IRELATIVE);
    eval 'sub R_AARCH64_ABS64 () {257;}' unless defined(&R_AARCH64_ABS64);
    eval 'sub R_AARCH64_ABS32 () {258;}' unless defined(&R_AARCH64_ABS32);
    eval 'sub R_AARCH64_ABS16 () {259;}' unless defined(&R_AARCH64_ABS16);
    eval 'sub R_AARCH64_PREL64 () {260;}' unless defined(&R_AARCH64_PREL64);
    eval 'sub R_AARCH64_PREL32 () {261;}' unless defined(&R_AARCH64_PREL32);
    eval 'sub R_AARCH64_PREL16 () {262;}' unless defined(&R_AARCH64_PREL16);
    eval 'sub R_AARCH64_MOVW_UABS_G0 () {263;}' unless defined(&R_AARCH64_MOVW_UABS_G0);
    eval 'sub R_AARCH64_MOVW_UABS_G0_NC () {264;}' unless defined(&R_AARCH64_MOVW_UABS_G0_NC);
    eval 'sub R_AARCH64_MOVW_UABS_G1 () {265;}' unless defined(&R_AARCH64_MOVW_UABS_G1);
    eval 'sub R_AARCH64_MOVW_UABS_G1_NC () {266;}' unless defined(&R_AARCH64_MOVW_UABS_G1_NC);
    eval 'sub R_AARCH64_MOVW_UABS_G2 () {267;}' unless defined(&R_AARCH64_MOVW_UABS_G2);
    eval 'sub R_AARCH64_MOVW_UABS_G2_NC () {268;}' unless defined(&R_AARCH64_MOVW_UABS_G2_NC);
    eval 'sub R_AARCH64_MOVW_UABS_G3 () {269;}' unless defined(&R_AARCH64_MOVW_UABS_G3);
    eval 'sub R_AARCH64_MOVW_SABS_G0 () {270;}' unless defined(&R_AARCH64_MOVW_SABS_G0);
    eval 'sub R_AARCH64_MOVW_SABS_G1 () {271;}' unless defined(&R_AARCH64_MOVW_SABS_G1);
    eval 'sub R_AARCH64_MOVW_SABS_G2 () {272;}' unless defined(&R_AARCH64_MOVW_SABS_G2);
    eval 'sub R_AARCH64_LD_PREL_LO19 () {273;}' unless defined(&R_AARCH64_LD_PREL_LO19);
    eval 'sub R_AARCH64_ADR_PREL_LO21 () {274;}' unless defined(&R_AARCH64_ADR_PREL_LO21);
    eval 'sub R_AARCH64_ADR_PREL_PG_HI21 () {275;}' unless defined(&R_AARCH64_ADR_PREL_PG_HI21);
    eval 'sub R_AARCH64_ADR_PREL_PG_HI21_NC () {276;}' unless defined(&R_AARCH64_ADR_PREL_PG_HI21_NC);
    eval 'sub R_AARCH64_ADD_ABS_LO12_NC () {277;}' unless defined(&R_AARCH64_ADD_ABS_LO12_NC);
    eval 'sub R_AARCH64_LDST8_ABS_LO12_NC () {278;}' unless defined(&R_AARCH64_LDST8_ABS_LO12_NC);
    eval 'sub R_AARCH64_TSTBR14 () {279;}' unless defined(&R_AARCH64_TSTBR14);
    eval 'sub R_AARCH64_CONDBR19 () {280;}' unless defined(&R_AARCH64_CONDBR19);
    eval 'sub R_AARCH64_JUMP26 () {282;}' unless defined(&R_AARCH64_JUMP26);
    eval 'sub R_AARCH64_CALL26 () {283;}' unless defined(&R_AARCH64_CALL26);
    eval 'sub R_AARCH64_LDST16_ABS_LO12_NC () {284;}' unless defined(&R_AARCH64_LDST16_ABS_LO12_NC);
    eval 'sub R_AARCH64_LDST32_ABS_LO12_NC () {285;}' unless defined(&R_AARCH64_LDST32_ABS_LO12_NC);
    eval 'sub R_AARCH64_LDST64_ABS_LO12_NC () {286;}' unless defined(&R_AARCH64_LDST64_ABS_LO12_NC);
    eval 'sub R_AARCH64_MOVW_PREL_G0 () {287;}' unless defined(&R_AARCH64_MOVW_PREL_G0);
    eval 'sub R_AARCH64_MOVW_PREL_G0_NC () {288;}' unless defined(&R_AARCH64_MOVW_PREL_G0_NC);
    eval 'sub R_AARCH64_MOVW_PREL_G1 () {289;}' unless defined(&R_AARCH64_MOVW_PREL_G1);
    eval 'sub R_AARCH64_MOVW_PREL_G1_NC () {290;}' unless defined(&R_AARCH64_MOVW_PREL_G1_NC);
    eval 'sub R_AARCH64_MOVW_PREL_G2 () {291;}' unless defined(&R_AARCH64_MOVW_PREL_G2);
    eval 'sub R_AARCH64_MOVW_PREL_G2_NC () {292;}' unless defined(&R_AARCH64_MOVW_PREL_G2_NC);
    eval 'sub R_AARCH64_MOVW_PREL_G3 () {293;}' unless defined(&R_AARCH64_MOVW_PREL_G3);
    eval 'sub R_AARCH64_LDST128_ABS_LO12_NC () {299;}' unless defined(&R_AARCH64_LDST128_ABS_LO12_NC);
    eval 'sub R_AARCH64_MOVW_GOTOFF_G0 () {300;}' unless defined(&R_AARCH64_MOVW_GOTOFF_G0);
    eval 'sub R_AARCH64_MOVW_GOTOFF_G0_NC () {301;}' unless defined(&R_AARCH64_MOVW_GOTOFF_G0_NC);
    eval 'sub R_AARCH64_MOVW_GOTOFF_G1 () {302;}' unless defined(&R_AARCH64_MOVW_GOTOFF_G1);
    eval 'sub R_AARCH64_MOVW_GOTOFF_G1_NC () {303;}' unless defined(&R_AARCH64_MOVW_GOTOFF_G1_NC);
    eval 'sub R_AARCH64_MOVW_GOTOFF_G2 () {304;}' unless defined(&R_AARCH64_MOVW_GOTOFF_G2);
    eval 'sub R_AARCH64_MOVW_GOTOFF_G2_NC () {305;}' unless defined(&R_AARCH64_MOVW_GOTOFF_G2_NC);
    eval 'sub R_AARCH64_MOVW_GOTOFF_G3 () {306;}' unless defined(&R_AARCH64_MOVW_GOTOFF_G3);
    eval 'sub R_AARCH64_GOTREL64 () {307;}' unless defined(&R_AARCH64_GOTREL64);
    eval 'sub R_AARCH64_GOTREL32 () {308;}' unless defined(&R_AARCH64_GOTREL32);
    eval 'sub R_AARCH64_GOT_LD_PREL19 () {309;}' unless defined(&R_AARCH64_GOT_LD_PREL19);
    eval 'sub R_AARCH64_LD64_GOTOFF_LO15 () {310;}' unless defined(&R_AARCH64_LD64_GOTOFF_LO15);
    eval 'sub R_AARCH64_ADR_GOT_PAGE () {311;}' unless defined(&R_AARCH64_ADR_GOT_PAGE);
    eval 'sub R_AARCH64_LD64_GOT_LO12_NC () {312;}' unless defined(&R_AARCH64_LD64_GOT_LO12_NC);
    eval 'sub R_AARCH64_LD64_GOTPAGE_LO15 () {313;}' unless defined(&R_AARCH64_LD64_GOTPAGE_LO15);
    eval 'sub R_AARCH64_TLSGD_ADR_PREL21 () {512;}' unless defined(&R_AARCH64_TLSGD_ADR_PREL21);
    eval 'sub R_AARCH64_TLSGD_ADR_PAGE21 () {513;}' unless defined(&R_AARCH64_TLSGD_ADR_PAGE21);
    eval 'sub R_AARCH64_TLSGD_ADD_LO12_NC () {514;}' unless defined(&R_AARCH64_TLSGD_ADD_LO12_NC);
    eval 'sub R_AARCH64_TLSGD_MOVW_G1 () {515;}' unless defined(&R_AARCH64_TLSGD_MOVW_G1);
    eval 'sub R_AARCH64_TLSGD_MOVW_G0_NC () {516;}' unless defined(&R_AARCH64_TLSGD_MOVW_G0_NC);
    eval 'sub R_AARCH64_TLSLD_ADR_PREL21 () {517;}' unless defined(&R_AARCH64_TLSLD_ADR_PREL21);
    eval 'sub R_AARCH64_TLSLD_ADR_PAGE21 () {518;}' unless defined(&R_AARCH64_TLSLD_ADR_PAGE21);
    eval 'sub R_AARCH64_TLSLD_ADD_LO12_NC () {519;}' unless defined(&R_AARCH64_TLSLD_ADD_LO12_NC);
    eval 'sub R_AARCH64_TLSLD_MOVW_G1 () {520;}' unless defined(&R_AARCH64_TLSLD_MOVW_G1);
    eval 'sub R_AARCH64_TLSLD_MOVW_G0_NC () {521;}' unless defined(&R_AARCH64_TLSLD_MOVW_G0_NC);
    eval 'sub R_AARCH64_TLSLD_LD_PREL19 () {522;}' unless defined(&R_AARCH64_TLSLD_LD_PREL19);
    eval 'sub R_AARCH64_TLSLD_MOVW_DTPREL_G2 () {523;}' unless defined(&R_AARCH64_TLSLD_MOVW_DTPREL_G2);
    eval 'sub R_AARCH64_TLSLD_MOVW_DTPREL_G1 () {524;}' unless defined(&R_AARCH64_TLSLD_MOVW_DTPREL_G1);
    eval 'sub R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC () {525;}' unless defined(&R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC);
    eval 'sub R_AARCH64_TLSLD_MOVW_DTPREL_G0 () {526;}' unless defined(&R_AARCH64_TLSLD_MOVW_DTPREL_G0);
    eval 'sub R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC () {527;}' unless defined(&R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC);
    eval 'sub R_AARCH64_TLSLD_ADD_DTPREL_HI12 () {528;}' unless defined(&R_AARCH64_TLSLD_ADD_DTPREL_HI12);
    eval 'sub R_AARCH64_TLSLD_ADD_DTPREL_LO12 () {529;}' unless defined(&R_AARCH64_TLSLD_ADD_DTPREL_LO12);
    eval 'sub R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC () {530;}' unless defined(&R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC);
    eval 'sub R_AARCH64_TLSLD_LDST8_DTPREL_LO12 () {531;}' unless defined(&R_AARCH64_TLSLD_LDST8_DTPREL_LO12);
    eval 'sub R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC () {532;}' unless defined(&R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC);
    eval 'sub R_AARCH64_TLSLD_LDST16_DTPREL_LO12 () {533;}' unless defined(&R_AARCH64_TLSLD_LDST16_DTPREL_LO12);
    eval 'sub R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC () {534;}' unless defined(&R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC);
    eval 'sub R_AARCH64_TLSLD_LDST32_DTPREL_LO12 () {535;}' unless defined(&R_AARCH64_TLSLD_LDST32_DTPREL_LO12);
    eval 'sub R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC () {536;}' unless defined(&R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC);
    eval 'sub R_AARCH64_TLSLD_LDST64_DTPREL_LO12 () {537;}' unless defined(&R_AARCH64_TLSLD_LDST64_DTPREL_LO12);
    eval 'sub R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC () {538;}' unless defined(&R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC);
    eval 'sub R_AARCH64_TLSIE_MOVW_GOTTPREL_G1 () {539;}' unless defined(&R_AARCH64_TLSIE_MOVW_GOTTPREL_G1);
    eval 'sub R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC () {540;}' unless defined(&R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC);
    eval 'sub R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21 () {541;}' unless defined(&R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21);
    eval 'sub R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC () {542;}' unless defined(&R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC);
    eval 'sub R_AARCH64_TLSIE_LD_GOTTPREL_PREL19 () {543;}' unless defined(&R_AARCH64_TLSIE_LD_GOTTPREL_PREL19);
    eval 'sub R_AARCH64_TLSLE_MOVW_TPREL_G2 () {544;}' unless defined(&R_AARCH64_TLSLE_MOVW_TPREL_G2);
    eval 'sub R_AARCH64_TLSLE_MOVW_TPREL_G1 () {545;}' unless defined(&R_AARCH64_TLSLE_MOVW_TPREL_G1);
    eval 'sub R_AARCH64_TLSLE_MOVW_TPREL_G1_NC () {546;}' unless defined(&R_AARCH64_TLSLE_MOVW_TPREL_G1_NC);
    eval 'sub R_AARCH64_TLSLE_MOVW_TPREL_G0 () {547;}' unless defined(&R_AARCH64_TLSLE_MOVW_TPREL_G0);
    eval 'sub R_AARCH64_TLSLE_MOVW_TPREL_G0_NC () {548;}' unless defined(&R_AARCH64_TLSLE_MOVW_TPREL_G0_NC);
    eval 'sub R_AARCH64_TLSLE_ADD_TPREL_HI12 () {549;}' unless defined(&R_AARCH64_TLSLE_ADD_TPREL_HI12);
    eval 'sub R_AARCH64_TLSLE_ADD_TPREL_LO12 () {550;}' unless defined(&R_AARCH64_TLSLE_ADD_TPREL_LO12);
    eval 'sub R_AARCH64_TLSLE_ADD_TPREL_LO12_NC () {551;}' unless defined(&R_AARCH64_TLSLE_ADD_TPREL_LO12_NC);
    eval 'sub R_AARCH64_TLSLE_LDST8_TPREL_LO12 () {552;}' unless defined(&R_AARCH64_TLSLE_LDST8_TPREL_LO12);
    eval 'sub R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC () {553;}' unless defined(&R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC);
    eval 'sub R_AARCH64_TLSLE_LDST16_TPREL_LO12 () {554;}' unless defined(&R_AARCH64_TLSLE_LDST16_TPREL_LO12);
    eval 'sub R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC () {555;}' unless defined(&R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC);
    eval 'sub R_AARCH64_TLSLE_LDST32_TPREL_LO12 () {556;}' unless defined(&R_AARCH64_TLSLE_LDST32_TPREL_LO12);
    eval 'sub R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC () {557;}' unless defined(&R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC);
    eval 'sub R_AARCH64_TLSLE_LDST64_TPREL_LO12 () {558;}' unless defined(&R_AARCH64_TLSLE_LDST64_TPREL_LO12);
    eval 'sub R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC () {559;}' unless defined(&R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC);
    eval 'sub R_AARCH64_TLSDESC_LD_PREL19 () {560;}' unless defined(&R_AARCH64_TLSDESC_LD_PREL19);
    eval 'sub R_AARCH64_TLSDESC_ADR_PREL21 () {561;}' unless defined(&R_AARCH64_TLSDESC_ADR_PREL21);
    eval 'sub R_AARCH64_TLSDESC_ADR_PAGE21 () {562;}' unless defined(&R_AARCH64_TLSDESC_ADR_PAGE21);
    eval 'sub R_AARCH64_TLSDESC_LD64_LO12 () {563;}' unless defined(&R_AARCH64_TLSDESC_LD64_LO12);
    eval 'sub R_AARCH64_TLSDESC_ADD_LO12 () {564;}' unless defined(&R_AARCH64_TLSDESC_ADD_LO12);
    eval 'sub R_AARCH64_TLSDESC_OFF_G1 () {565;}' unless defined(&R_AARCH64_TLSDESC_OFF_G1);
    eval 'sub R_AARCH64_TLSDESC_OFF_G0_NC () {566;}' unless defined(&R_AARCH64_TLSDESC_OFF_G0_NC);
    eval 'sub R_AARCH64_TLSDESC_LDR () {567;}' unless defined(&R_AARCH64_TLSDESC_LDR);
    eval 'sub R_AARCH64_TLSDESC_ADD () {568;}' unless defined(&R_AARCH64_TLSDESC_ADD);
    eval 'sub R_AARCH64_TLSDESC_CALL () {569;}' unless defined(&R_AARCH64_TLSDESC_CALL);
    eval 'sub R_AARCH64_TLSLE_LDST128_TPREL_LO12 () {570;}' unless defined(&R_AARCH64_TLSLE_LDST128_TPREL_LO12);
    eval 'sub R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC () {571;}' unless defined(&R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC);
    eval 'sub R_AARCH64_TLSLD_LDST128_DTPREL_LO12 () {572;}' unless defined(&R_AARCH64_TLSLD_LDST128_DTPREL_LO12);
    eval 'sub R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC () {573;}' unless defined(&R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC);
    eval 'sub R_AARCH64_COPY () {1024;}' unless defined(&R_AARCH64_COPY);
    eval 'sub R_AARCH64_GLOB_DAT () {1025;}' unless defined(&R_AARCH64_GLOB_DAT);
    eval 'sub R_AARCH64_JUMP_SLOT () {1026;}' unless defined(&R_AARCH64_JUMP_SLOT);
    eval 'sub R_AARCH64_RELATIVE () {1027;}' unless defined(&R_AARCH64_RELATIVE);
    eval 'sub R_AARCH64_TLS_DTPMOD () {1028;}' unless defined(&R_AARCH64_TLS_DTPMOD);
    eval 'sub R_AARCH64_TLS_DTPREL () {1029;}' unless defined(&R_AARCH64_TLS_DTPREL);
    eval 'sub R_AARCH64_TLS_TPREL () {1030;}' unless defined(&R_AARCH64_TLS_TPREL);
    eval 'sub R_AARCH64_TLSDESC () {1031;}' unless defined(&R_AARCH64_TLSDESC);
    eval 'sub R_AARCH64_IRELATIVE () {1032;}' unless defined(&R_AARCH64_IRELATIVE);
    eval 'sub DT_AARCH64_BTI_PLT () {( &DT_LOPROC + 1);}' unless defined(&DT_AARCH64_BTI_PLT);
    eval 'sub DT_AARCH64_PAC_PLT () {( &DT_LOPROC + 3);}' unless defined(&DT_AARCH64_PAC_PLT);
    eval 'sub DT_AARCH64_VARIANT_PCS () {( &DT_LOPROC + 5);}' unless defined(&DT_AARCH64_VARIANT_PCS);
    eval 'sub DT_AARCH64_NUM () {6;}' unless defined(&DT_AARCH64_NUM);
    eval 'sub STO_AARCH64_VARIANT_PCS () {0x80;}' unless defined(&STO_AARCH64_VARIANT_PCS);
    eval 'sub R_ARM_NONE () {0;}' unless defined(&R_ARM_NONE);
    eval 'sub R_ARM_PC24 () {1;}' unless defined(&R_ARM_PC24);
    eval 'sub R_ARM_ABS32 () {2;}' unless defined(&R_ARM_ABS32);
    eval 'sub R_ARM_REL32 () {3;}' unless defined(&R_ARM_REL32);
    eval 'sub R_ARM_PC13 () {4;}' unless defined(&R_ARM_PC13);
    eval 'sub R_ARM_ABS16 () {5;}' unless defined(&R_ARM_ABS16);
    eval 'sub R_ARM_ABS12 () {6;}' unless defined(&R_ARM_ABS12);
    eval 'sub R_ARM_THM_ABS5 () {7;}' unless defined(&R_ARM_THM_ABS5);
    eval 'sub R_ARM_ABS8 () {8;}' unless defined(&R_ARM_ABS8);
    eval 'sub R_ARM_SBREL32 () {9;}' unless defined(&R_ARM_SBREL32);
    eval 'sub R_ARM_THM_PC22 () {10;}' unless defined(&R_ARM_THM_PC22);
    eval 'sub R_ARM_THM_PC8 () {11;}' unless defined(&R_ARM_THM_PC8);
    eval 'sub R_ARM_AMP_VCALL9 () {12;}' unless defined(&R_ARM_AMP_VCALL9);
    eval 'sub R_ARM_SWI24 () {13;}' unless defined(&R_ARM_SWI24);
    eval 'sub R_ARM_TLS_DESC () {13;}' unless defined(&R_ARM_TLS_DESC);
    eval 'sub R_ARM_THM_SWI8 () {14;}' unless defined(&R_ARM_THM_SWI8);
    eval 'sub R_ARM_XPC25 () {15;}' unless defined(&R_ARM_XPC25);
    eval 'sub R_ARM_THM_XPC22 () {16;}' unless defined(&R_ARM_THM_XPC22);
    eval 'sub R_ARM_TLS_DTPMOD32 () {17;}' unless defined(&R_ARM_TLS_DTPMOD32);
    eval 'sub R_ARM_TLS_DTPOFF32 () {18;}' unless defined(&R_ARM_TLS_DTPOFF32);
    eval 'sub R_ARM_TLS_TPOFF32 () {19;}' unless defined(&R_ARM_TLS_TPOFF32);
    eval 'sub R_ARM_COPY () {20;}' unless defined(&R_ARM_COPY);
    eval 'sub R_ARM_GLOB_DAT () {21;}' unless defined(&R_ARM_GLOB_DAT);
    eval 'sub R_ARM_JUMP_SLOT () {22;}' unless defined(&R_ARM_JUMP_SLOT);
    eval 'sub R_ARM_RELATIVE () {23;}' unless defined(&R_ARM_RELATIVE);
    eval 'sub R_ARM_GOTOFF () {24;}' unless defined(&R_ARM_GOTOFF);
    eval 'sub R_ARM_GOTPC () {25;}' unless defined(&R_ARM_GOTPC);
    eval 'sub R_ARM_GOT32 () {26;}' unless defined(&R_ARM_GOT32);
    eval 'sub R_ARM_PLT32 () {27;}' unless defined(&R_ARM_PLT32);
    eval 'sub R_ARM_CALL () {28;}' unless defined(&R_ARM_CALL);
    eval 'sub R_ARM_JUMP24 () {29;}' unless defined(&R_ARM_JUMP24);
    eval 'sub R_ARM_THM_JUMP24 () {30;}' unless defined(&R_ARM_THM_JUMP24);
    eval 'sub R_ARM_BASE_ABS () {31;}' unless defined(&R_ARM_BASE_ABS);
    eval 'sub R_ARM_ALU_PCREL_7_0 () {32;}' unless defined(&R_ARM_ALU_PCREL_7_0);
    eval 'sub R_ARM_ALU_PCREL_15_8 () {33;}' unless defined(&R_ARM_ALU_PCREL_15_8);
    eval 'sub R_ARM_ALU_PCREL_23_15 () {34;}' unless defined(&R_ARM_ALU_PCREL_23_15);
    eval 'sub R_ARM_LDR_SBREL_11_0 () {35;}' unless defined(&R_ARM_LDR_SBREL_11_0);
    eval 'sub R_ARM_ALU_SBREL_19_12 () {36;}' unless defined(&R_ARM_ALU_SBREL_19_12);
    eval 'sub R_ARM_ALU_SBREL_27_20 () {37;}' unless defined(&R_ARM_ALU_SBREL_27_20);
    eval 'sub R_ARM_TARGET1 () {38;}' unless defined(&R_ARM_TARGET1);
    eval 'sub R_ARM_SBREL31 () {39;}' unless defined(&R_ARM_SBREL31);
    eval 'sub R_ARM_V4BX () {40;}' unless defined(&R_ARM_V4BX);
    eval 'sub R_ARM_TARGET2 () {41;}' unless defined(&R_ARM_TARGET2);
    eval 'sub R_ARM_PREL31 () {42;}' unless defined(&R_ARM_PREL31);
    eval 'sub R_ARM_MOVW_ABS_NC () {43;}' unless defined(&R_ARM_MOVW_ABS_NC);
    eval 'sub R_ARM_MOVT_ABS () {44;}' unless defined(&R_ARM_MOVT_ABS);
    eval 'sub R_ARM_MOVW_PREL_NC () {45;}' unless defined(&R_ARM_MOVW_PREL_NC);
    eval 'sub R_ARM_MOVT_PREL () {46;}' unless defined(&R_ARM_MOVT_PREL);
    eval 'sub R_ARM_THM_MOVW_ABS_NC () {47;}' unless defined(&R_ARM_THM_MOVW_ABS_NC);
    eval 'sub R_ARM_THM_MOVT_ABS () {48;}' unless defined(&R_ARM_THM_MOVT_ABS);
    eval 'sub R_ARM_THM_MOVW_PREL_NC () {49;}' unless defined(&R_ARM_THM_MOVW_PREL_NC);
    eval 'sub R_ARM_THM_MOVT_PREL () {50;}' unless defined(&R_ARM_THM_MOVT_PREL);
    eval 'sub R_ARM_THM_JUMP19 () {51;}' unless defined(&R_ARM_THM_JUMP19);
    eval 'sub R_ARM_THM_JUMP6 () {52;}' unless defined(&R_ARM_THM_JUMP6);
    eval 'sub R_ARM_THM_ALU_PREL_11_0 () {53;}' unless defined(&R_ARM_THM_ALU_PREL_11_0);
    eval 'sub R_ARM_THM_PC12 () {54;}' unless defined(&R_ARM_THM_PC12);
    eval 'sub R_ARM_ABS32_NOI () {55;}' unless defined(&R_ARM_ABS32_NOI);
    eval 'sub R_ARM_REL32_NOI () {56;}' unless defined(&R_ARM_REL32_NOI);
    eval 'sub R_ARM_ALU_PC_G0_NC () {57;}' unless defined(&R_ARM_ALU_PC_G0_NC);
    eval 'sub R_ARM_ALU_PC_G0 () {58;}' unless defined(&R_ARM_ALU_PC_G0);
    eval 'sub R_ARM_ALU_PC_G1_NC () {59;}' unless defined(&R_ARM_ALU_PC_G1_NC);
    eval 'sub R_ARM_ALU_PC_G1 () {60;}' unless defined(&R_ARM_ALU_PC_G1);
    eval 'sub R_ARM_ALU_PC_G2 () {61;}' unless defined(&R_ARM_ALU_PC_G2);
    eval 'sub R_ARM_LDR_PC_G1 () {62;}' unless defined(&R_ARM_LDR_PC_G1);
    eval 'sub R_ARM_LDR_PC_G2 () {63;}' unless defined(&R_ARM_LDR_PC_G2);
    eval 'sub R_ARM_LDRS_PC_G0 () {64;}' unless defined(&R_ARM_LDRS_PC_G0);
    eval 'sub R_ARM_LDRS_PC_G1 () {65;}' unless defined(&R_ARM_LDRS_PC_G1);
    eval 'sub R_ARM_LDRS_PC_G2 () {66;}' unless defined(&R_ARM_LDRS_PC_G2);
    eval 'sub R_ARM_LDC_PC_G0 () {67;}' unless defined(&R_ARM_LDC_PC_G0);
    eval 'sub R_ARM_LDC_PC_G1 () {68;}' unless defined(&R_ARM_LDC_PC_G1);
    eval 'sub R_ARM_LDC_PC_G2 () {69;}' unless defined(&R_ARM_LDC_PC_G2);
    eval 'sub R_ARM_ALU_SB_G0_NC () {70;}' unless defined(&R_ARM_ALU_SB_G0_NC);
    eval 'sub R_ARM_ALU_SB_G0 () {71;}' unless defined(&R_ARM_ALU_SB_G0);
    eval 'sub R_ARM_ALU_SB_G1_NC () {72;}' unless defined(&R_ARM_ALU_SB_G1_NC);
    eval 'sub R_ARM_ALU_SB_G1 () {73;}' unless defined(&R_ARM_ALU_SB_G1);
    eval 'sub R_ARM_ALU_SB_G2 () {74;}' unless defined(&R_ARM_ALU_SB_G2);
    eval 'sub R_ARM_LDR_SB_G0 () {75;}' unless defined(&R_ARM_LDR_SB_G0);
    eval 'sub R_ARM_LDR_SB_G1 () {76;}' unless defined(&R_ARM_LDR_SB_G1);
    eval 'sub R_ARM_LDR_SB_G2 () {77;}' unless defined(&R_ARM_LDR_SB_G2);
    eval 'sub R_ARM_LDRS_SB_G0 () {78;}' unless defined(&R_ARM_LDRS_SB_G0);
    eval 'sub R_ARM_LDRS_SB_G1 () {79;}' unless defined(&R_ARM_LDRS_SB_G1);
    eval 'sub R_ARM_LDRS_SB_G2 () {80;}' unless defined(&R_ARM_LDRS_SB_G2);
    eval 'sub R_ARM_LDC_SB_G0 () {81;}' unless defined(&R_ARM_LDC_SB_G0);
    eval 'sub R_ARM_LDC_SB_G1 () {82;}' unless defined(&R_ARM_LDC_SB_G1);
    eval 'sub R_ARM_LDC_SB_G2 () {83;}' unless defined(&R_ARM_LDC_SB_G2);
    eval 'sub R_ARM_MOVW_BREL_NC () {84;}' unless defined(&R_ARM_MOVW_BREL_NC);
    eval 'sub R_ARM_MOVT_BREL () {85;}' unless defined(&R_ARM_MOVT_BREL);
    eval 'sub R_ARM_MOVW_BREL () {86;}' unless defined(&R_ARM_MOVW_BREL);
    eval 'sub R_ARM_THM_MOVW_BREL_NC () {87;}' unless defined(&R_ARM_THM_MOVW_BREL_NC);
    eval 'sub R_ARM_THM_MOVT_BREL () {88;}' unless defined(&R_ARM_THM_MOVT_BREL);
    eval 'sub R_ARM_THM_MOVW_BREL () {89;}' unless defined(&R_ARM_THM_MOVW_BREL);
    eval 'sub R_ARM_TLS_GOTDESC () {90;}' unless defined(&R_ARM_TLS_GOTDESC);
    eval 'sub R_ARM_TLS_CALL () {91;}' unless defined(&R_ARM_TLS_CALL);
    eval 'sub R_ARM_TLS_DESCSEQ () {92;}' unless defined(&R_ARM_TLS_DESCSEQ);
    eval 'sub R_ARM_THM_TLS_CALL () {93;}' unless defined(&R_ARM_THM_TLS_CALL);
    eval 'sub R_ARM_PLT32_ABS () {94;}' unless defined(&R_ARM_PLT32_ABS);
    eval 'sub R_ARM_GOT_ABS () {95;}' unless defined(&R_ARM_GOT_ABS);
    eval 'sub R_ARM_GOT_PREL () {96;}' unless defined(&R_ARM_GOT_PREL);
    eval 'sub R_ARM_GOT_BREL12 () {97;}' unless defined(&R_ARM_GOT_BREL12);
    eval 'sub R_ARM_GOTOFF12 () {98;}' unless defined(&R_ARM_GOTOFF12);
    eval 'sub R_ARM_GOTRELAX () {99;}' unless defined(&R_ARM_GOTRELAX);
    eval 'sub R_ARM_GNU_VTENTRY () {100;}' unless defined(&R_ARM_GNU_VTENTRY);
    eval 'sub R_ARM_GNU_VTINHERIT () {101;}' unless defined(&R_ARM_GNU_VTINHERIT);
    eval 'sub R_ARM_THM_PC11 () {102;}' unless defined(&R_ARM_THM_PC11);
    eval 'sub R_ARM_THM_PC9 () {103;}' unless defined(&R_ARM_THM_PC9);
    eval 'sub R_ARM_TLS_GD32 () {104;}' unless defined(&R_ARM_TLS_GD32);
    eval 'sub R_ARM_TLS_LDM32 () {105;}' unless defined(&R_ARM_TLS_LDM32);
    eval 'sub R_ARM_TLS_LDO32 () {106;}' unless defined(&R_ARM_TLS_LDO32);
    eval 'sub R_ARM_TLS_IE32 () {107;}' unless defined(&R_ARM_TLS_IE32);
    eval 'sub R_ARM_TLS_LE32 () {108;}' unless defined(&R_ARM_TLS_LE32);
    eval 'sub R_ARM_TLS_LDO12 () {109;}' unless defined(&R_ARM_TLS_LDO12);
    eval 'sub R_ARM_TLS_LE12 () {110;}' unless defined(&R_ARM_TLS_LE12);
    eval 'sub R_ARM_TLS_IE12GP () {111;}' unless defined(&R_ARM_TLS_IE12GP);
    eval 'sub R_ARM_ME_TOO () {128;}' unless defined(&R_ARM_ME_TOO);
    eval 'sub R_ARM_THM_TLS_DESCSEQ () {129;}' unless defined(&R_ARM_THM_TLS_DESCSEQ);
    eval 'sub R_ARM_THM_TLS_DESCSEQ16 () {129;}' unless defined(&R_ARM_THM_TLS_DESCSEQ16);
    eval 'sub R_ARM_THM_TLS_DESCSEQ32 () {130;}' unless defined(&R_ARM_THM_TLS_DESCSEQ32);
    eval 'sub R_ARM_THM_GOT_BREL12 () {131;}' unless defined(&R_ARM_THM_GOT_BREL12);
    eval 'sub R_ARM_IRELATIVE () {160;}' unless defined(&R_ARM_IRELATIVE);
    eval 'sub R_ARM_RXPC25 () {249;}' unless defined(&R_ARM_RXPC25);
    eval 'sub R_ARM_RSBREL32 () {250;}' unless defined(&R_ARM_RSBREL32);
    eval 'sub R_ARM_THM_RPC22 () {251;}' unless defined(&R_ARM_THM_RPC22);
    eval 'sub R_ARM_RREL32 () {252;}' unless defined(&R_ARM_RREL32);
    eval 'sub R_ARM_RABS22 () {253;}' unless defined(&R_ARM_RABS22);
    eval 'sub R_ARM_RPC24 () {254;}' unless defined(&R_ARM_RPC24);
    eval 'sub R_ARM_RBASE () {255;}' unless defined(&R_ARM_RBASE);
    eval 'sub R_ARM_NUM () {256;}' unless defined(&R_ARM_NUM);
    eval 'sub R_CKCORE_NONE () {0;}' unless defined(&R_CKCORE_NONE);
    eval 'sub R_CKCORE_ADDR32 () {1;}' unless defined(&R_CKCORE_ADDR32);
    eval 'sub R_CKCORE_PCRELIMM8BY4 () {2;}' unless defined(&R_CKCORE_PCRELIMM8BY4);
    eval 'sub R_CKCORE_PCRELIMM11BY2 () {3;}' unless defined(&R_CKCORE_PCRELIMM11BY2);
    eval 'sub R_CKCORE_PCREL32 () {5;}' unless defined(&R_CKCORE_PCREL32);
    eval 'sub R_CKCORE_PCRELJSR_IMM11BY2 () {6;}' unless defined(&R_CKCORE_PCRELJSR_IMM11BY2);
    eval 'sub R_CKCORE_RELATIVE () {9;}' unless defined(&R_CKCORE_RELATIVE);
    eval 'sub R_CKCORE_COPY () {10;}' unless defined(&R_CKCORE_COPY);
    eval 'sub R_CKCORE_GLOB_DAT () {11;}' unless defined(&R_CKCORE_GLOB_DAT);
    eval 'sub R_CKCORE_JUMP_SLOT () {12;}' unless defined(&R_CKCORE_JUMP_SLOT);
    eval 'sub R_CKCORE_GOTOFF () {13;}' unless defined(&R_CKCORE_GOTOFF);
    eval 'sub R_CKCORE_GOTPC () {14;}' unless defined(&R_CKCORE_GOTPC);
    eval 'sub R_CKCORE_GOT32 () {15;}' unless defined(&R_CKCORE_GOT32);
    eval 'sub R_CKCORE_PLT32 () {16;}' unless defined(&R_CKCORE_PLT32);
    eval 'sub R_CKCORE_ADDRGOT () {17;}' unless defined(&R_CKCORE_ADDRGOT);
    eval 'sub R_CKCORE_ADDRPLT () {18;}' unless defined(&R_CKCORE_ADDRPLT);
    eval 'sub R_CKCORE_PCREL_IMM26BY2 () {19;}' unless defined(&R_CKCORE_PCREL_IMM26BY2);
    eval 'sub R_CKCORE_PCREL_IMM16BY2 () {20;}' unless defined(&R_CKCORE_PCREL_IMM16BY2);
    eval 'sub R_CKCORE_PCREL_IMM16BY4 () {21;}' unless defined(&R_CKCORE_PCREL_IMM16BY4);
    eval 'sub R_CKCORE_PCREL_IMM10BY2 () {22;}' unless defined(&R_CKCORE_PCREL_IMM10BY2);
    eval 'sub R_CKCORE_PCREL_IMM10BY4 () {23;}' unless defined(&R_CKCORE_PCREL_IMM10BY4);
    eval 'sub R_CKCORE_ADDR_HI16 () {24;}' unless defined(&R_CKCORE_ADDR_HI16);
    eval 'sub R_CKCORE_ADDR_LO16 () {25;}' unless defined(&R_CKCORE_ADDR_LO16);
    eval 'sub R_CKCORE_GOTPC_HI16 () {26;}' unless defined(&R_CKCORE_GOTPC_HI16);
    eval 'sub R_CKCORE_GOTPC_LO16 () {27;}' unless defined(&R_CKCORE_GOTPC_LO16);
    eval 'sub R_CKCORE_GOTOFF_HI16 () {28;}' unless defined(&R_CKCORE_GOTOFF_HI16);
    eval 'sub R_CKCORE_GOTOFF_LO16 () {29;}' unless defined(&R_CKCORE_GOTOFF_LO16);
    eval 'sub R_CKCORE_GOT12 () {30;}' unless defined(&R_CKCORE_GOT12);
    eval 'sub R_CKCORE_GOT_HI16 () {31;}' unless defined(&R_CKCORE_GOT_HI16);
    eval 'sub R_CKCORE_GOT_LO16 () {32;}' unless defined(&R_CKCORE_GOT_LO16);
    eval 'sub R_CKCORE_PLT12 () {33;}' unless defined(&R_CKCORE_PLT12);
    eval 'sub R_CKCORE_PLT_HI16 () {34;}' unless defined(&R_CKCORE_PLT_HI16);
    eval 'sub R_CKCORE_PLT_LO16 () {35;}' unless defined(&R_CKCORE_PLT_LO16);
    eval 'sub R_CKCORE_ADDRGOT_HI16 () {36;}' unless defined(&R_CKCORE_ADDRGOT_HI16);
    eval 'sub R_CKCORE_ADDRGOT_LO16 () {37;}' unless defined(&R_CKCORE_ADDRGOT_LO16);
    eval 'sub R_CKCORE_ADDRPLT_HI16 () {38;}' unless defined(&R_CKCORE_ADDRPLT_HI16);
    eval 'sub R_CKCORE_ADDRPLT_LO16 () {39;}' unless defined(&R_CKCORE_ADDRPLT_LO16);
    eval 'sub R_CKCORE_PCREL_JSR_IMM26BY2 () {40;}' unless defined(&R_CKCORE_PCREL_JSR_IMM26BY2);
    eval 'sub R_CKCORE_TOFFSET_LO16 () {41;}' unless defined(&R_CKCORE_TOFFSET_LO16);
    eval 'sub R_CKCORE_DOFFSET_LO16 () {42;}' unless defined(&R_CKCORE_DOFFSET_LO16);
    eval 'sub R_CKCORE_PCREL_IMM18BY2 () {43;}' unless defined(&R_CKCORE_PCREL_IMM18BY2);
    eval 'sub R_CKCORE_DOFFSET_IMM18 () {44;}' unless defined(&R_CKCORE_DOFFSET_IMM18);
    eval 'sub R_CKCORE_DOFFSET_IMM18BY2 () {45;}' unless defined(&R_CKCORE_DOFFSET_IMM18BY2);
    eval 'sub R_CKCORE_DOFFSET_IMM18BY4 () {46;}' unless defined(&R_CKCORE_DOFFSET_IMM18BY4);
    eval 'sub R_CKCORE_GOT_IMM18BY4 () {48;}' unless defined(&R_CKCORE_GOT_IMM18BY4);
    eval 'sub R_CKCORE_PLT_IMM18BY4 () {49;}' unless defined(&R_CKCORE_PLT_IMM18BY4);
    eval 'sub R_CKCORE_PCREL_IMM7BY4 () {50;}' unless defined(&R_CKCORE_PCREL_IMM7BY4);
    eval 'sub R_CKCORE_TLS_LE32 () {51;}' unless defined(&R_CKCORE_TLS_LE32);
    eval 'sub R_CKCORE_TLS_IE32 () {52;}' unless defined(&R_CKCORE_TLS_IE32);
    eval 'sub R_CKCORE_TLS_GD32 () {53;}' unless defined(&R_CKCORE_TLS_GD32);
    eval 'sub R_CKCORE_TLS_LDM32 () {54;}' unless defined(&R_CKCORE_TLS_LDM32);
    eval 'sub R_CKCORE_TLS_LDO32 () {55;}' unless defined(&R_CKCORE_TLS_LDO32);
    eval 'sub R_CKCORE_TLS_DTPMOD32 () {56;}' unless defined(&R_CKCORE_TLS_DTPMOD32);
    eval 'sub R_CKCORE_TLS_DTPOFF32 () {57;}' unless defined(&R_CKCORE_TLS_DTPOFF32);
    eval 'sub R_CKCORE_TLS_TPOFF32 () {58;}' unless defined(&R_CKCORE_TLS_TPOFF32);
    eval 'sub EF_CSKY_ABIMASK () {0xf0000000;}' unless defined(&EF_CSKY_ABIMASK);
    eval 'sub EF_CSKY_OTHER () {0xfff0000;}' unless defined(&EF_CSKY_OTHER);
    eval 'sub EF_CSKY_PROCESSOR () {0xffff;}' unless defined(&EF_CSKY_PROCESSOR);
    eval 'sub EF_CSKY_ABIV1 () {0x10000000;}' unless defined(&EF_CSKY_ABIV1);
    eval 'sub EF_CSKY_ABIV2 () {0x20000000;}' unless defined(&EF_CSKY_ABIV2);
    eval 'sub SHT_CSKY_ATTRIBUTES () {( &SHT_LOPROC + 1);}' unless defined(&SHT_CSKY_ATTRIBUTES);
    eval 'sub EF_IA_64_MASKOS () {0xf;}' unless defined(&EF_IA_64_MASKOS);
    eval 'sub EF_IA_64_ABI64 () {0x10;}' unless defined(&EF_IA_64_ABI64);
    eval 'sub EF_IA_64_ARCH () {0xff000000;}' unless defined(&EF_IA_64_ARCH);
    eval 'sub PT_IA_64_ARCHEXT () {( &PT_LOPROC + 0);}' unless defined(&PT_IA_64_ARCHEXT);
    eval 'sub PT_IA_64_UNWIND () {( &PT_LOPROC + 1);}' unless defined(&PT_IA_64_UNWIND);
    eval 'sub PT_IA_64_HP_OPT_ANOT () {( &PT_LOOS + 0x12);}' unless defined(&PT_IA_64_HP_OPT_ANOT);
    eval 'sub PT_IA_64_HP_HSL_ANOT () {( &PT_LOOS + 0x13);}' unless defined(&PT_IA_64_HP_HSL_ANOT);
    eval 'sub PT_IA_64_HP_STACK () {( &PT_LOOS + 0x14);}' unless defined(&PT_IA_64_HP_STACK);
    eval 'sub PF_IA_64_NORECOV () {0x80000000;}' unless defined(&PF_IA_64_NORECOV);
    eval 'sub SHT_IA_64_EXT () {( &SHT_LOPROC + 0);}' unless defined(&SHT_IA_64_EXT);
    eval 'sub SHT_IA_64_UNWIND () {( &SHT_LOPROC + 1);}' unless defined(&SHT_IA_64_UNWIND);
    eval 'sub SHF_IA_64_SHORT () {0x10000000;}' unless defined(&SHF_IA_64_SHORT);
    eval 'sub SHF_IA_64_NORECOV () {0x20000000;}' unless defined(&SHF_IA_64_NORECOV);
    eval 'sub DT_IA_64_PLT_RESERVE () {( &DT_LOPROC + 0);}' unless defined(&DT_IA_64_PLT_RESERVE);
    eval 'sub DT_IA_64_NUM () {1;}' unless defined(&DT_IA_64_NUM);
    eval 'sub R_IA64_NONE () {0x;}' unless defined(&R_IA64_NONE);
    eval 'sub R_IA64_IMM14 () {0x21;}' unless defined(&R_IA64_IMM14);
    eval 'sub R_IA64_IMM22 () {0x22;}' unless defined(&R_IA64_IMM22);
    eval 'sub R_IA64_IMM64 () {0x23;}' unless defined(&R_IA64_IMM64);
    eval 'sub R_IA64_DIR32MSB () {0x24;}' unless defined(&R_IA64_DIR32MSB);
    eval 'sub R_IA64_DIR32LSB () {0x25;}' unless defined(&R_IA64_DIR32LSB);
    eval 'sub R_IA64_DIR64MSB () {0x26;}' unless defined(&R_IA64_DIR64MSB);
    eval 'sub R_IA64_DIR64LSB () {0x27;}' unless defined(&R_IA64_DIR64LSB);
    eval 'sub R_IA64_GPREL22 () {0x2a;}' unless defined(&R_IA64_GPREL22);
    eval 'sub R_IA64_GPREL64I () {0x2b;}' unless defined(&R_IA64_GPREL64I);
    eval 'sub R_IA64_GPREL32MSB () {0x2c;}' unless defined(&R_IA64_GPREL32MSB);
    eval 'sub R_IA64_GPREL32LSB () {0x2d;}' unless defined(&R_IA64_GPREL32LSB);
    eval 'sub R_IA64_GPREL64MSB () {0x2e;}' unless defined(&R_IA64_GPREL64MSB);
    eval 'sub R_IA64_GPREL64LSB () {0x2f;}' unless defined(&R_IA64_GPREL64LSB);
    eval 'sub R_IA64_LTOFF22 () {0x32;}' unless defined(&R_IA64_LTOFF22);
    eval 'sub R_IA64_LTOFF64I () {0x33;}' unless defined(&R_IA64_LTOFF64I);
    eval 'sub R_IA64_PLTOFF22 () {0x3a;}' unless defined(&R_IA64_PLTOFF22);
    eval 'sub R_IA64_PLTOFF64I () {0x3b;}' unless defined(&R_IA64_PLTOFF64I);
    eval 'sub R_IA64_PLTOFF64MSB () {0x3e;}' unless defined(&R_IA64_PLTOFF64MSB);
    eval 'sub R_IA64_PLTOFF64LSB () {0x3f;}' unless defined(&R_IA64_PLTOFF64LSB);
    eval 'sub R_IA64_FPTR64I () {0x43;}' unless defined(&R_IA64_FPTR64I);
    eval 'sub R_IA64_FPTR32MSB () {0x44;}' unless defined(&R_IA64_FPTR32MSB);
    eval 'sub R_IA64_FPTR32LSB () {0x45;}' unless defined(&R_IA64_FPTR32LSB);
    eval 'sub R_IA64_FPTR64MSB () {0x46;}' unless defined(&R_IA64_FPTR64MSB);
    eval 'sub R_IA64_FPTR64LSB () {0x47;}' unless defined(&R_IA64_FPTR64LSB);
    eval 'sub R_IA64_PCREL60B () {0x48;}' unless defined(&R_IA64_PCREL60B);
    eval 'sub R_IA64_PCREL21B () {0x49;}' unless defined(&R_IA64_PCREL21B);
    eval 'sub R_IA64_PCREL21M () {0x4a;}' unless defined(&R_IA64_PCREL21M);
    eval 'sub R_IA64_PCREL21F () {0x4b;}' unless defined(&R_IA64_PCREL21F);
    eval 'sub R_IA64_PCREL32MSB () {0x4c;}' unless defined(&R_IA64_PCREL32MSB);
    eval 'sub R_IA64_PCREL32LSB () {0x4d;}' unless defined(&R_IA64_PCREL32LSB);
    eval 'sub R_IA64_PCREL64MSB () {0x4e;}' unless defined(&R_IA64_PCREL64MSB);
    eval 'sub R_IA64_PCREL64LSB () {0x4f;}' unless defined(&R_IA64_PCREL64LSB);
    eval 'sub R_IA64_LTOFF_FPTR22 () {0x52;}' unless defined(&R_IA64_LTOFF_FPTR22);
    eval 'sub R_IA64_LTOFF_FPTR64I () {0x53;}' unless defined(&R_IA64_LTOFF_FPTR64I);
    eval 'sub R_IA64_LTOFF_FPTR32MSB () {0x54;}' unless defined(&R_IA64_LTOFF_FPTR32MSB);
    eval 'sub R_IA64_LTOFF_FPTR32LSB () {0x55;}' unless defined(&R_IA64_LTOFF_FPTR32LSB);
    eval 'sub R_IA64_LTOFF_FPTR64MSB () {0x56;}' unless defined(&R_IA64_LTOFF_FPTR64MSB);
    eval 'sub R_IA64_LTOFF_FPTR64LSB () {0x57;}' unless defined(&R_IA64_LTOFF_FPTR64LSB);
    eval 'sub R_IA64_SEGREL32MSB () {0x5c;}' unless defined(&R_IA64_SEGREL32MSB);
    eval 'sub R_IA64_SEGREL32LSB () {0x5d;}' unless defined(&R_IA64_SEGREL32LSB);
    eval 'sub R_IA64_SEGREL64MSB () {0x5e;}' unless defined(&R_IA64_SEGREL64MSB);
    eval 'sub R_IA64_SEGREL64LSB () {0x5f;}' unless defined(&R_IA64_SEGREL64LSB);
    eval 'sub R_IA64_SECREL32MSB () {0x64;}' unless defined(&R_IA64_SECREL32MSB);
    eval 'sub R_IA64_SECREL32LSB () {0x65;}' unless defined(&R_IA64_SECREL32LSB);
    eval 'sub R_IA64_SECREL64MSB () {0x66;}' unless defined(&R_IA64_SECREL64MSB);
    eval 'sub R_IA64_SECREL64LSB () {0x67;}' unless defined(&R_IA64_SECREL64LSB);
    eval 'sub R_IA64_REL32MSB () {0x6c;}' unless defined(&R_IA64_REL32MSB);
    eval 'sub R_IA64_REL32LSB () {0x6d;}' unless defined(&R_IA64_REL32LSB);
    eval 'sub R_IA64_REL64MSB () {0x6e;}' unless defined(&R_IA64_REL64MSB);
    eval 'sub R_IA64_REL64LSB () {0x6f;}' unless defined(&R_IA64_REL64LSB);
    eval 'sub R_IA64_LTV32MSB () {0x74;}' unless defined(&R_IA64_LTV32MSB);
    eval 'sub R_IA64_LTV32LSB () {0x75;}' unless defined(&R_IA64_LTV32LSB);
    eval 'sub R_IA64_LTV64MSB () {0x76;}' unless defined(&R_IA64_LTV64MSB);
    eval 'sub R_IA64_LTV64LSB () {0x77;}' unless defined(&R_IA64_LTV64LSB);
    eval 'sub R_IA64_PCREL21BI () {0x79;}' unless defined(&R_IA64_PCREL21BI);
    eval 'sub R_IA64_PCREL22 () {0x7a;}' unless defined(&R_IA64_PCREL22);
    eval 'sub R_IA64_PCREL64I () {0x7b;}' unless defined(&R_IA64_PCREL64I);
    eval 'sub R_IA64_IPLTMSB () {0x80;}' unless defined(&R_IA64_IPLTMSB);
    eval 'sub R_IA64_IPLTLSB () {0x81;}' unless defined(&R_IA64_IPLTLSB);
    eval 'sub R_IA64_COPY () {0x84;}' unless defined(&R_IA64_COPY);
    eval 'sub R_IA64_SUB () {0x85;}' unless defined(&R_IA64_SUB);
    eval 'sub R_IA64_LTOFF22X () {0x86;}' unless defined(&R_IA64_LTOFF22X);
    eval 'sub R_IA64_LDXMOV () {0x87;}' unless defined(&R_IA64_LDXMOV);
    eval 'sub R_IA64_TPREL14 () {0x91;}' unless defined(&R_IA64_TPREL14);
    eval 'sub R_IA64_TPREL22 () {0x92;}' unless defined(&R_IA64_TPREL22);
    eval 'sub R_IA64_TPREL64I () {0x93;}' unless defined(&R_IA64_TPREL64I);
    eval 'sub R_IA64_TPREL64MSB () {0x96;}' unless defined(&R_IA64_TPREL64MSB);
    eval 'sub R_IA64_TPREL64LSB () {0x97;}' unless defined(&R_IA64_TPREL64LSB);
    eval 'sub R_IA64_LTOFF_TPREL22 () {0x9a;}' unless defined(&R_IA64_LTOFF_TPREL22);
    eval 'sub R_IA64_DTPMOD64MSB () {0xa6;}' unless defined(&R_IA64_DTPMOD64MSB);
    eval 'sub R_IA64_DTPMOD64LSB () {0xa7;}' unless defined(&R_IA64_DTPMOD64LSB);
    eval 'sub R_IA64_LTOFF_DTPMOD22 () {0xaa;}' unless defined(&R_IA64_LTOFF_DTPMOD22);
    eval 'sub R_IA64_DTPREL14 () {0xb1;}' unless defined(&R_IA64_DTPREL14);
    eval 'sub R_IA64_DTPREL22 () {0xb2;}' unless defined(&R_IA64_DTPREL22);
    eval 'sub R_IA64_DTPREL64I () {0xb3;}' unless defined(&R_IA64_DTPREL64I);
    eval 'sub R_IA64_DTPREL32MSB () {0xb4;}' unless defined(&R_IA64_DTPREL32MSB);
    eval 'sub R_IA64_DTPREL32LSB () {0xb5;}' unless defined(&R_IA64_DTPREL32LSB);
    eval 'sub R_IA64_DTPREL64MSB () {0xb6;}' unless defined(&R_IA64_DTPREL64MSB);
    eval 'sub R_IA64_DTPREL64LSB () {0xb7;}' unless defined(&R_IA64_DTPREL64LSB);
    eval 'sub R_IA64_LTOFF_DTPREL22 () {0xba;}' unless defined(&R_IA64_LTOFF_DTPREL22);
    eval 'sub EF_SH_MACH_MASK () {0x1f;}' unless defined(&EF_SH_MACH_MASK);
    eval 'sub EF_SH_UNKNOWN () {0x;}' unless defined(&EF_SH_UNKNOWN);
    eval 'sub EF_SH1 () {0x1;}' unless defined(&EF_SH1);
    eval 'sub EF_SH2 () {0x2;}' unless defined(&EF_SH2);
    eval 'sub EF_SH3 () {0x3;}' unless defined(&EF_SH3);
    eval 'sub EF_SH_DSP () {0x4;}' unless defined(&EF_SH_DSP);
    eval 'sub EF_SH3_DSP () {0x5;}' unless defined(&EF_SH3_DSP);
    eval 'sub EF_SH4AL_DSP () {0x6;}' unless defined(&EF_SH4AL_DSP);
    eval 'sub EF_SH3E () {0x8;}' unless defined(&EF_SH3E);
    eval 'sub EF_SH4 () {0x9;}' unless defined(&EF_SH4);
    eval 'sub EF_SH2E () {0xb;}' unless defined(&EF_SH2E);
    eval 'sub EF_SH4A () {0xc;}' unless defined(&EF_SH4A);
    eval 'sub EF_SH2A () {0xd;}' unless defined(&EF_SH2A);
    eval 'sub EF_SH4_NOFPU () {0x10;}' unless defined(&EF_SH4_NOFPU);
    eval 'sub EF_SH4A_NOFPU () {0x11;}' unless defined(&EF_SH4A_NOFPU);
    eval 'sub EF_SH4_NOMMU_NOFPU () {0x12;}' unless defined(&EF_SH4_NOMMU_NOFPU);
    eval 'sub EF_SH2A_NOFPU () {0x13;}' unless defined(&EF_SH2A_NOFPU);
    eval 'sub EF_SH3_NOMMU () {0x14;}' unless defined(&EF_SH3_NOMMU);
    eval 'sub EF_SH2A_SH4_NOFPU () {0x15;}' unless defined(&EF_SH2A_SH4_NOFPU);
    eval 'sub EF_SH2A_SH3_NOFPU () {0x16;}' unless defined(&EF_SH2A_SH3_NOFPU);
    eval 'sub EF_SH2A_SH4 () {0x17;}' unless defined(&EF_SH2A_SH4);
    eval 'sub EF_SH2A_SH3E () {0x18;}' unless defined(&EF_SH2A_SH3E);
    eval 'sub R_SH_NONE () {0;}' unless defined(&R_SH_NONE);
    eval 'sub R_SH_DIR32 () {1;}' unless defined(&R_SH_DIR32);
    eval 'sub R_SH_REL32 () {2;}' unless defined(&R_SH_REL32);
    eval 'sub R_SH_DIR8WPN () {3;}' unless defined(&R_SH_DIR8WPN);
    eval 'sub R_SH_IND12W () {4;}' unless defined(&R_SH_IND12W);
    eval 'sub R_SH_DIR8WPL () {5;}' unless defined(&R_SH_DIR8WPL);
    eval 'sub R_SH_DIR8WPZ () {6;}' unless defined(&R_SH_DIR8WPZ);
    eval 'sub R_SH_DIR8BP () {7;}' unless defined(&R_SH_DIR8BP);
    eval 'sub R_SH_DIR8W () {8;}' unless defined(&R_SH_DIR8W);
    eval 'sub R_SH_DIR8L () {9;}' unless defined(&R_SH_DIR8L);
    eval 'sub R_SH_SWITCH16 () {25;}' unless defined(&R_SH_SWITCH16);
    eval 'sub R_SH_SWITCH32 () {26;}' unless defined(&R_SH_SWITCH32);
    eval 'sub R_SH_USES () {27;}' unless defined(&R_SH_USES);
    eval 'sub R_SH_COUNT () {28;}' unless defined(&R_SH_COUNT);
    eval 'sub R_SH_ALIGN () {29;}' unless defined(&R_SH_ALIGN);
    eval 'sub R_SH_CODE () {30;}' unless defined(&R_SH_CODE);
    eval 'sub R_SH_DATA () {31;}' unless defined(&R_SH_DATA);
    eval 'sub R_SH_LABEL () {32;}' unless defined(&R_SH_LABEL);
    eval 'sub R_SH_SWITCH8 () {33;}' unless defined(&R_SH_SWITCH8);
    eval 'sub R_SH_GNU_VTINHERIT () {34;}' unless defined(&R_SH_GNU_VTINHERIT);
    eval 'sub R_SH_GNU_VTENTRY () {35;}' unless defined(&R_SH_GNU_VTENTRY);
    eval 'sub R_SH_TLS_GD_32 () {144;}' unless defined(&R_SH_TLS_GD_32);
    eval 'sub R_SH_TLS_LD_32 () {145;}' unless defined(&R_SH_TLS_LD_32);
    eval 'sub R_SH_TLS_LDO_32 () {146;}' unless defined(&R_SH_TLS_LDO_32);
    eval 'sub R_SH_TLS_IE_32 () {147;}' unless defined(&R_SH_TLS_IE_32);
    eval 'sub R_SH_TLS_LE_32 () {148;}' unless defined(&R_SH_TLS_LE_32);
    eval 'sub R_SH_TLS_DTPMOD32 () {149;}' unless defined(&R_SH_TLS_DTPMOD32);
    eval 'sub R_SH_TLS_DTPOFF32 () {150;}' unless defined(&R_SH_TLS_DTPOFF32);
    eval 'sub R_SH_TLS_TPOFF32 () {151;}' unless defined(&R_SH_TLS_TPOFF32);
    eval 'sub R_SH_GOT32 () {160;}' unless defined(&R_SH_GOT32);
    eval 'sub R_SH_PLT32 () {161;}' unless defined(&R_SH_PLT32);
    eval 'sub R_SH_COPY () {162;}' unless defined(&R_SH_COPY);
    eval 'sub R_SH_GLOB_DAT () {163;}' unless defined(&R_SH_GLOB_DAT);
    eval 'sub R_SH_JMP_SLOT () {164;}' unless defined(&R_SH_JMP_SLOT);
    eval 'sub R_SH_RELATIVE () {165;}' unless defined(&R_SH_RELATIVE);
    eval 'sub R_SH_GOTOFF () {166;}' unless defined(&R_SH_GOTOFF);
    eval 'sub R_SH_GOTPC () {167;}' unless defined(&R_SH_GOTPC);
    eval 'sub R_SH_NUM () {256;}' unless defined(&R_SH_NUM);
    eval 'sub EF_S390_HIGH_GPRS () {0x1;}' unless defined(&EF_S390_HIGH_GPRS);
    eval 'sub R_390_NONE () {0;}' unless defined(&R_390_NONE);
    eval 'sub R_390_8 () {1;}' unless defined(&R_390_8);
    eval 'sub R_390_12 () {2;}' unless defined(&R_390_12);
    eval 'sub R_390_16 () {3;}' unless defined(&R_390_16);
    eval 'sub R_390_32 () {4;}' unless defined(&R_390_32);
    eval 'sub R_390_PC32 () {5;}' unless defined(&R_390_PC32);
    eval 'sub R_390_GOT12 () {6;}' unless defined(&R_390_GOT12);
    eval 'sub R_390_GOT32 () {7;}' unless defined(&R_390_GOT32);
    eval 'sub R_390_PLT32 () {8;}' unless defined(&R_390_PLT32);
    eval 'sub R_390_COPY () {9;}' unless defined(&R_390_COPY);
    eval 'sub R_390_GLOB_DAT () {10;}' unless defined(&R_390_GLOB_DAT);
    eval 'sub R_390_JMP_SLOT () {11;}' unless defined(&R_390_JMP_SLOT);
    eval 'sub R_390_RELATIVE () {12;}' unless defined(&R_390_RELATIVE);
    eval 'sub R_390_GOTOFF32 () {13;}' unless defined(&R_390_GOTOFF32);
    eval 'sub R_390_GOTPC () {14;}' unless defined(&R_390_GOTPC);
    eval 'sub R_390_GOT16 () {15;}' unless defined(&R_390_GOT16);
    eval 'sub R_390_PC16 () {16;}' unless defined(&R_390_PC16);
    eval 'sub R_390_PC16DBL () {17;}' unless defined(&R_390_PC16DBL);
    eval 'sub R_390_PLT16DBL () {18;}' unless defined(&R_390_PLT16DBL);
    eval 'sub R_390_PC32DBL () {19;}' unless defined(&R_390_PC32DBL);
    eval 'sub R_390_PLT32DBL () {20;}' unless defined(&R_390_PLT32DBL);
    eval 'sub R_390_GOTPCDBL () {21;}' unless defined(&R_390_GOTPCDBL);
    eval 'sub R_390_64 () {22;}' unless defined(&R_390_64);
    eval 'sub R_390_PC64 () {23;}' unless defined(&R_390_PC64);
    eval 'sub R_390_GOT64 () {24;}' unless defined(&R_390_GOT64);
    eval 'sub R_390_PLT64 () {25;}' unless defined(&R_390_PLT64);
    eval 'sub R_390_GOTENT () {26;}' unless defined(&R_390_GOTENT);
    eval 'sub R_390_GOTOFF16 () {27;}' unless defined(&R_390_GOTOFF16);
    eval 'sub R_390_GOTOFF64 () {28;}' unless defined(&R_390_GOTOFF64);
    eval 'sub R_390_GOTPLT12 () {29;}' unless defined(&R_390_GOTPLT12);
    eval 'sub R_390_GOTPLT16 () {30;}' unless defined(&R_390_GOTPLT16);
    eval 'sub R_390_GOTPLT32 () {31;}' unless defined(&R_390_GOTPLT32);
    eval 'sub R_390_GOTPLT64 () {32;}' unless defined(&R_390_GOTPLT64);
    eval 'sub R_390_GOTPLTENT () {33;}' unless defined(&R_390_GOTPLTENT);
    eval 'sub R_390_PLTOFF16 () {34;}' unless defined(&R_390_PLTOFF16);
    eval 'sub R_390_PLTOFF32 () {35;}' unless defined(&R_390_PLTOFF32);
    eval 'sub R_390_PLTOFF64 () {36;}' unless defined(&R_390_PLTOFF64);
    eval 'sub R_390_TLS_LOAD () {37;}' unless defined(&R_390_TLS_LOAD);
    eval 'sub R_390_TLS_GDCALL () {38;}' unless defined(&R_390_TLS_GDCALL);
    eval 'sub R_390_TLS_LDCALL () {39;}' unless defined(&R_390_TLS_LDCALL);
    eval 'sub R_390_TLS_GD32 () {40;}' unless defined(&R_390_TLS_GD32);
    eval 'sub R_390_TLS_GD64 () {41;}' unless defined(&R_390_TLS_GD64);
    eval 'sub R_390_TLS_GOTIE12 () {42;}' unless defined(&R_390_TLS_GOTIE12);
    eval 'sub R_390_TLS_GOTIE32 () {43;}' unless defined(&R_390_TLS_GOTIE32);
    eval 'sub R_390_TLS_GOTIE64 () {44;}' unless defined(&R_390_TLS_GOTIE64);
    eval 'sub R_390_TLS_LDM32 () {45;}' unless defined(&R_390_TLS_LDM32);
    eval 'sub R_390_TLS_LDM64 () {46;}' unless defined(&R_390_TLS_LDM64);
    eval 'sub R_390_TLS_IE32 () {47;}' unless defined(&R_390_TLS_IE32);
    eval 'sub R_390_TLS_IE64 () {48;}' unless defined(&R_390_TLS_IE64);
    eval 'sub R_390_TLS_IEENT () {49;}' unless defined(&R_390_TLS_IEENT);
    eval 'sub R_390_TLS_LE32 () {50;}' unless defined(&R_390_TLS_LE32);
    eval 'sub R_390_TLS_LE64 () {51;}' unless defined(&R_390_TLS_LE64);
    eval 'sub R_390_TLS_LDO32 () {52;}' unless defined(&R_390_TLS_LDO32);
    eval 'sub R_390_TLS_LDO64 () {53;}' unless defined(&R_390_TLS_LDO64);
    eval 'sub R_390_TLS_DTPMOD () {54;}' unless defined(&R_390_TLS_DTPMOD);
    eval 'sub R_390_TLS_DTPOFF () {55;}' unless defined(&R_390_TLS_DTPOFF);
    eval 'sub R_390_TLS_TPOFF () {56;}' unless defined(&R_390_TLS_TPOFF);
    eval 'sub R_390_20 () {57;}' unless defined(&R_390_20);
    eval 'sub R_390_GOT20 () {58;}' unless defined(&R_390_GOT20);
    eval 'sub R_390_GOTPLT20 () {59;}' unless defined(&R_390_GOTPLT20);
    eval 'sub R_390_TLS_GOTIE20 () {60;}' unless defined(&R_390_TLS_GOTIE20);
    eval 'sub R_390_IRELATIVE () {61;}' unless defined(&R_390_IRELATIVE);
    eval 'sub R_390_NUM () {62;}' unless defined(&R_390_NUM);
    eval 'sub R_CRIS_NONE () {0;}' unless defined(&R_CRIS_NONE);
    eval 'sub R_CRIS_8 () {1;}' unless defined(&R_CRIS_8);
    eval 'sub R_CRIS_16 () {2;}' unless defined(&R_CRIS_16);
    eval 'sub R_CRIS_32 () {3;}' unless defined(&R_CRIS_32);
    eval 'sub R_CRIS_8_PCREL () {4;}' unless defined(&R_CRIS_8_PCREL);
    eval 'sub R_CRIS_16_PCREL () {5;}' unless defined(&R_CRIS_16_PCREL);
    eval 'sub R_CRIS_32_PCREL () {6;}' unless defined(&R_CRIS_32_PCREL);
    eval 'sub R_CRIS_GNU_VTINHERIT () {7;}' unless defined(&R_CRIS_GNU_VTINHERIT);
    eval 'sub R_CRIS_GNU_VTENTRY () {8;}' unless defined(&R_CRIS_GNU_VTENTRY);
    eval 'sub R_CRIS_COPY () {9;}' unless defined(&R_CRIS_COPY);
    eval 'sub R_CRIS_GLOB_DAT () {10;}' unless defined(&R_CRIS_GLOB_DAT);
    eval 'sub R_CRIS_JUMP_SLOT () {11;}' unless defined(&R_CRIS_JUMP_SLOT);
    eval 'sub R_CRIS_RELATIVE () {12;}' unless defined(&R_CRIS_RELATIVE);
    eval 'sub R_CRIS_16_GOT () {13;}' unless defined(&R_CRIS_16_GOT);
    eval 'sub R_CRIS_32_GOT () {14;}' unless defined(&R_CRIS_32_GOT);
    eval 'sub R_CRIS_16_GOTPLT () {15;}' unless defined(&R_CRIS_16_GOTPLT);
    eval 'sub R_CRIS_32_GOTPLT () {16;}' unless defined(&R_CRIS_32_GOTPLT);
    eval 'sub R_CRIS_32_GOTREL () {17;}' unless defined(&R_CRIS_32_GOTREL);
    eval 'sub R_CRIS_32_PLT_GOTREL () {18;}' unless defined(&R_CRIS_32_PLT_GOTREL);
    eval 'sub R_CRIS_32_PLT_PCREL () {19;}' unless defined(&R_CRIS_32_PLT_PCREL);
    eval 'sub R_CRIS_NUM () {20;}' unless defined(&R_CRIS_NUM);
    eval 'sub R_X86_64_NONE () {0;}' unless defined(&R_X86_64_NONE);
    eval 'sub R_X86_64_64 () {1;}' unless defined(&R_X86_64_64);
    eval 'sub R_X86_64_PC32 () {2;}' unless defined(&R_X86_64_PC32);
    eval 'sub R_X86_64_GOT32 () {3;}' unless defined(&R_X86_64_GOT32);
    eval 'sub R_X86_64_PLT32 () {4;}' unless defined(&R_X86_64_PLT32);
    eval 'sub R_X86_64_COPY () {5;}' unless defined(&R_X86_64_COPY);
    eval 'sub R_X86_64_GLOB_DAT () {6;}' unless defined(&R_X86_64_GLOB_DAT);
    eval 'sub R_X86_64_JUMP_SLOT () {7;}' unless defined(&R_X86_64_JUMP_SLOT);
    eval 'sub R_X86_64_RELATIVE () {8;}' unless defined(&R_X86_64_RELATIVE);
    eval 'sub R_X86_64_GOTPCREL () {9;}' unless defined(&R_X86_64_GOTPCREL);
    eval 'sub R_X86_64_32 () {10;}' unless defined(&R_X86_64_32);
    eval 'sub R_X86_64_32S () {11;}' unless defined(&R_X86_64_32S);
    eval 'sub R_X86_64_16 () {12;}' unless defined(&R_X86_64_16);
    eval 'sub R_X86_64_PC16 () {13;}' unless defined(&R_X86_64_PC16);
    eval 'sub R_X86_64_8 () {14;}' unless defined(&R_X86_64_8);
    eval 'sub R_X86_64_PC8 () {15;}' unless defined(&R_X86_64_PC8);
    eval 'sub R_X86_64_DTPMOD64 () {16;}' unless defined(&R_X86_64_DTPMOD64);
    eval 'sub R_X86_64_DTPOFF64 () {17;}' unless defined(&R_X86_64_DTPOFF64);
    eval 'sub R_X86_64_TPOFF64 () {18;}' unless defined(&R_X86_64_TPOFF64);
    eval 'sub R_X86_64_TLSGD () {19;}' unless defined(&R_X86_64_TLSGD);
    eval 'sub R_X86_64_TLSLD () {20;}' unless defined(&R_X86_64_TLSLD);
    eval 'sub R_X86_64_DTPOFF32 () {21;}' unless defined(&R_X86_64_DTPOFF32);
    eval 'sub R_X86_64_GOTTPOFF () {22;}' unless defined(&R_X86_64_GOTTPOFF);
    eval 'sub R_X86_64_TPOFF32 () {23;}' unless defined(&R_X86_64_TPOFF32);
    eval 'sub R_X86_64_PC64 () {24;}' unless defined(&R_X86_64_PC64);
    eval 'sub R_X86_64_GOTOFF64 () {25;}' unless defined(&R_X86_64_GOTOFF64);
    eval 'sub R_X86_64_GOTPC32 () {26;}' unless defined(&R_X86_64_GOTPC32);
    eval 'sub R_X86_64_GOT64 () {27;}' unless defined(&R_X86_64_GOT64);
    eval 'sub R_X86_64_GOTPCREL64 () {28;}' unless defined(&R_X86_64_GOTPCREL64);
    eval 'sub R_X86_64_GOTPC64 () {29;}' unless defined(&R_X86_64_GOTPC64);
    eval 'sub R_X86_64_GOTPLT64 () {30;}' unless defined(&R_X86_64_GOTPLT64);
    eval 'sub R_X86_64_PLTOFF64 () {31;}' unless defined(&R_X86_64_PLTOFF64);
    eval 'sub R_X86_64_SIZE32 () {32;}' unless defined(&R_X86_64_SIZE32);
    eval 'sub R_X86_64_SIZE64 () {33;}' unless defined(&R_X86_64_SIZE64);
    eval 'sub R_X86_64_GOTPC32_TLSDESC () {34;}' unless defined(&R_X86_64_GOTPC32_TLSDESC);
    eval 'sub R_X86_64_TLSDESC_CALL () {35;}' unless defined(&R_X86_64_TLSDESC_CALL);
    eval 'sub R_X86_64_TLSDESC () {36;}' unless defined(&R_X86_64_TLSDESC);
    eval 'sub R_X86_64_IRELATIVE () {37;}' unless defined(&R_X86_64_IRELATIVE);
    eval 'sub R_X86_64_RELATIVE64 () {38;}' unless defined(&R_X86_64_RELATIVE64);
    eval 'sub R_X86_64_GOTPCRELX () {41;}' unless defined(&R_X86_64_GOTPCRELX);
    eval 'sub R_X86_64_REX_GOTPCRELX () {42;}' unless defined(&R_X86_64_REX_GOTPCRELX);
    eval 'sub R_X86_64_NUM () {43;}' unless defined(&R_X86_64_NUM);
    eval 'sub SHT_X86_64_UNWIND () {0x70000001;}' unless defined(&SHT_X86_64_UNWIND);
    eval 'sub R_MN10300_NONE () {0;}' unless defined(&R_MN10300_NONE);
    eval 'sub R_MN10300_32 () {1;}' unless defined(&R_MN10300_32);
    eval 'sub R_MN10300_16 () {2;}' unless defined(&R_MN10300_16);
    eval 'sub R_MN10300_8 () {3;}' unless defined(&R_MN10300_8);
    eval 'sub R_MN10300_PCREL32 () {4;}' unless defined(&R_MN10300_PCREL32);
    eval 'sub R_MN10300_PCREL16 () {5;}' unless defined(&R_MN10300_PCREL16);
    eval 'sub R_MN10300_PCREL8 () {6;}' unless defined(&R_MN10300_PCREL8);
    eval 'sub R_MN10300_GNU_VTINHERIT () {7;}' unless defined(&R_MN10300_GNU_VTINHERIT);
    eval 'sub R_MN10300_GNU_VTENTRY () {8;}' unless defined(&R_MN10300_GNU_VTENTRY);
    eval 'sub R_MN10300_24 () {9;}' unless defined(&R_MN10300_24);
    eval 'sub R_MN10300_GOTPC32 () {10;}' unless defined(&R_MN10300_GOTPC32);
    eval 'sub R_MN10300_GOTPC16 () {11;}' unless defined(&R_MN10300_GOTPC16);
    eval 'sub R_MN10300_GOTOFF32 () {12;}' unless defined(&R_MN10300_GOTOFF32);
    eval 'sub R_MN10300_GOTOFF24 () {13;}' unless defined(&R_MN10300_GOTOFF24);
    eval 'sub R_MN10300_GOTOFF16 () {14;}' unless defined(&R_MN10300_GOTOFF16);
    eval 'sub R_MN10300_PLT32 () {15;}' unless defined(&R_MN10300_PLT32);
    eval 'sub R_MN10300_PLT16 () {16;}' unless defined(&R_MN10300_PLT16);
    eval 'sub R_MN10300_GOT32 () {17;}' unless defined(&R_MN10300_GOT32);
    eval 'sub R_MN10300_GOT24 () {18;}' unless defined(&R_MN10300_GOT24);
    eval 'sub R_MN10300_GOT16 () {19;}' unless defined(&R_MN10300_GOT16);
    eval 'sub R_MN10300_COPY () {20;}' unless defined(&R_MN10300_COPY);
    eval 'sub R_MN10300_GLOB_DAT () {21;}' unless defined(&R_MN10300_GLOB_DAT);
    eval 'sub R_MN10300_JMP_SLOT () {22;}' unless defined(&R_MN10300_JMP_SLOT);
    eval 'sub R_MN10300_RELATIVE () {23;}' unless defined(&R_MN10300_RELATIVE);
    eval 'sub R_MN10300_TLS_GD () {24;}' unless defined(&R_MN10300_TLS_GD);
    eval 'sub R_MN10300_TLS_LD () {25;}' unless defined(&R_MN10300_TLS_LD);
    eval 'sub R_MN10300_TLS_LDO () {26;}' unless defined(&R_MN10300_TLS_LDO);
    eval 'sub R_MN10300_TLS_GOTIE () {27;}' unless defined(&R_MN10300_TLS_GOTIE);
    eval 'sub R_MN10300_TLS_IE () {28;}' unless defined(&R_MN10300_TLS_IE);
    eval 'sub R_MN10300_TLS_LE () {29;}' unless defined(&R_MN10300_TLS_LE);
    eval 'sub R_MN10300_TLS_DTPMOD () {30;}' unless defined(&R_MN10300_TLS_DTPMOD);
    eval 'sub R_MN10300_TLS_DTPOFF () {31;}' unless defined(&R_MN10300_TLS_DTPOFF);
    eval 'sub R_MN10300_TLS_TPOFF () {32;}' unless defined(&R_MN10300_TLS_TPOFF);
    eval 'sub R_MN10300_SYM_DIFF () {33;}' unless defined(&R_MN10300_SYM_DIFF);
    eval 'sub R_MN10300_ALIGN () {34;}' unless defined(&R_MN10300_ALIGN);
    eval 'sub R_MN10300_NUM () {35;}' unless defined(&R_MN10300_NUM);
    eval 'sub R_M32R_NONE () {0;}' unless defined(&R_M32R_NONE);
    eval 'sub R_M32R_16 () {1;}' unless defined(&R_M32R_16);
    eval 'sub R_M32R_32 () {2;}' unless defined(&R_M32R_32);
    eval 'sub R_M32R_24 () {3;}' unless defined(&R_M32R_24);
    eval 'sub R_M32R_10_PCREL () {4;}' unless defined(&R_M32R_10_PCREL);
    eval 'sub R_M32R_18_PCREL () {5;}' unless defined(&R_M32R_18_PCREL);
    eval 'sub R_M32R_26_PCREL () {6;}' unless defined(&R_M32R_26_PCREL);
    eval 'sub R_M32R_HI16_ULO () {7;}' unless defined(&R_M32R_HI16_ULO);
    eval 'sub R_M32R_HI16_SLO () {8;}' unless defined(&R_M32R_HI16_SLO);
    eval 'sub R_M32R_LO16 () {9;}' unless defined(&R_M32R_LO16);
    eval 'sub R_M32R_SDA16 () {10;}' unless defined(&R_M32R_SDA16);
    eval 'sub R_M32R_GNU_VTINHERIT () {11;}' unless defined(&R_M32R_GNU_VTINHERIT);
    eval 'sub R_M32R_GNU_VTENTRY () {12;}' unless defined(&R_M32R_GNU_VTENTRY);
    eval 'sub R_M32R_16_RELA () {33;}' unless defined(&R_M32R_16_RELA);
    eval 'sub R_M32R_32_RELA () {34;}' unless defined(&R_M32R_32_RELA);
    eval 'sub R_M32R_24_RELA () {35;}' unless defined(&R_M32R_24_RELA);
    eval 'sub R_M32R_10_PCREL_RELA () {36;}' unless defined(&R_M32R_10_PCREL_RELA);
    eval 'sub R_M32R_18_PCREL_RELA () {37;}' unless defined(&R_M32R_18_PCREL_RELA);
    eval 'sub R_M32R_26_PCREL_RELA () {38;}' unless defined(&R_M32R_26_PCREL_RELA);
    eval 'sub R_M32R_HI16_ULO_RELA () {39;}' unless defined(&R_M32R_HI16_ULO_RELA);
    eval 'sub R_M32R_HI16_SLO_RELA () {40;}' unless defined(&R_M32R_HI16_SLO_RELA);
    eval 'sub R_M32R_LO16_RELA () {41;}' unless defined(&R_M32R_LO16_RELA);
    eval 'sub R_M32R_SDA16_RELA () {42;}' unless defined(&R_M32R_SDA16_RELA);
    eval 'sub R_M32R_RELA_GNU_VTINHERIT () {43;}' unless defined(&R_M32R_RELA_GNU_VTINHERIT);
    eval 'sub R_M32R_RELA_GNU_VTENTRY () {44;}' unless defined(&R_M32R_RELA_GNU_VTENTRY);
    eval 'sub R_M32R_REL32 () {45;}' unless defined(&R_M32R_REL32);
    eval 'sub R_M32R_GOT24 () {48;}' unless defined(&R_M32R_GOT24);
    eval 'sub R_M32R_26_PLTREL () {49;}' unless defined(&R_M32R_26_PLTREL);
    eval 'sub R_M32R_COPY () {50;}' unless defined(&R_M32R_COPY);
    eval 'sub R_M32R_GLOB_DAT () {51;}' unless defined(&R_M32R_GLOB_DAT);
    eval 'sub R_M32R_JMP_SLOT () {52;}' unless defined(&R_M32R_JMP_SLOT);
    eval 'sub R_M32R_RELATIVE () {53;}' unless defined(&R_M32R_RELATIVE);
    eval 'sub R_M32R_GOTOFF () {54;}' unless defined(&R_M32R_GOTOFF);
    eval 'sub R_M32R_GOTPC24 () {55;}' unless defined(&R_M32R_GOTPC24);
    eval 'sub R_M32R_GOT16_HI_ULO () {56;}' unless defined(&R_M32R_GOT16_HI_ULO);
    eval 'sub R_M32R_GOT16_HI_SLO () {57;}' unless defined(&R_M32R_GOT16_HI_SLO);
    eval 'sub R_M32R_GOT16_LO () {58;}' unless defined(&R_M32R_GOT16_LO);
    eval 'sub R_M32R_GOTPC_HI_ULO () {59;}' unless defined(&R_M32R_GOTPC_HI_ULO);
    eval 'sub R_M32R_GOTPC_HI_SLO () {60;}' unless defined(&R_M32R_GOTPC_HI_SLO);
    eval 'sub R_M32R_GOTPC_LO () {61;}' unless defined(&R_M32R_GOTPC_LO);
    eval 'sub R_M32R_GOTOFF_HI_ULO () {62;}' unless defined(&R_M32R_GOTOFF_HI_ULO);
    eval 'sub R_M32R_GOTOFF_HI_SLO () {63;}' unless defined(&R_M32R_GOTOFF_HI_SLO);
    eval 'sub R_M32R_GOTOFF_LO () {64;}' unless defined(&R_M32R_GOTOFF_LO);
    eval 'sub R_M32R_NUM () {256;}' unless defined(&R_M32R_NUM);
    eval 'sub R_MICROBLAZE_NONE () {0;}' unless defined(&R_MICROBLAZE_NONE);
    eval 'sub R_MICROBLAZE_32 () {1;}' unless defined(&R_MICROBLAZE_32);
    eval 'sub R_MICROBLAZE_32_PCREL () {2;}' unless defined(&R_MICROBLAZE_32_PCREL);
    eval 'sub R_MICROBLAZE_64_PCREL () {3;}' unless defined(&R_MICROBLAZE_64_PCREL);
    eval 'sub R_MICROBLAZE_32_PCREL_LO () {4;}' unless defined(&R_MICROBLAZE_32_PCREL_LO);
    eval 'sub R_MICROBLAZE_64 () {5;}' unless defined(&R_MICROBLAZE_64);
    eval 'sub R_MICROBLAZE_32_LO () {6;}' unless defined(&R_MICROBLAZE_32_LO);
    eval 'sub R_MICROBLAZE_SRO32 () {7;}' unless defined(&R_MICROBLAZE_SRO32);
    eval 'sub R_MICROBLAZE_SRW32 () {8;}' unless defined(&R_MICROBLAZE_SRW32);
    eval 'sub R_MICROBLAZE_64_NONE () {9;}' unless defined(&R_MICROBLAZE_64_NONE);
    eval 'sub R_MICROBLAZE_32_SYM_OP_SYM () {10;}' unless defined(&R_MICROBLAZE_32_SYM_OP_SYM);
    eval 'sub R_MICROBLAZE_GNU_VTINHERIT () {11;}' unless defined(&R_MICROBLAZE_GNU_VTINHERIT);
    eval 'sub R_MICROBLAZE_GNU_VTENTRY () {12;}' unless defined(&R_MICROBLAZE_GNU_VTENTRY);
    eval 'sub R_MICROBLAZE_GOTPC_64 () {13;}' unless defined(&R_MICROBLAZE_GOTPC_64);
    eval 'sub R_MICROBLAZE_GOT_64 () {14;}' unless defined(&R_MICROBLAZE_GOT_64);
    eval 'sub R_MICROBLAZE_PLT_64 () {15;}' unless defined(&R_MICROBLAZE_PLT_64);
    eval 'sub R_MICROBLAZE_REL () {16;}' unless defined(&R_MICROBLAZE_REL);
    eval 'sub R_MICROBLAZE_JUMP_SLOT () {17;}' unless defined(&R_MICROBLAZE_JUMP_SLOT);
    eval 'sub R_MICROBLAZE_GLOB_DAT () {18;}' unless defined(&R_MICROBLAZE_GLOB_DAT);
    eval 'sub R_MICROBLAZE_GOTOFF_64 () {19;}' unless defined(&R_MICROBLAZE_GOTOFF_64);
    eval 'sub R_MICROBLAZE_GOTOFF_32 () {20;}' unless defined(&R_MICROBLAZE_GOTOFF_32);
    eval 'sub R_MICROBLAZE_COPY () {21;}' unless defined(&R_MICROBLAZE_COPY);
    eval 'sub R_MICROBLAZE_TLS () {22;}' unless defined(&R_MICROBLAZE_TLS);
    eval 'sub R_MICROBLAZE_TLSGD () {23;}' unless defined(&R_MICROBLAZE_TLSGD);
    eval 'sub R_MICROBLAZE_TLSLD () {24;}' unless defined(&R_MICROBLAZE_TLSLD);
    eval 'sub R_MICROBLAZE_TLSDTPMOD32 () {25;}' unless defined(&R_MICROBLAZE_TLSDTPMOD32);
    eval 'sub R_MICROBLAZE_TLSDTPREL32 () {26;}' unless defined(&R_MICROBLAZE_TLSDTPREL32);
    eval 'sub R_MICROBLAZE_TLSDTPREL64 () {27;}' unless defined(&R_MICROBLAZE_TLSDTPREL64);
    eval 'sub R_MICROBLAZE_TLSGOTTPREL32 () {28;}' unless defined(&R_MICROBLAZE_TLSGOTTPREL32);
    eval 'sub R_MICROBLAZE_TLSTPREL32 () {29;}' unless defined(&R_MICROBLAZE_TLSTPREL32);
    eval 'sub DT_NIOS2_GP () {0x70000002;}' unless defined(&DT_NIOS2_GP);
    eval 'sub R_NIOS2_NONE () {0;}' unless defined(&R_NIOS2_NONE);
    eval 'sub R_NIOS2_S16 () {1;}' unless defined(&R_NIOS2_S16);
    eval 'sub R_NIOS2_U16 () {2;}' unless defined(&R_NIOS2_U16);
    eval 'sub R_NIOS2_PCREL16 () {3;}' unless defined(&R_NIOS2_PCREL16);
    eval 'sub R_NIOS2_CALL26 () {4;}' unless defined(&R_NIOS2_CALL26);
    eval 'sub R_NIOS2_IMM5 () {5;}' unless defined(&R_NIOS2_IMM5);
    eval 'sub R_NIOS2_CACHE_OPX () {6;}' unless defined(&R_NIOS2_CACHE_OPX);
    eval 'sub R_NIOS2_IMM6 () {7;}' unless defined(&R_NIOS2_IMM6);
    eval 'sub R_NIOS2_IMM8 () {8;}' unless defined(&R_NIOS2_IMM8);
    eval 'sub R_NIOS2_HI16 () {9;}' unless defined(&R_NIOS2_HI16);
    eval 'sub R_NIOS2_LO16 () {10;}' unless defined(&R_NIOS2_LO16);
    eval 'sub R_NIOS2_HIADJ16 () {11;}' unless defined(&R_NIOS2_HIADJ16);
    eval 'sub R_NIOS2_BFD_RELOC_32 () {12;}' unless defined(&R_NIOS2_BFD_RELOC_32);
    eval 'sub R_NIOS2_BFD_RELOC_16 () {13;}' unless defined(&R_NIOS2_BFD_RELOC_16);
    eval 'sub R_NIOS2_BFD_RELOC_8 () {14;}' unless defined(&R_NIOS2_BFD_RELOC_8);
    eval 'sub R_NIOS2_GPREL () {15;}' unless defined(&R_NIOS2_GPREL);
    eval 'sub R_NIOS2_GNU_VTINHERIT () {16;}' unless defined(&R_NIOS2_GNU_VTINHERIT);
    eval 'sub R_NIOS2_GNU_VTENTRY () {17;}' unless defined(&R_NIOS2_GNU_VTENTRY);
    eval 'sub R_NIOS2_UJMP () {18;}' unless defined(&R_NIOS2_UJMP);
    eval 'sub R_NIOS2_CJMP () {19;}' unless defined(&R_NIOS2_CJMP);
    eval 'sub R_NIOS2_CALLR () {20;}' unless defined(&R_NIOS2_CALLR);
    eval 'sub R_NIOS2_ALIGN () {21;}' unless defined(&R_NIOS2_ALIGN);
    eval 'sub R_NIOS2_GOT16 () {22;}' unless defined(&R_NIOS2_GOT16);
    eval 'sub R_NIOS2_CALL16 () {23;}' unless defined(&R_NIOS2_CALL16);
    eval 'sub R_NIOS2_GOTOFF_LO () {24;}' unless defined(&R_NIOS2_GOTOFF_LO);
    eval 'sub R_NIOS2_GOTOFF_HA () {25;}' unless defined(&R_NIOS2_GOTOFF_HA);
    eval 'sub R_NIOS2_PCREL_LO () {26;}' unless defined(&R_NIOS2_PCREL_LO);
    eval 'sub R_NIOS2_PCREL_HA () {27;}' unless defined(&R_NIOS2_PCREL_HA);
    eval 'sub R_NIOS2_TLS_GD16 () {28;}' unless defined(&R_NIOS2_TLS_GD16);
    eval 'sub R_NIOS2_TLS_LDM16 () {29;}' unless defined(&R_NIOS2_TLS_LDM16);
    eval 'sub R_NIOS2_TLS_LDO16 () {30;}' unless defined(&R_NIOS2_TLS_LDO16);
    eval 'sub R_NIOS2_TLS_IE16 () {31;}' unless defined(&R_NIOS2_TLS_IE16);
    eval 'sub R_NIOS2_TLS_LE16 () {32;}' unless defined(&R_NIOS2_TLS_LE16);
    eval 'sub R_NIOS2_TLS_DTPMOD () {33;}' unless defined(&R_NIOS2_TLS_DTPMOD);
    eval 'sub R_NIOS2_TLS_DTPREL () {34;}' unless defined(&R_NIOS2_TLS_DTPREL);
    eval 'sub R_NIOS2_TLS_TPREL () {35;}' unless defined(&R_NIOS2_TLS_TPREL);
    eval 'sub R_NIOS2_COPY () {36;}' unless defined(&R_NIOS2_COPY);
    eval 'sub R_NIOS2_GLOB_DAT () {37;}' unless defined(&R_NIOS2_GLOB_DAT);
    eval 'sub R_NIOS2_JUMP_SLOT () {38;}' unless defined(&R_NIOS2_JUMP_SLOT);
    eval 'sub R_NIOS2_RELATIVE () {39;}' unless defined(&R_NIOS2_RELATIVE);
    eval 'sub R_NIOS2_GOTOFF () {40;}' unless defined(&R_NIOS2_GOTOFF);
    eval 'sub R_NIOS2_CALL26_NOAT () {41;}' unless defined(&R_NIOS2_CALL26_NOAT);
    eval 'sub R_NIOS2_GOT_LO () {42;}' unless defined(&R_NIOS2_GOT_LO);
    eval 'sub R_NIOS2_GOT_HA () {43;}' unless defined(&R_NIOS2_GOT_HA);
    eval 'sub R_NIOS2_CALL_LO () {44;}' unless defined(&R_NIOS2_CALL_LO);
    eval 'sub R_NIOS2_CALL_HA () {45;}' unless defined(&R_NIOS2_CALL_HA);
    eval 'sub R_TILEPRO_NONE () {0;}' unless defined(&R_TILEPRO_NONE);
    eval 'sub R_TILEPRO_32 () {1;}' unless defined(&R_TILEPRO_32);
    eval 'sub R_TILEPRO_16 () {2;}' unless defined(&R_TILEPRO_16);
    eval 'sub R_TILEPRO_8 () {3;}' unless defined(&R_TILEPRO_8);
    eval 'sub R_TILEPRO_32_PCREL () {4;}' unless defined(&R_TILEPRO_32_PCREL);
    eval 'sub R_TILEPRO_16_PCREL () {5;}' unless defined(&R_TILEPRO_16_PCREL);
    eval 'sub R_TILEPRO_8_PCREL () {6;}' unless defined(&R_TILEPRO_8_PCREL);
    eval 'sub R_TILEPRO_LO16 () {7;}' unless defined(&R_TILEPRO_LO16);
    eval 'sub R_TILEPRO_HI16 () {8;}' unless defined(&R_TILEPRO_HI16);
    eval 'sub R_TILEPRO_HA16 () {9;}' unless defined(&R_TILEPRO_HA16);
    eval 'sub R_TILEPRO_COPY () {10;}' unless defined(&R_TILEPRO_COPY);
    eval 'sub R_TILEPRO_GLOB_DAT () {11;}' unless defined(&R_TILEPRO_GLOB_DAT);
    eval 'sub R_TILEPRO_JMP_SLOT () {12;}' unless defined(&R_TILEPRO_JMP_SLOT);
    eval 'sub R_TILEPRO_RELATIVE () {13;}' unless defined(&R_TILEPRO_RELATIVE);
    eval 'sub R_TILEPRO_BROFF_X1 () {14;}' unless defined(&R_TILEPRO_BROFF_X1);
    eval 'sub R_TILEPRO_JOFFLONG_X1 () {15;}' unless defined(&R_TILEPRO_JOFFLONG_X1);
    eval 'sub R_TILEPRO_JOFFLONG_X1_PLT () {16;}' unless defined(&R_TILEPRO_JOFFLONG_X1_PLT);
    eval 'sub R_TILEPRO_IMM8_X0 () {17;}' unless defined(&R_TILEPRO_IMM8_X0);
    eval 'sub R_TILEPRO_IMM8_Y0 () {18;}' unless defined(&R_TILEPRO_IMM8_Y0);
    eval 'sub R_TILEPRO_IMM8_X1 () {19;}' unless defined(&R_TILEPRO_IMM8_X1);
    eval 'sub R_TILEPRO_IMM8_Y1 () {20;}' unless defined(&R_TILEPRO_IMM8_Y1);
    eval 'sub R_TILEPRO_MT_IMM15_X1 () {21;}' unless defined(&R_TILEPRO_MT_IMM15_X1);
    eval 'sub R_TILEPRO_MF_IMM15_X1 () {22;}' unless defined(&R_TILEPRO_MF_IMM15_X1);
    eval 'sub R_TILEPRO_IMM16_X0 () {23;}' unless defined(&R_TILEPRO_IMM16_X0);
    eval 'sub R_TILEPRO_IMM16_X1 () {24;}' unless defined(&R_TILEPRO_IMM16_X1);
    eval 'sub R_TILEPRO_IMM16_X0_LO () {25;}' unless defined(&R_TILEPRO_IMM16_X0_LO);
    eval 'sub R_TILEPRO_IMM16_X1_LO () {26;}' unless defined(&R_TILEPRO_IMM16_X1_LO);
    eval 'sub R_TILEPRO_IMM16_X0_HI () {27;}' unless defined(&R_TILEPRO_IMM16_X0_HI);
    eval 'sub R_TILEPRO_IMM16_X1_HI () {28;}' unless defined(&R_TILEPRO_IMM16_X1_HI);
    eval 'sub R_TILEPRO_IMM16_X0_HA () {29;}' unless defined(&R_TILEPRO_IMM16_X0_HA);
    eval 'sub R_TILEPRO_IMM16_X1_HA () {30;}' unless defined(&R_TILEPRO_IMM16_X1_HA);
    eval 'sub R_TILEPRO_IMM16_X0_PCREL () {31;}' unless defined(&R_TILEPRO_IMM16_X0_PCREL);
    eval 'sub R_TILEPRO_IMM16_X1_PCREL () {32;}' unless defined(&R_TILEPRO_IMM16_X1_PCREL);
    eval 'sub R_TILEPRO_IMM16_X0_LO_PCREL () {33;}' unless defined(&R_TILEPRO_IMM16_X0_LO_PCREL);
    eval 'sub R_TILEPRO_IMM16_X1_LO_PCREL () {34;}' unless defined(&R_TILEPRO_IMM16_X1_LO_PCREL);
    eval 'sub R_TILEPRO_IMM16_X0_HI_PCREL () {35;}' unless defined(&R_TILEPRO_IMM16_X0_HI_PCREL);
    eval 'sub R_TILEPRO_IMM16_X1_HI_PCREL () {36;}' unless defined(&R_TILEPRO_IMM16_X1_HI_PCREL);
    eval 'sub R_TILEPRO_IMM16_X0_HA_PCREL () {37;}' unless defined(&R_TILEPRO_IMM16_X0_HA_PCREL);
    eval 'sub R_TILEPRO_IMM16_X1_HA_PCREL () {38;}' unless defined(&R_TILEPRO_IMM16_X1_HA_PCREL);
    eval 'sub R_TILEPRO_IMM16_X0_GOT () {39;}' unless defined(&R_TILEPRO_IMM16_X0_GOT);
    eval 'sub R_TILEPRO_IMM16_X1_GOT () {40;}' unless defined(&R_TILEPRO_IMM16_X1_GOT);
    eval 'sub R_TILEPRO_IMM16_X0_GOT_LO () {41;}' unless defined(&R_TILEPRO_IMM16_X0_GOT_LO);
    eval 'sub R_TILEPRO_IMM16_X1_GOT_LO () {42;}' unless defined(&R_TILEPRO_IMM16_X1_GOT_LO);
    eval 'sub R_TILEPRO_IMM16_X0_GOT_HI () {43;}' unless defined(&R_TILEPRO_IMM16_X0_GOT_HI);
    eval 'sub R_TILEPRO_IMM16_X1_GOT_HI () {44;}' unless defined(&R_TILEPRO_IMM16_X1_GOT_HI);
    eval 'sub R_TILEPRO_IMM16_X0_GOT_HA () {45;}' unless defined(&R_TILEPRO_IMM16_X0_GOT_HA);
    eval 'sub R_TILEPRO_IMM16_X1_GOT_HA () {46;}' unless defined(&R_TILEPRO_IMM16_X1_GOT_HA);
    eval 'sub R_TILEPRO_MMSTART_X0 () {47;}' unless defined(&R_TILEPRO_MMSTART_X0);
    eval 'sub R_TILEPRO_MMEND_X0 () {48;}' unless defined(&R_TILEPRO_MMEND_X0);
    eval 'sub R_TILEPRO_MMSTART_X1 () {49;}' unless defined(&R_TILEPRO_MMSTART_X1);
    eval 'sub R_TILEPRO_MMEND_X1 () {50;}' unless defined(&R_TILEPRO_MMEND_X1);
    eval 'sub R_TILEPRO_SHAMT_X0 () {51;}' unless defined(&R_TILEPRO_SHAMT_X0);
    eval 'sub R_TILEPRO_SHAMT_X1 () {52;}' unless defined(&R_TILEPRO_SHAMT_X1);
    eval 'sub R_TILEPRO_SHAMT_Y0 () {53;}' unless defined(&R_TILEPRO_SHAMT_Y0);
    eval 'sub R_TILEPRO_SHAMT_Y1 () {54;}' unless defined(&R_TILEPRO_SHAMT_Y1);
    eval 'sub R_TILEPRO_DEST_IMM8_X1 () {55;}' unless defined(&R_TILEPRO_DEST_IMM8_X1);
    eval 'sub R_TILEPRO_TLS_GD_CALL () {60;}' unless defined(&R_TILEPRO_TLS_GD_CALL);
    eval 'sub R_TILEPRO_IMM8_X0_TLS_GD_ADD () {61;}' unless defined(&R_TILEPRO_IMM8_X0_TLS_GD_ADD);
    eval 'sub R_TILEPRO_IMM8_X1_TLS_GD_ADD () {62;}' unless defined(&R_TILEPRO_IMM8_X1_TLS_GD_ADD);
    eval 'sub R_TILEPRO_IMM8_Y0_TLS_GD_ADD () {63;}' unless defined(&R_TILEPRO_IMM8_Y0_TLS_GD_ADD);
    eval 'sub R_TILEPRO_IMM8_Y1_TLS_GD_ADD () {64;}' unless defined(&R_TILEPRO_IMM8_Y1_TLS_GD_ADD);
    eval 'sub R_TILEPRO_TLS_IE_LOAD () {65;}' unless defined(&R_TILEPRO_TLS_IE_LOAD);
    eval 'sub R_TILEPRO_IMM16_X0_TLS_GD () {66;}' unless defined(&R_TILEPRO_IMM16_X0_TLS_GD);
    eval 'sub R_TILEPRO_IMM16_X1_TLS_GD () {67;}' unless defined(&R_TILEPRO_IMM16_X1_TLS_GD);
    eval 'sub R_TILEPRO_IMM16_X0_TLS_GD_LO () {68;}' unless defined(&R_TILEPRO_IMM16_X0_TLS_GD_LO);
    eval 'sub R_TILEPRO_IMM16_X1_TLS_GD_LO () {69;}' unless defined(&R_TILEPRO_IMM16_X1_TLS_GD_LO);
    eval 'sub R_TILEPRO_IMM16_X0_TLS_GD_HI () {70;}' unless defined(&R_TILEPRO_IMM16_X0_TLS_GD_HI);
    eval 'sub R_TILEPRO_IMM16_X1_TLS_GD_HI () {71;}' unless defined(&R_TILEPRO_IMM16_X1_TLS_GD_HI);
    eval 'sub R_TILEPRO_IMM16_X0_TLS_GD_HA () {72;}' unless defined(&R_TILEPRO_IMM16_X0_TLS_GD_HA);
    eval 'sub R_TILEPRO_IMM16_X1_TLS_GD_HA () {73;}' unless defined(&R_TILEPRO_IMM16_X1_TLS_GD_HA);
    eval 'sub R_TILEPRO_IMM16_X0_TLS_IE () {74;}' unless defined(&R_TILEPRO_IMM16_X0_TLS_IE);
    eval 'sub R_TILEPRO_IMM16_X1_TLS_IE () {75;}' unless defined(&R_TILEPRO_IMM16_X1_TLS_IE);
    eval 'sub R_TILEPRO_IMM16_X0_TLS_IE_LO () {76;}' unless defined(&R_TILEPRO_IMM16_X0_TLS_IE_LO);
    eval 'sub R_TILEPRO_IMM16_X1_TLS_IE_LO () {77;}' unless defined(&R_TILEPRO_IMM16_X1_TLS_IE_LO);
    eval 'sub R_TILEPRO_IMM16_X0_TLS_IE_HI () {78;}' unless defined(&R_TILEPRO_IMM16_X0_TLS_IE_HI);
    eval 'sub R_TILEPRO_IMM16_X1_TLS_IE_HI () {79;}' unless defined(&R_TILEPRO_IMM16_X1_TLS_IE_HI);
    eval 'sub R_TILEPRO_IMM16_X0_TLS_IE_HA () {80;}' unless defined(&R_TILEPRO_IMM16_X0_TLS_IE_HA);
    eval 'sub R_TILEPRO_IMM16_X1_TLS_IE_HA () {81;}' unless defined(&R_TILEPRO_IMM16_X1_TLS_IE_HA);
    eval 'sub R_TILEPRO_TLS_DTPMOD32 () {82;}' unless defined(&R_TILEPRO_TLS_DTPMOD32);
    eval 'sub R_TILEPRO_TLS_DTPOFF32 () {83;}' unless defined(&R_TILEPRO_TLS_DTPOFF32);
    eval 'sub R_TILEPRO_TLS_TPOFF32 () {84;}' unless defined(&R_TILEPRO_TLS_TPOFF32);
    eval 'sub R_TILEPRO_IMM16_X0_TLS_LE () {85;}' unless defined(&R_TILEPRO_IMM16_X0_TLS_LE);
    eval 'sub R_TILEPRO_IMM16_X1_TLS_LE () {86;}' unless defined(&R_TILEPRO_IMM16_X1_TLS_LE);
    eval 'sub R_TILEPRO_IMM16_X0_TLS_LE_LO () {87;}' unless defined(&R_TILEPRO_IMM16_X0_TLS_LE_LO);
    eval 'sub R_TILEPRO_IMM16_X1_TLS_LE_LO () {88;}' unless defined(&R_TILEPRO_IMM16_X1_TLS_LE_LO);
    eval 'sub R_TILEPRO_IMM16_X0_TLS_LE_HI () {89;}' unless defined(&R_TILEPRO_IMM16_X0_TLS_LE_HI);
    eval 'sub R_TILEPRO_IMM16_X1_TLS_LE_HI () {90;}' unless defined(&R_TILEPRO_IMM16_X1_TLS_LE_HI);
    eval 'sub R_TILEPRO_IMM16_X0_TLS_LE_HA () {91;}' unless defined(&R_TILEPRO_IMM16_X0_TLS_LE_HA);
    eval 'sub R_TILEPRO_IMM16_X1_TLS_LE_HA () {92;}' unless defined(&R_TILEPRO_IMM16_X1_TLS_LE_HA);
    eval 'sub R_TILEPRO_GNU_VTINHERIT () {128;}' unless defined(&R_TILEPRO_GNU_VTINHERIT);
    eval 'sub R_TILEPRO_GNU_VTENTRY () {129;}' unless defined(&R_TILEPRO_GNU_VTENTRY);
    eval 'sub R_TILEPRO_NUM () {130;}' unless defined(&R_TILEPRO_NUM);
    eval 'sub R_TILEGX_NONE () {0;}' unless defined(&R_TILEGX_NONE);
    eval 'sub R_TILEGX_64 () {1;}' unless defined(&R_TILEGX_64);
    eval 'sub R_TILEGX_32 () {2;}' unless defined(&R_TILEGX_32);
    eval 'sub R_TILEGX_16 () {3;}' unless defined(&R_TILEGX_16);
    eval 'sub R_TILEGX_8 () {4;}' unless defined(&R_TILEGX_8);
    eval 'sub R_TILEGX_64_PCREL () {5;}' unless defined(&R_TILEGX_64_PCREL);
    eval 'sub R_TILEGX_32_PCREL () {6;}' unless defined(&R_TILEGX_32_PCREL);
    eval 'sub R_TILEGX_16_PCREL () {7;}' unless defined(&R_TILEGX_16_PCREL);
    eval 'sub R_TILEGX_8_PCREL () {8;}' unless defined(&R_TILEGX_8_PCREL);
    eval 'sub R_TILEGX_HW0 () {9;}' unless defined(&R_TILEGX_HW0);
    eval 'sub R_TILEGX_HW1 () {10;}' unless defined(&R_TILEGX_HW1);
    eval 'sub R_TILEGX_HW2 () {11;}' unless defined(&R_TILEGX_HW2);
    eval 'sub R_TILEGX_HW3 () {12;}' unless defined(&R_TILEGX_HW3);
    eval 'sub R_TILEGX_HW0_LAST () {13;}' unless defined(&R_TILEGX_HW0_LAST);
    eval 'sub R_TILEGX_HW1_LAST () {14;}' unless defined(&R_TILEGX_HW1_LAST);
    eval 'sub R_TILEGX_HW2_LAST () {15;}' unless defined(&R_TILEGX_HW2_LAST);
    eval 'sub R_TILEGX_COPY () {16;}' unless defined(&R_TILEGX_COPY);
    eval 'sub R_TILEGX_GLOB_DAT () {17;}' unless defined(&R_TILEGX_GLOB_DAT);
    eval 'sub R_TILEGX_JMP_SLOT () {18;}' unless defined(&R_TILEGX_JMP_SLOT);
    eval 'sub R_TILEGX_RELATIVE () {19;}' unless defined(&R_TILEGX_RELATIVE);
    eval 'sub R_TILEGX_BROFF_X1 () {20;}' unless defined(&R_TILEGX_BROFF_X1);
    eval 'sub R_TILEGX_JUMPOFF_X1 () {21;}' unless defined(&R_TILEGX_JUMPOFF_X1);
    eval 'sub R_TILEGX_JUMPOFF_X1_PLT () {22;}' unless defined(&R_TILEGX_JUMPOFF_X1_PLT);
    eval 'sub R_TILEGX_IMM8_X0 () {23;}' unless defined(&R_TILEGX_IMM8_X0);
    eval 'sub R_TILEGX_IMM8_Y0 () {24;}' unless defined(&R_TILEGX_IMM8_Y0);
    eval 'sub R_TILEGX_IMM8_X1 () {25;}' unless defined(&R_TILEGX_IMM8_X1);
    eval 'sub R_TILEGX_IMM8_Y1 () {26;}' unless defined(&R_TILEGX_IMM8_Y1);
    eval 'sub R_TILEGX_DEST_IMM8_X1 () {27;}' unless defined(&R_TILEGX_DEST_IMM8_X1);
    eval 'sub R_TILEGX_MT_IMM14_X1 () {28;}' unless defined(&R_TILEGX_MT_IMM14_X1);
    eval 'sub R_TILEGX_MF_IMM14_X1 () {29;}' unless defined(&R_TILEGX_MF_IMM14_X1);
    eval 'sub R_TILEGX_MMSTART_X0 () {30;}' unless defined(&R_TILEGX_MMSTART_X0);
    eval 'sub R_TILEGX_MMEND_X0 () {31;}' unless defined(&R_TILEGX_MMEND_X0);
    eval 'sub R_TILEGX_SHAMT_X0 () {32;}' unless defined(&R_TILEGX_SHAMT_X0);
    eval 'sub R_TILEGX_SHAMT_X1 () {33;}' unless defined(&R_TILEGX_SHAMT_X1);
    eval 'sub R_TILEGX_SHAMT_Y0 () {34;}' unless defined(&R_TILEGX_SHAMT_Y0);
    eval 'sub R_TILEGX_SHAMT_Y1 () {35;}' unless defined(&R_TILEGX_SHAMT_Y1);
    eval 'sub R_TILEGX_IMM16_X0_HW0 () {36;}' unless defined(&R_TILEGX_IMM16_X0_HW0);
    eval 'sub R_TILEGX_IMM16_X1_HW0 () {37;}' unless defined(&R_TILEGX_IMM16_X1_HW0);
    eval 'sub R_TILEGX_IMM16_X0_HW1 () {38;}' unless defined(&R_TILEGX_IMM16_X0_HW1);
    eval 'sub R_TILEGX_IMM16_X1_HW1 () {39;}' unless defined(&R_TILEGX_IMM16_X1_HW1);
    eval 'sub R_TILEGX_IMM16_X0_HW2 () {40;}' unless defined(&R_TILEGX_IMM16_X0_HW2);
    eval 'sub R_TILEGX_IMM16_X1_HW2 () {41;}' unless defined(&R_TILEGX_IMM16_X1_HW2);
    eval 'sub R_TILEGX_IMM16_X0_HW3 () {42;}' unless defined(&R_TILEGX_IMM16_X0_HW3);
    eval 'sub R_TILEGX_IMM16_X1_HW3 () {43;}' unless defined(&R_TILEGX_IMM16_X1_HW3);
    eval 'sub R_TILEGX_IMM16_X0_HW0_LAST () {44;}' unless defined(&R_TILEGX_IMM16_X0_HW0_LAST);
    eval 'sub R_TILEGX_IMM16_X1_HW0_LAST () {45;}' unless defined(&R_TILEGX_IMM16_X1_HW0_LAST);
    eval 'sub R_TILEGX_IMM16_X0_HW1_LAST () {46;}' unless defined(&R_TILEGX_IMM16_X0_HW1_LAST);
    eval 'sub R_TILEGX_IMM16_X1_HW1_LAST () {47;}' unless defined(&R_TILEGX_IMM16_X1_HW1_LAST);
    eval 'sub R_TILEGX_IMM16_X0_HW2_LAST () {48;}' unless defined(&R_TILEGX_IMM16_X0_HW2_LAST);
    eval 'sub R_TILEGX_IMM16_X1_HW2_LAST () {49;}' unless defined(&R_TILEGX_IMM16_X1_HW2_LAST);
    eval 'sub R_TILEGX_IMM16_X0_HW0_PCREL () {50;}' unless defined(&R_TILEGX_IMM16_X0_HW0_PCREL);
    eval 'sub R_TILEGX_IMM16_X1_HW0_PCREL () {51;}' unless defined(&R_TILEGX_IMM16_X1_HW0_PCREL);
    eval 'sub R_TILEGX_IMM16_X0_HW1_PCREL () {52;}' unless defined(&R_TILEGX_IMM16_X0_HW1_PCREL);
    eval 'sub R_TILEGX_IMM16_X1_HW1_PCREL () {53;}' unless defined(&R_TILEGX_IMM16_X1_HW1_PCREL);
    eval 'sub R_TILEGX_IMM16_X0_HW2_PCREL () {54;}' unless defined(&R_TILEGX_IMM16_X0_HW2_PCREL);
    eval 'sub R_TILEGX_IMM16_X1_HW2_PCREL () {55;}' unless defined(&R_TILEGX_IMM16_X1_HW2_PCREL);
    eval 'sub R_TILEGX_IMM16_X0_HW3_PCREL () {56;}' unless defined(&R_TILEGX_IMM16_X0_HW3_PCREL);
    eval 'sub R_TILEGX_IMM16_X1_HW3_PCREL () {57;}' unless defined(&R_TILEGX_IMM16_X1_HW3_PCREL);
    eval 'sub R_TILEGX_IMM16_X0_HW0_LAST_PCREL () {58;}' unless defined(&R_TILEGX_IMM16_X0_HW0_LAST_PCREL);
    eval 'sub R_TILEGX_IMM16_X1_HW0_LAST_PCREL () {59;}' unless defined(&R_TILEGX_IMM16_X1_HW0_LAST_PCREL);
    eval 'sub R_TILEGX_IMM16_X0_HW1_LAST_PCREL () {60;}' unless defined(&R_TILEGX_IMM16_X0_HW1_LAST_PCREL);
    eval 'sub R_TILEGX_IMM16_X1_HW1_LAST_PCREL () {61;}' unless defined(&R_TILEGX_IMM16_X1_HW1_LAST_PCREL);
    eval 'sub R_TILEGX_IMM16_X0_HW2_LAST_PCREL () {62;}' unless defined(&R_TILEGX_IMM16_X0_HW2_LAST_PCREL);
    eval 'sub R_TILEGX_IMM16_X1_HW2_LAST_PCREL () {63;}' unless defined(&R_TILEGX_IMM16_X1_HW2_LAST_PCREL);
    eval 'sub R_TILEGX_IMM16_X0_HW0_GOT () {64;}' unless defined(&R_TILEGX_IMM16_X0_HW0_GOT);
    eval 'sub R_TILEGX_IMM16_X1_HW0_GOT () {65;}' unless defined(&R_TILEGX_IMM16_X1_HW0_GOT);
    eval 'sub R_TILEGX_IMM16_X0_HW0_PLT_PCREL () {66;}' unless defined(&R_TILEGX_IMM16_X0_HW0_PLT_PCREL);
    eval 'sub R_TILEGX_IMM16_X1_HW0_PLT_PCREL () {67;}' unless defined(&R_TILEGX_IMM16_X1_HW0_PLT_PCREL);
    eval 'sub R_TILEGX_IMM16_X0_HW1_PLT_PCREL () {68;}' unless defined(&R_TILEGX_IMM16_X0_HW1_PLT_PCREL);
    eval 'sub R_TILEGX_IMM16_X1_HW1_PLT_PCREL () {69;}' unless defined(&R_TILEGX_IMM16_X1_HW1_PLT_PCREL);
    eval 'sub R_TILEGX_IMM16_X0_HW2_PLT_PCREL () {70;}' unless defined(&R_TILEGX_IMM16_X0_HW2_PLT_PCREL);
    eval 'sub R_TILEGX_IMM16_X1_HW2_PLT_PCREL () {71;}' unless defined(&R_TILEGX_IMM16_X1_HW2_PLT_PCREL);
    eval 'sub R_TILEGX_IMM16_X0_HW0_LAST_GOT () {72;}' unless defined(&R_TILEGX_IMM16_X0_HW0_LAST_GOT);
    eval 'sub R_TILEGX_IMM16_X1_HW0_LAST_GOT () {73;}' unless defined(&R_TILEGX_IMM16_X1_HW0_LAST_GOT);
    eval 'sub R_TILEGX_IMM16_X0_HW1_LAST_GOT () {74;}' unless defined(&R_TILEGX_IMM16_X0_HW1_LAST_GOT);
    eval 'sub R_TILEGX_IMM16_X1_HW1_LAST_GOT () {75;}' unless defined(&R_TILEGX_IMM16_X1_HW1_LAST_GOT);
    eval 'sub R_TILEGX_IMM16_X0_HW3_PLT_PCREL () {76;}' unless defined(&R_TILEGX_IMM16_X0_HW3_PLT_PCREL);
    eval 'sub R_TILEGX_IMM16_X1_HW3_PLT_PCREL () {77;}' unless defined(&R_TILEGX_IMM16_X1_HW3_PLT_PCREL);
    eval 'sub R_TILEGX_IMM16_X0_HW0_TLS_GD () {78;}' unless defined(&R_TILEGX_IMM16_X0_HW0_TLS_GD);
    eval 'sub R_TILEGX_IMM16_X1_HW0_TLS_GD () {79;}' unless defined(&R_TILEGX_IMM16_X1_HW0_TLS_GD);
    eval 'sub R_TILEGX_IMM16_X0_HW0_TLS_LE () {80;}' unless defined(&R_TILEGX_IMM16_X0_HW0_TLS_LE);
    eval 'sub R_TILEGX_IMM16_X1_HW0_TLS_LE () {81;}' unless defined(&R_TILEGX_IMM16_X1_HW0_TLS_LE);
    eval 'sub R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE () {82;}' unless defined(&R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE);
    eval 'sub R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE () {83;}' unless defined(&R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE);
    eval 'sub R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE () {84;}' unless defined(&R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE);
    eval 'sub R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE () {85;}' unless defined(&R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE);
    eval 'sub R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD () {86;}' unless defined(&R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD);
    eval 'sub R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD () {87;}' unless defined(&R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD);
    eval 'sub R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD () {88;}' unless defined(&R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD);
    eval 'sub R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD () {89;}' unless defined(&R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD);
    eval 'sub R_TILEGX_IMM16_X0_HW0_TLS_IE () {92;}' unless defined(&R_TILEGX_IMM16_X0_HW0_TLS_IE);
    eval 'sub R_TILEGX_IMM16_X1_HW0_TLS_IE () {93;}' unless defined(&R_TILEGX_IMM16_X1_HW0_TLS_IE);
    eval 'sub R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL () {94;}' unless defined(&R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL);
    eval 'sub R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL () {95;}' unless defined(&R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL);
    eval 'sub R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL () {96;}' unless defined(&R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL);
    eval 'sub R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL () {97;}' unless defined(&R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL);
    eval 'sub R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL () {98;}' unless defined(&R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL);
    eval 'sub R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL () {99;}' unless defined(&R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL);
    eval 'sub R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE () {100;}' unless defined(&R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE);
    eval 'sub R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE () {101;}' unless defined(&R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE);
    eval 'sub R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE () {102;}' unless defined(&R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE);
    eval 'sub R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE () {103;}' unless defined(&R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE);
    eval 'sub R_TILEGX_TLS_DTPMOD64 () {106;}' unless defined(&R_TILEGX_TLS_DTPMOD64);
    eval 'sub R_TILEGX_TLS_DTPOFF64 () {107;}' unless defined(&R_TILEGX_TLS_DTPOFF64);
    eval 'sub R_TILEGX_TLS_TPOFF64 () {108;}' unless defined(&R_TILEGX_TLS_TPOFF64);
    eval 'sub R_TILEGX_TLS_DTPMOD32 () {109;}' unless defined(&R_TILEGX_TLS_DTPMOD32);
    eval 'sub R_TILEGX_TLS_DTPOFF32 () {110;}' unless defined(&R_TILEGX_TLS_DTPOFF32);
    eval 'sub R_TILEGX_TLS_TPOFF32 () {111;}' unless defined(&R_TILEGX_TLS_TPOFF32);
    eval 'sub R_TILEGX_TLS_GD_CALL () {112;}' unless defined(&R_TILEGX_TLS_GD_CALL);
    eval 'sub R_TILEGX_IMM8_X0_TLS_GD_ADD () {113;}' unless defined(&R_TILEGX_IMM8_X0_TLS_GD_ADD);
    eval 'sub R_TILEGX_IMM8_X1_TLS_GD_ADD () {114;}' unless defined(&R_TILEGX_IMM8_X1_TLS_GD_ADD);
    eval 'sub R_TILEGX_IMM8_Y0_TLS_GD_ADD () {115;}' unless defined(&R_TILEGX_IMM8_Y0_TLS_GD_ADD);
    eval 'sub R_TILEGX_IMM8_Y1_TLS_GD_ADD () {116;}' unless defined(&R_TILEGX_IMM8_Y1_TLS_GD_ADD);
    eval 'sub R_TILEGX_TLS_IE_LOAD () {117;}' unless defined(&R_TILEGX_TLS_IE_LOAD);
    eval 'sub R_TILEGX_IMM8_X0_TLS_ADD () {118;}' unless defined(&R_TILEGX_IMM8_X0_TLS_ADD);
    eval 'sub R_TILEGX_IMM8_X1_TLS_ADD () {119;}' unless defined(&R_TILEGX_IMM8_X1_TLS_ADD);
    eval 'sub R_TILEGX_IMM8_Y0_TLS_ADD () {120;}' unless defined(&R_TILEGX_IMM8_Y0_TLS_ADD);
    eval 'sub R_TILEGX_IMM8_Y1_TLS_ADD () {121;}' unless defined(&R_TILEGX_IMM8_Y1_TLS_ADD);
    eval 'sub R_TILEGX_GNU_VTINHERIT () {128;}' unless defined(&R_TILEGX_GNU_VTINHERIT);
    eval 'sub R_TILEGX_GNU_VTENTRY () {129;}' unless defined(&R_TILEGX_GNU_VTENTRY);
    eval 'sub R_TILEGX_NUM () {130;}' unless defined(&R_TILEGX_NUM);
    eval 'sub EF_RISCV_RVC () {0x1;}' unless defined(&EF_RISCV_RVC);
    eval 'sub EF_RISCV_FLOAT_ABI () {0x6;}' unless defined(&EF_RISCV_FLOAT_ABI);
    eval 'sub EF_RISCV_FLOAT_ABI_SOFT () {0x;}' unless defined(&EF_RISCV_FLOAT_ABI_SOFT);
    eval 'sub EF_RISCV_FLOAT_ABI_SINGLE () {0x2;}' unless defined(&EF_RISCV_FLOAT_ABI_SINGLE);
    eval 'sub EF_RISCV_FLOAT_ABI_DOUBLE () {0x4;}' unless defined(&EF_RISCV_FLOAT_ABI_DOUBLE);
    eval 'sub EF_RISCV_FLOAT_ABI_QUAD () {0x6;}' unless defined(&EF_RISCV_FLOAT_ABI_QUAD);
    eval 'sub R_RISCV_NONE () {0;}' unless defined(&R_RISCV_NONE);
    eval 'sub R_RISCV_32 () {1;}' unless defined(&R_RISCV_32);
    eval 'sub R_RISCV_64 () {2;}' unless defined(&R_RISCV_64);
    eval 'sub R_RISCV_RELATIVE () {3;}' unless defined(&R_RISCV_RELATIVE);
    eval 'sub R_RISCV_COPY () {4;}' unless defined(&R_RISCV_COPY);
    eval 'sub R_RISCV_JUMP_SLOT () {5;}' unless defined(&R_RISCV_JUMP_SLOT);
    eval 'sub R_RISCV_TLS_DTPMOD32 () {6;}' unless defined(&R_RISCV_TLS_DTPMOD32);
    eval 'sub R_RISCV_TLS_DTPMOD64 () {7;}' unless defined(&R_RISCV_TLS_DTPMOD64);
    eval 'sub R_RISCV_TLS_DTPREL32 () {8;}' unless defined(&R_RISCV_TLS_DTPREL32);
    eval 'sub R_RISCV_TLS_DTPREL64 () {9;}' unless defined(&R_RISCV_TLS_DTPREL64);
    eval 'sub R_RISCV_TLS_TPREL32 () {10;}' unless defined(&R_RISCV_TLS_TPREL32);
    eval 'sub R_RISCV_TLS_TPREL64 () {11;}' unless defined(&R_RISCV_TLS_TPREL64);
    eval 'sub R_RISCV_BRANCH () {16;}' unless defined(&R_RISCV_BRANCH);
    eval 'sub R_RISCV_JAL () {17;}' unless defined(&R_RISCV_JAL);
    eval 'sub R_RISCV_CALL () {18;}' unless defined(&R_RISCV_CALL);
    eval 'sub R_RISCV_CALL_PLT () {19;}' unless defined(&R_RISCV_CALL_PLT);
    eval 'sub R_RISCV_GOT_HI20 () {20;}' unless defined(&R_RISCV_GOT_HI20);
    eval 'sub R_RISCV_TLS_GOT_HI20 () {21;}' unless defined(&R_RISCV_TLS_GOT_HI20);
    eval 'sub R_RISCV_TLS_GD_HI20 () {22;}' unless defined(&R_RISCV_TLS_GD_HI20);
    eval 'sub R_RISCV_PCREL_HI20 () {23;}' unless defined(&R_RISCV_PCREL_HI20);
    eval 'sub R_RISCV_PCREL_LO12_I () {24;}' unless defined(&R_RISCV_PCREL_LO12_I);
    eval 'sub R_RISCV_PCREL_LO12_S () {25;}' unless defined(&R_RISCV_PCREL_LO12_S);
    eval 'sub R_RISCV_HI20 () {26;}' unless defined(&R_RISCV_HI20);
    eval 'sub R_RISCV_LO12_I () {27;}' unless defined(&R_RISCV_LO12_I);
    eval 'sub R_RISCV_LO12_S () {28;}' unless defined(&R_RISCV_LO12_S);
    eval 'sub R_RISCV_TPREL_HI20 () {29;}' unless defined(&R_RISCV_TPREL_HI20);
    eval 'sub R_RISCV_TPREL_LO12_I () {30;}' unless defined(&R_RISCV_TPREL_LO12_I);
    eval 'sub R_RISCV_TPREL_LO12_S () {31;}' unless defined(&R_RISCV_TPREL_LO12_S);
    eval 'sub R_RISCV_TPREL_ADD () {32;}' unless defined(&R_RISCV_TPREL_ADD);
    eval 'sub R_RISCV_ADD8 () {33;}' unless defined(&R_RISCV_ADD8);
    eval 'sub R_RISCV_ADD16 () {34;}' unless defined(&R_RISCV_ADD16);
    eval 'sub R_RISCV_ADD32 () {35;}' unless defined(&R_RISCV_ADD32);
    eval 'sub R_RISCV_ADD64 () {36;}' unless defined(&R_RISCV_ADD64);
    eval 'sub R_RISCV_SUB8 () {37;}' unless defined(&R_RISCV_SUB8);
    eval 'sub R_RISCV_SUB16 () {38;}' unless defined(&R_RISCV_SUB16);
    eval 'sub R_RISCV_SUB32 () {39;}' unless defined(&R_RISCV_SUB32);
    eval 'sub R_RISCV_SUB64 () {40;}' unless defined(&R_RISCV_SUB64);
    eval 'sub R_RISCV_GNU_VTINHERIT () {41;}' unless defined(&R_RISCV_GNU_VTINHERIT);
    eval 'sub R_RISCV_GNU_VTENTRY () {42;}' unless defined(&R_RISCV_GNU_VTENTRY);
    eval 'sub R_RISCV_ALIGN () {43;}' unless defined(&R_RISCV_ALIGN);
    eval 'sub R_RISCV_RVC_BRANCH () {44;}' unless defined(&R_RISCV_RVC_BRANCH);
    eval 'sub R_RISCV_RVC_JUMP () {45;}' unless defined(&R_RISCV_RVC_JUMP);
    eval 'sub R_RISCV_RVC_LUI () {46;}' unless defined(&R_RISCV_RVC_LUI);
    eval 'sub R_RISCV_GPREL_I () {47;}' unless defined(&R_RISCV_GPREL_I);
    eval 'sub R_RISCV_GPREL_S () {48;}' unless defined(&R_RISCV_GPREL_S);
    eval 'sub R_RISCV_TPREL_I () {49;}' unless defined(&R_RISCV_TPREL_I);
    eval 'sub R_RISCV_TPREL_S () {50;}' unless defined(&R_RISCV_TPREL_S);
    eval 'sub R_RISCV_RELAX () {51;}' unless defined(&R_RISCV_RELAX);
    eval 'sub R_RISCV_SUB6 () {52;}' unless defined(&R_RISCV_SUB6);
    eval 'sub R_RISCV_SET6 () {53;}' unless defined(&R_RISCV_SET6);
    eval 'sub R_RISCV_SET8 () {54;}' unless defined(&R_RISCV_SET8);
    eval 'sub R_RISCV_SET16 () {55;}' unless defined(&R_RISCV_SET16);
    eval 'sub R_RISCV_SET32 () {56;}' unless defined(&R_RISCV_SET32);
    eval 'sub R_RISCV_32_PCREL () {57;}' unless defined(&R_RISCV_32_PCREL);
    eval 'sub R_RISCV_IRELATIVE () {58;}' unless defined(&R_RISCV_IRELATIVE);
    eval 'sub R_RISCV_NUM () {59;}' unless defined(&R_RISCV_NUM);
    eval 'sub R_BPF_NONE () {0;}' unless defined(&R_BPF_NONE);
    eval 'sub R_BPF_64_64 () {1;}' unless defined(&R_BPF_64_64);
    eval 'sub R_BPF_64_32 () {10;}' unless defined(&R_BPF_64_32);
    eval 'sub R_METAG_HIADDR16 () {0;}' unless defined(&R_METAG_HIADDR16);
    eval 'sub R_METAG_LOADDR16 () {1;}' unless defined(&R_METAG_LOADDR16);
    eval 'sub R_METAG_ADDR32 () {2;}' unless defined(&R_METAG_ADDR32);
    eval 'sub R_METAG_NONE () {3;}' unless defined(&R_METAG_NONE);
    eval 'sub R_METAG_RELBRANCH () {4;}' unless defined(&R_METAG_RELBRANCH);
    eval 'sub R_METAG_GETSETOFF () {5;}' unless defined(&R_METAG_GETSETOFF);
    eval 'sub R_METAG_REG32OP1 () {6;}' unless defined(&R_METAG_REG32OP1);
    eval 'sub R_METAG_REG32OP2 () {7;}' unless defined(&R_METAG_REG32OP2);
    eval 'sub R_METAG_REG32OP3 () {8;}' unless defined(&R_METAG_REG32OP3);
    eval 'sub R_METAG_REG16OP1 () {9;}' unless defined(&R_METAG_REG16OP1);
    eval 'sub R_METAG_REG16OP2 () {10;}' unless defined(&R_METAG_REG16OP2);
    eval 'sub R_METAG_REG16OP3 () {11;}' unless defined(&R_METAG_REG16OP3);
    eval 'sub R_METAG_REG32OP4 () {12;}' unless defined(&R_METAG_REG32OP4);
    eval 'sub R_METAG_HIOG () {13;}' unless defined(&R_METAG_HIOG);
    eval 'sub R_METAG_LOOG () {14;}' unless defined(&R_METAG_LOOG);
    eval 'sub R_METAG_REL8 () {15;}' unless defined(&R_METAG_REL8);
    eval 'sub R_METAG_REL16 () {16;}' unless defined(&R_METAG_REL16);
    eval 'sub R_METAG_GNU_VTINHERIT () {30;}' unless defined(&R_METAG_GNU_VTINHERIT);
    eval 'sub R_METAG_GNU_VTENTRY () {31;}' unless defined(&R_METAG_GNU_VTENTRY);
    eval 'sub R_METAG_HI16_GOTOFF () {32;}' unless defined(&R_METAG_HI16_GOTOFF);
    eval 'sub R_METAG_LO16_GOTOFF () {33;}' unless defined(&R_METAG_LO16_GOTOFF);
    eval 'sub R_METAG_GETSET_GOTOFF () {34;}' unless defined(&R_METAG_GETSET_GOTOFF);
    eval 'sub R_METAG_GETSET_GOT () {35;}' unless defined(&R_METAG_GETSET_GOT);
    eval 'sub R_METAG_HI16_GOTPC () {36;}' unless defined(&R_METAG_HI16_GOTPC);
    eval 'sub R_METAG_LO16_GOTPC () {37;}' unless defined(&R_METAG_LO16_GOTPC);
    eval 'sub R_METAG_HI16_PLT () {38;}' unless defined(&R_METAG_HI16_PLT);
    eval 'sub R_METAG_LO16_PLT () {39;}' unless defined(&R_METAG_LO16_PLT);
    eval 'sub R_METAG_RELBRANCH_PLT () {40;}' unless defined(&R_METAG_RELBRANCH_PLT);
    eval 'sub R_METAG_GOTOFF () {41;}' unless defined(&R_METAG_GOTOFF);
    eval 'sub R_METAG_PLT () {42;}' unless defined(&R_METAG_PLT);
    eval 'sub R_METAG_COPY () {43;}' unless defined(&R_METAG_COPY);
    eval 'sub R_METAG_JMP_SLOT () {44;}' unless defined(&R_METAG_JMP_SLOT);
    eval 'sub R_METAG_RELATIVE () {45;}' unless defined(&R_METAG_RELATIVE);
    eval 'sub R_METAG_GLOB_DAT () {46;}' unless defined(&R_METAG_GLOB_DAT);
    eval 'sub R_METAG_TLS_GD () {47;}' unless defined(&R_METAG_TLS_GD);
    eval 'sub R_METAG_TLS_LDM () {48;}' unless defined(&R_METAG_TLS_LDM);
    eval 'sub R_METAG_TLS_LDO_HI16 () {49;}' unless defined(&R_METAG_TLS_LDO_HI16);
    eval 'sub R_METAG_TLS_LDO_LO16 () {50;}' unless defined(&R_METAG_TLS_LDO_LO16);
    eval 'sub R_METAG_TLS_LDO () {51;}' unless defined(&R_METAG_TLS_LDO);
    eval 'sub R_METAG_TLS_IE () {52;}' unless defined(&R_METAG_TLS_IE);
    eval 'sub R_METAG_TLS_IENONPIC () {53;}' unless defined(&R_METAG_TLS_IENONPIC);
    eval 'sub R_METAG_TLS_IENONPIC_HI16 () {54;}' unless defined(&R_METAG_TLS_IENONPIC_HI16);
    eval 'sub R_METAG_TLS_IENONPIC_LO16 () {55;}' unless defined(&R_METAG_TLS_IENONPIC_LO16);
    eval 'sub R_METAG_TLS_TPOFF () {56;}' unless defined(&R_METAG_TLS_TPOFF);
    eval 'sub R_METAG_TLS_DTPMOD () {57;}' unless defined(&R_METAG_TLS_DTPMOD);
    eval 'sub R_METAG_TLS_DTPOFF () {58;}' unless defined(&R_METAG_TLS_DTPOFF);
    eval 'sub R_METAG_TLS_LE () {59;}' unless defined(&R_METAG_TLS_LE);
    eval 'sub R_METAG_TLS_LE_HI16 () {60;}' unless defined(&R_METAG_TLS_LE_HI16);
    eval 'sub R_METAG_TLS_LE_LO16 () {61;}' unless defined(&R_METAG_TLS_LE_LO16);
    eval 'sub R_NDS32_NONE () {0;}' unless defined(&R_NDS32_NONE);
    eval 'sub R_NDS32_32_RELA () {20;}' unless defined(&R_NDS32_32_RELA);
    eval 'sub R_NDS32_COPY () {39;}' unless defined(&R_NDS32_COPY);
    eval 'sub R_NDS32_GLOB_DAT () {40;}' unless defined(&R_NDS32_GLOB_DAT);
    eval 'sub R_NDS32_JMP_SLOT () {41;}' unless defined(&R_NDS32_JMP_SLOT);
    eval 'sub R_NDS32_RELATIVE () {42;}' unless defined(&R_NDS32_RELATIVE);
    eval 'sub R_NDS32_TLS_TPOFF () {102;}' unless defined(&R_NDS32_TLS_TPOFF);
    eval 'sub R_NDS32_TLS_DESC () {119;}' unless defined(&R_NDS32_TLS_DESC);
    eval 'sub R_ARC_NONE () {0x;}' unless defined(&R_ARC_NONE);
    eval 'sub R_ARC_8 () {0x1;}' unless defined(&R_ARC_8);
    eval 'sub R_ARC_16 () {0x2;}' unless defined(&R_ARC_16);
    eval 'sub R_ARC_24 () {0x3;}' unless defined(&R_ARC_24);
    eval 'sub R_ARC_32 () {0x4;}' unless defined(&R_ARC_32);
    eval 'sub R_ARC_B26 () {0x5;}' unless defined(&R_ARC_B26);
    eval 'sub R_ARC_B22_PCREL () {0x6;}' unless defined(&R_ARC_B22_PCREL);
    eval 'sub R_ARC_H30 () {0x7;}' unless defined(&R_ARC_H30);
    eval 'sub R_ARC_N8 () {0x8;}' unless defined(&R_ARC_N8);
    eval 'sub R_ARC_N16 () {0x9;}' unless defined(&R_ARC_N16);
    eval 'sub R_ARC_N24 () {0xa;}' unless defined(&R_ARC_N24);
    eval 'sub R_ARC_N32 () {0xb;}' unless defined(&R_ARC_N32);
    eval 'sub R_ARC_SDA () {0xc;}' unless defined(&R_ARC_SDA);
    eval 'sub R_ARC_SECTOFF () {0xd;}' unless defined(&R_ARC_SECTOFF);
    eval 'sub R_ARC_S21H_PCREL () {0xe;}' unless defined(&R_ARC_S21H_PCREL);
    eval 'sub R_ARC_S21W_PCREL () {0xf;}' unless defined(&R_ARC_S21W_PCREL);
    eval 'sub R_ARC_S25H_PCREL () {0x10;}' unless defined(&R_ARC_S25H_PCREL);
    eval 'sub R_ARC_S25W_PCREL () {0x11;}' unless defined(&R_ARC_S25W_PCREL);
    eval 'sub R_ARC_SDA32 () {0x12;}' unless defined(&R_ARC_SDA32);
    eval 'sub R_ARC_SDA_LDST () {0x13;}' unless defined(&R_ARC_SDA_LDST);
    eval 'sub R_ARC_SDA_LDST1 () {0x14;}' unless defined(&R_ARC_SDA_LDST1);
    eval 'sub R_ARC_SDA_LDST2 () {0x15;}' unless defined(&R_ARC_SDA_LDST2);
    eval 'sub R_ARC_SDA16_LD () {0x16;}' unless defined(&R_ARC_SDA16_LD);
    eval 'sub R_ARC_SDA16_LD1 () {0x17;}' unless defined(&R_ARC_SDA16_LD1);
    eval 'sub R_ARC_SDA16_LD2 () {0x18;}' unless defined(&R_ARC_SDA16_LD2);
    eval 'sub R_ARC_S13_PCREL () {0x19;}' unless defined(&R_ARC_S13_PCREL);
    eval 'sub R_ARC_W () {0x1a;}' unless defined(&R_ARC_W);
    eval 'sub R_ARC_32_ME () {0x1b;}' unless defined(&R_ARC_32_ME);
    eval 'sub R_ARC_N32_ME () {0x1c;}' unless defined(&R_ARC_N32_ME);
    eval 'sub R_ARC_SECTOFF_ME () {0x1d;}' unless defined(&R_ARC_SECTOFF_ME);
    eval 'sub R_ARC_SDA32_ME () {0x1e;}' unless defined(&R_ARC_SDA32_ME);
    eval 'sub R_ARC_W_ME () {0x1f;}' unless defined(&R_ARC_W_ME);
    eval 'sub R_ARC_H30_ME () {0x20;}' unless defined(&R_ARC_H30_ME);
    eval 'sub R_ARC_SECTOFF_U8 () {0x21;}' unless defined(&R_ARC_SECTOFF_U8);
    eval 'sub R_ARC_SECTOFF_S9 () {0x22;}' unless defined(&R_ARC_SECTOFF_S9);
    eval 'sub R_AC_SECTOFF_U8 () {0x23;}' unless defined(&R_AC_SECTOFF_U8);
    eval 'sub R_AC_SECTOFF_U8_1 () {0x24;}' unless defined(&R_AC_SECTOFF_U8_1);
    eval 'sub R_AC_SECTOFF_U8_2 () {0x25;}' unless defined(&R_AC_SECTOFF_U8_2);
    eval 'sub R_AC_SECTOFF_S9 () {0x26;}' unless defined(&R_AC_SECTOFF_S9);
    eval 'sub R_AC_SECTOFF_S9_1 () {0x27;}' unless defined(&R_AC_SECTOFF_S9_1);
    eval 'sub R_AC_SECTOFF_S9_2 () {0x28;}' unless defined(&R_AC_SECTOFF_S9_2);
    eval 'sub R_ARC_SECTOFF_ME_1 () {0x29;}' unless defined(&R_ARC_SECTOFF_ME_1);
    eval 'sub R_ARC_SECTOFF_ME_2 () {0x2a;}' unless defined(&R_ARC_SECTOFF_ME_2);
    eval 'sub R_ARC_SECTOFF_1 () {0x2b;}' unless defined(&R_ARC_SECTOFF_1);
    eval 'sub R_ARC_SECTOFF_2 () {0x2c;}' unless defined(&R_ARC_SECTOFF_2);
    eval 'sub R_ARC_PC32 () {0x32;}' unless defined(&R_ARC_PC32);
    eval 'sub R_ARC_GOTPC32 () {0x33;}' unless defined(&R_ARC_GOTPC32);
    eval 'sub R_ARC_PLT32 () {0x34;}' unless defined(&R_ARC_PLT32);
    eval 'sub R_ARC_COPY () {0x35;}' unless defined(&R_ARC_COPY);
    eval 'sub R_ARC_GLOB_DAT () {0x36;}' unless defined(&R_ARC_GLOB_DAT);
    eval 'sub R_ARC_JUMP_SLOT () {0x37;}' unless defined(&R_ARC_JUMP_SLOT);
    eval 'sub R_ARC_RELATIVE () {0x38;}' unless defined(&R_ARC_RELATIVE);
    eval 'sub R_ARC_GOTOFF () {0x39;}' unless defined(&R_ARC_GOTOFF);
    eval 'sub R_ARC_GOTPC () {0x3a;}' unless defined(&R_ARC_GOTPC);
    eval 'sub R_ARC_GOT32 () {0x3b;}' unless defined(&R_ARC_GOT32);
    eval 'sub R_ARC_TLS_DTPMOD () {0x42;}' unless defined(&R_ARC_TLS_DTPMOD);
    eval 'sub R_ARC_TLS_DTPOFF () {0x43;}' unless defined(&R_ARC_TLS_DTPOFF);
    eval 'sub R_ARC_TLS_TPOFF () {0x44;}' unless defined(&R_ARC_TLS_TPOFF);
    eval 'sub R_ARC_TLS_GD_GOT () {0x45;}' unless defined(&R_ARC_TLS_GD_GOT);
    eval 'sub R_ARC_TLS_GD_LD () {0x46;}' unless defined(&R_ARC_TLS_GD_LD);
    eval 'sub R_ARC_TLS_GD_CALL () {0x47;}' unless defined(&R_ARC_TLS_GD_CALL);
    eval 'sub R_ARC_TLS_IE_GOT () {0x48;}' unless defined(&R_ARC_TLS_IE_GOT);
    eval 'sub R_ARC_TLS_DTPOFF_S9 () {0x4a;}' unless defined(&R_ARC_TLS_DTPOFF_S9);
    eval 'sub R_ARC_TLS_LE_S9 () {0x4a;}' unless defined(&R_ARC_TLS_LE_S9);
    eval 'sub R_ARC_TLS_LE_32 () {0x4b;}' unless defined(&R_ARC_TLS_LE_32);
    eval 'sub R_OR1K_NONE () {0;}' unless defined(&R_OR1K_NONE);
    eval 'sub R_OR1K_32 () {1;}' unless defined(&R_OR1K_32);
    eval 'sub R_OR1K_16 () {2;}' unless defined(&R_OR1K_16);
    eval 'sub R_OR1K_8 () {3;}' unless defined(&R_OR1K_8);
    eval 'sub R_OR1K_LO_16_IN_INSN () {4;}' unless defined(&R_OR1K_LO_16_IN_INSN);
    eval 'sub R_OR1K_HI_16_IN_INSN () {5;}' unless defined(&R_OR1K_HI_16_IN_INSN);
    eval 'sub R_OR1K_INSN_REL_26 () {6;}' unless defined(&R_OR1K_INSN_REL_26);
    eval 'sub R_OR1K_GNU_VTENTRY () {7;}' unless defined(&R_OR1K_GNU_VTENTRY);
    eval 'sub R_OR1K_GNU_VTINHERIT () {8;}' unless defined(&R_OR1K_GNU_VTINHERIT);
    eval 'sub R_OR1K_32_PCREL () {9;}' unless defined(&R_OR1K_32_PCREL);
    eval 'sub R_OR1K_16_PCREL () {10;}' unless defined(&R_OR1K_16_PCREL);
    eval 'sub R_OR1K_8_PCREL () {11;}' unless defined(&R_OR1K_8_PCREL);
    eval 'sub R_OR1K_GOTPC_HI16 () {12;}' unless defined(&R_OR1K_GOTPC_HI16);
    eval 'sub R_OR1K_GOTPC_LO16 () {13;}' unless defined(&R_OR1K_GOTPC_LO16);
    eval 'sub R_OR1K_GOT16 () {14;}' unless defined(&R_OR1K_GOT16);
    eval 'sub R_OR1K_PLT26 () {15;}' unless defined(&R_OR1K_PLT26);
    eval 'sub R_OR1K_GOTOFF_HI16 () {16;}' unless defined(&R_OR1K_GOTOFF_HI16);
    eval 'sub R_OR1K_GOTOFF_LO16 () {17;}' unless defined(&R_OR1K_GOTOFF_LO16);
    eval 'sub R_OR1K_COPY () {18;}' unless defined(&R_OR1K_COPY);
    eval 'sub R_OR1K_GLOB_DAT () {19;}' unless defined(&R_OR1K_GLOB_DAT);
    eval 'sub R_OR1K_JMP_SLOT () {20;}' unless defined(&R_OR1K_JMP_SLOT);
    eval 'sub R_OR1K_RELATIVE () {21;}' unless defined(&R_OR1K_RELATIVE);
    eval 'sub R_OR1K_TLS_GD_HI16 () {22;}' unless defined(&R_OR1K_TLS_GD_HI16);
    eval 'sub R_OR1K_TLS_GD_LO16 () {23;}' unless defined(&R_OR1K_TLS_GD_LO16);
    eval 'sub R_OR1K_TLS_LDM_HI16 () {24;}' unless defined(&R_OR1K_TLS_LDM_HI16);
    eval 'sub R_OR1K_TLS_LDM_LO16 () {25;}' unless defined(&R_OR1K_TLS_LDM_LO16);
    eval 'sub R_OR1K_TLS_LDO_HI16 () {26;}' unless defined(&R_OR1K_TLS_LDO_HI16);
    eval 'sub R_OR1K_TLS_LDO_LO16 () {27;}' unless defined(&R_OR1K_TLS_LDO_LO16);
    eval 'sub R_OR1K_TLS_IE_HI16 () {28;}' unless defined(&R_OR1K_TLS_IE_HI16);
    eval 'sub R_OR1K_TLS_IE_LO16 () {29;}' unless defined(&R_OR1K_TLS_IE_LO16);
    eval 'sub R_OR1K_TLS_LE_HI16 () {30;}' unless defined(&R_OR1K_TLS_LE_HI16);
    eval 'sub R_OR1K_TLS_LE_LO16 () {31;}' unless defined(&R_OR1K_TLS_LE_LO16);
    eval 'sub R_OR1K_TLS_TPOFF () {32;}' unless defined(&R_OR1K_TLS_TPOFF);
    eval 'sub R_OR1K_TLS_DTPOFF () {33;}' unless defined(&R_OR1K_TLS_DTPOFF);
    eval 'sub R_OR1K_TLS_DTPMOD () {34;}' unless defined(&R_OR1K_TLS_DTPMOD);
}
1;
